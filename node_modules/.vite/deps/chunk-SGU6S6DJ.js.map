{
  "version": 3,
  "sources": ["../../fast-xml-parser/src/util.js", "../../fast-xml-parser/src/validator.js", "../../fast-xml-parser/src/xmlparser/OptionsBuilder.js", "../../fast-xml-parser/src/xmlparser/xmlNode.js", "../../fast-xml-parser/src/xmlparser/DocTypeReader.js", "../../strnum/strnum.js", "../../fast-xml-parser/src/xmlparser/OrderedObjParser.js", "../../fast-xml-parser/src/xmlparser/node2json.js", "../../fast-xml-parser/src/xmlparser/XMLParser.js", "../../fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js", "../../fast-xml-parser/src/xmlbuilder/json2xml.js", "../../fast-xml-parser/src/fxp.js", "../../@smithy/middleware-stack/dist-es/MiddlewareStack.js", "../../@smithy/smithy-client/dist-es/client.js", "../../@smithy/types/dist-es/auth/auth.js", "../../@smithy/types/dist-es/auth/HttpApiKeyAuth.js", "../../@smithy/types/dist-es/endpoint.js", "../../@smithy/types/dist-es/extensions/checksum.js", "../../@smithy/types/dist-es/http.js", "../../@smithy/types/dist-es/middleware.js", "../../@smithy/types/dist-es/profile.js", "../../@smithy/types/dist-es/transfer.js", "../../@smithy/smithy-client/dist-es/command.js", "../../@smithy/protocol-http/dist-es/httpRequest.js", "../../@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js", "../../@smithy/protocol-http/dist-es/httpResponse.js", "../../@smithy/protocol-http/dist-es/isValidHostname.js", "../../@smithy/util-middleware/dist-es/getSmithyContext.js", "../../@smithy/util-middleware/dist-es/normalizeProvider.js", "../../@smithy/core/dist-es/middleware-http-auth-scheme/resolveAuthOptions.js", "../../@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js", "../../@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js", "../../@smithy/middleware-serde/dist-es/deserializerMiddleware.js", "../../@smithy/middleware-serde/dist-es/serializerMiddleware.js", "../../@smithy/middleware-serde/dist-es/serdePlugin.js", "../../@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js", "../../@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js", "../../@smithy/core/dist-es/pagination/createPaginator.js", "../../@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js", "../../@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js", "../../@smithy/core/dist-es/normalizeProvider.js", "../../@smithy/util-base64/dist-es/constants.browser.js", "../../@smithy/util-base64/dist-es/fromBase64.browser.js", "../../@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../../@smithy/util-utf8/dist-es/toUint8Array.js", "../../@smithy/util-utf8/dist-es/toUtf8.browser.js", "../../@smithy/util-base64/dist-es/toBase64.browser.js", "../../@smithy/util-stream/dist-es/blob/transforms.js", "../../@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js", "../../@smithy/util-stream/dist-es/checksum/ChecksumStream.browser.js", "../../@smithy/util-stream/dist-es/stream-type-check.js", "../../@smithy/util-stream/dist-es/checksum/createChecksumStream.browser.js", "../../@smithy/util-stream/dist-es/ByteArrayCollector.js", "../../@smithy/util-stream/dist-es/createBufferedReadableStream.js", "../../@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.browser.js", "../../@smithy/util-stream/dist-es/headStream.browser.js", "../../@smithy/util-uri-escape/dist-es/escape-uri.js", "../../@smithy/querystring-builder/dist-es/index.js", "../../@smithy/fetch-http-handler/dist-es/create-request.js", "../../@smithy/fetch-http-handler/dist-es/request-timeout.js", "../../@smithy/fetch-http-handler/dist-es/fetch-http-handler.js", "../../@smithy/fetch-http-handler/dist-es/stream-collector.js", "../../@smithy/util-hex-encoding/dist-es/index.js", "../../@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js", "../../@smithy/util-stream/dist-es/splitStream.browser.js", "../../@smithy/core/dist-es/submodules/protocols/collect-stream-body.js", "../../@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js", "../../@smithy/core/dist-es/submodules/schema/TypeRegistry.js", "../../@smithy/core/dist-es/submodules/serde/parse-utils.js", "../../@smithy/core/dist-es/submodules/serde/date-utils.js", "../../@smithy/core/dist-es/submodules/serde/lazy-json.js", "../../@smithy/core/dist-es/submodules/serde/quote-header.js", "../../@smithy/core/dist-es/submodules/protocols/resolve-path.js", "../../@smithy/core/dist-es/submodules/protocols/requestBuilder.js", "../../@smithy/core/dist-es/setFeature.js", "../../@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js", "../../@smithy/smithy-client/dist-es/constants.js", "../../@smithy/smithy-client/dist-es/create-aggregated-client.js", "../../@smithy/smithy-client/dist-es/exceptions.js", "../../@smithy/smithy-client/dist-es/default-error-handler.js", "../../@smithy/smithy-client/dist-es/defaults-mode.js", "../../@smithy/smithy-client/dist-es/extensions/checksum.js", "../../@smithy/smithy-client/dist-es/extensions/retry.js", "../../@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js", "../../@smithy/smithy-client/dist-es/get-array-if-single-item.js", "../../@smithy/smithy-client/dist-es/get-value-from-text-node.js", "../../@smithy/smithy-client/dist-es/is-serializable-header-value.js", "../../@smithy/smithy-client/dist-es/NoOpLogger.js", "../../@smithy/smithy-client/dist-es/object-mapping.js", "../../@smithy/smithy-client/dist-es/ser-utils.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/check-content-length-header.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-endpoint-middleware.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-middleware.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-expires-middleware.js", "../../@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js", "../../@aws-sdk/core/dist-es/submodules/client/setFeature.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js", "../../@smithy/property-provider/dist-es/memoize.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js", "../../@smithy/signature-v4/dist-es/constants.js", "../../@smithy/signature-v4/dist-es/credentialDerivation.js", "../../@smithy/signature-v4/dist-es/getCanonicalHeaders.js", "../../@smithy/is-array-buffer/dist-es/index.js", "../../@smithy/signature-v4/dist-es/getPayloadHash.js", "../../@smithy/signature-v4/dist-es/HeaderFormatter.js", "../../@smithy/signature-v4/dist-es/headerUtil.js", "../../@smithy/signature-v4/dist-es/moveHeadersToQuery.js", "../../@smithy/signature-v4/dist-es/prepareRequest.js", "../../@smithy/signature-v4/dist-es/getCanonicalQuery.js", "../../@smithy/signature-v4/dist-es/utilDate.js", "../../@smithy/signature-v4/dist-es/SignatureV4Base.js", "../../@smithy/signature-v4/dist-es/SignatureV4.js", "../../@smithy/signature-v4/dist-es/signature-v4a-container.js", "../../@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js", "../../@smithy/util-body-length-browser/dist-es/calculateBodyLength.js", "../../@aws-sdk/core/dist-es/submodules/protocols/common.js", "../../@aws-sdk/core/dist-es/submodules/protocols/json/jsonReplacer.js", "../../@aws-sdk/core/dist-es/submodules/protocols/xml/XmlShapeDeserializer.js", "../../@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js", "../../@aws-sdk/xml-builder/dist-es/escape-attribute.js", "../../@aws-sdk/xml-builder/dist-es/escape-element.js", "../../@aws-sdk/xml-builder/dist-es/XmlText.js", "../../@aws-sdk/xml-builder/dist-es/XmlNode.js", "../../@smithy/util-config-provider/dist-es/types.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/constants.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressMiddleware.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/signS3Express.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressHttpSigningMiddleware.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCache.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCacheEntry.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityProviderImpl.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/SignatureV4S3Express.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/throw-200-exceptions.js", "../../@aws-sdk/util-arn-parser/dist-es/index.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/bucket-endpoint-middleware.js", "../../@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js", "../../@smithy/middleware-endpoint/dist-es/service-customizations/s3.js", "../../@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js", "../../@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js", "../../@smithy/querystring-parser/dist-es/index.js", "../../@smithy/url-parser/dist-es/index.js", "../../@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js", "../../@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js", "../../@smithy/middleware-endpoint/dist-es/endpointMiddleware.js", "../../@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js", "../../@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js", "../../@aws-sdk/signature-v4-multi-region/dist-es/signature-v4-crt-container.js", "../../@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js"],
  "sourcesContent": ["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n", "'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n", "\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;", "'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;", "const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n", "const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\r\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\r\n// const octRegex = /^0x[a-z0-9]+/;\r\n// const binRegex = /0x[a-z0-9]+/;\r\n\r\n \r\nconst consider = {\r\n    hex :  true,\r\n    // oct: false,\r\n    leadingZeros: true,\r\n    decimalPoint: \"\\.\",\r\n    eNotation: true,\r\n    //skipLike: /regex/\r\n};\r\n\r\nfunction toNumber(str, options = {}){\r\n    options = Object.assign({}, consider, options );\r\n    if(!str || typeof str !== \"string\" ) return str;\r\n    \r\n    let trimmedStr  = str.trim();\r\n    \r\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\r\n    else if(str===\"0\") return 0;\r\n    else if (options.hex && hexRegex.test(trimmedStr)) {\r\n        return parse_int(trimmedStr, 16);\r\n    // }else if (options.oct && octRegex.test(str)) {\r\n    //     return Number.parseInt(val, 8);\r\n    }else if (trimmedStr.search(/[eE]/)!== -1) { //eNotation\r\n        const notation = trimmedStr.match(/^([-\\+])?(0*)([0-9]*(\\.[0-9]*)?[eE][-\\+]?[0-9]+)$/); \r\n        // +00.123 => [ , '+', '00', '.123', ..\r\n        if(notation){\r\n            // console.log(notation)\r\n            if(options.leadingZeros){ //accept with leading zeros\r\n                trimmedStr = (notation[1] || \"\") + notation[3];\r\n            }else{\r\n                if(notation[2] === \"0\" && notation[3][0]=== \".\"){ //valid number\r\n                }else{\r\n                    return str;\r\n                }\r\n            }\r\n            return options.eNotation ? Number(trimmedStr) : str;\r\n        }else{\r\n            return str;\r\n        }\r\n    // }else if (options.parseBin && binRegex.test(str)) {\r\n    //     return Number.parseInt(val, 2);\r\n    }else{\r\n        //separate negative sign, leading zeros, and rest number\r\n        const match = numRegex.exec(trimmedStr);\r\n        // +00.123 => [ , '+', '00', '.123', ..\r\n        if(match){\r\n            const sign = match[1];\r\n            const leadingZeros = match[2];\r\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\r\n            //trim ending zeros for floating number\r\n            \r\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\r\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\r\n            else if(options.leadingZeros && leadingZeros===str) return 0; //00\r\n            \r\n            else{//no leading zeros or leading zeros are allowed\r\n                const num = Number(trimmedStr);\r\n                const numStr = \"\" + num;\r\n\r\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\r\n                    if(options.eNotation) return num;\r\n                    else return str;\r\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\r\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\r\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\r\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\r\n                    else return str;\r\n                }\r\n                \r\n                if(leadingZeros){\r\n                    return (numTrimmedByZeros === numStr) || (sign+numTrimmedByZeros === numStr) ? num : str\r\n                }else  {\r\n                    return (trimmedStr === numStr) || (trimmedStr === sign+numStr) ? num : str\r\n                }\r\n            }\r\n        }else{ //non-numeric string\r\n            return str;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} numStr without leading zeros\r\n * @returns \r\n */\r\nfunction trimZeros(numStr){\r\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\r\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\r\n        if(numStr === \".\")  numStr = \"0\";\r\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\r\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\r\n        return numStr;\r\n    }\r\n    return numStr;\r\n}\r\n\r\nfunction parse_int(numStr, base){\r\n    //polyfill\r\n    if(parseInt) return parseInt(numStr, base);\r\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\r\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\r\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\r\n}\r\n\r\nmodule.exports = toNumber;", "'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n", "'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n", "const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;", "const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n", "'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1);\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n", "'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}", "const getAllAliases = (name, aliases) => {\r\n    const _aliases = [];\r\n    if (name) {\r\n        _aliases.push(name);\r\n    }\r\n    if (aliases) {\r\n        for (const alias of aliases) {\r\n            _aliases.push(alias);\r\n        }\r\n    }\r\n    return _aliases;\r\n};\r\nconst getMiddlewareNameWithAliases = (name, aliases) => {\r\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\r\n};\r\nexport const constructStack = () => {\r\n    let absoluteEntries = [];\r\n    let relativeEntries = [];\r\n    let identifyOnResolve = false;\r\n    const entriesNameSet = new Set();\r\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\r\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\r\n    const removeByName = (toRemove) => {\r\n        let isRemoved = false;\r\n        const filterCb = (entry) => {\r\n            const aliases = getAllAliases(entry.name, entry.aliases);\r\n            if (aliases.includes(toRemove)) {\r\n                isRemoved = true;\r\n                for (const alias of aliases) {\r\n                    entriesNameSet.delete(alias);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        absoluteEntries = absoluteEntries.filter(filterCb);\r\n        relativeEntries = relativeEntries.filter(filterCb);\r\n        return isRemoved;\r\n    };\r\n    const removeByReference = (toRemove) => {\r\n        let isRemoved = false;\r\n        const filterCb = (entry) => {\r\n            if (entry.middleware === toRemove) {\r\n                isRemoved = true;\r\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\r\n                    entriesNameSet.delete(alias);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        absoluteEntries = absoluteEntries.filter(filterCb);\r\n        relativeEntries = relativeEntries.filter(filterCb);\r\n        return isRemoved;\r\n    };\r\n    const cloneTo = (toStack) => {\r\n        absoluteEntries.forEach((entry) => {\r\n            toStack.add(entry.middleware, { ...entry });\r\n        });\r\n        relativeEntries.forEach((entry) => {\r\n            toStack.addRelativeTo(entry.middleware, { ...entry });\r\n        });\r\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\r\n        return toStack;\r\n    };\r\n    const expandRelativeMiddlewareList = (from) => {\r\n        const expandedMiddlewareList = [];\r\n        from.before.forEach((entry) => {\r\n            if (entry.before.length === 0 && entry.after.length === 0) {\r\n                expandedMiddlewareList.push(entry);\r\n            }\r\n            else {\r\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\r\n            }\r\n        });\r\n        expandedMiddlewareList.push(from);\r\n        from.after.reverse().forEach((entry) => {\r\n            if (entry.before.length === 0 && entry.after.length === 0) {\r\n                expandedMiddlewareList.push(entry);\r\n            }\r\n            else {\r\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\r\n            }\r\n        });\r\n        return expandedMiddlewareList;\r\n    };\r\n    const getMiddlewareList = (debug = false) => {\r\n        const normalizedAbsoluteEntries = [];\r\n        const normalizedRelativeEntries = [];\r\n        const normalizedEntriesNameMap = {};\r\n        absoluteEntries.forEach((entry) => {\r\n            const normalizedEntry = {\r\n                ...entry,\r\n                before: [],\r\n                after: [],\r\n            };\r\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\r\n                normalizedEntriesNameMap[alias] = normalizedEntry;\r\n            }\r\n            normalizedAbsoluteEntries.push(normalizedEntry);\r\n        });\r\n        relativeEntries.forEach((entry) => {\r\n            const normalizedEntry = {\r\n                ...entry,\r\n                before: [],\r\n                after: [],\r\n            };\r\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\r\n                normalizedEntriesNameMap[alias] = normalizedEntry;\r\n            }\r\n            normalizedRelativeEntries.push(normalizedEntry);\r\n        });\r\n        normalizedRelativeEntries.forEach((entry) => {\r\n            if (entry.toMiddleware) {\r\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\r\n                if (toMiddleware === undefined) {\r\n                    if (debug) {\r\n                        return;\r\n                    }\r\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\r\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\r\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\r\n                }\r\n                if (entry.relation === \"after\") {\r\n                    toMiddleware.after.push(entry);\r\n                }\r\n                if (entry.relation === \"before\") {\r\n                    toMiddleware.before.push(entry);\r\n                }\r\n            }\r\n        });\r\n        const mainChain = sort(normalizedAbsoluteEntries)\r\n            .map(expandRelativeMiddlewareList)\r\n            .reduce((wholeList, expandedMiddlewareList) => {\r\n            wholeList.push(...expandedMiddlewareList);\r\n            return wholeList;\r\n        }, []);\r\n        return mainChain;\r\n    };\r\n    const stack = {\r\n        add: (middleware, options = {}) => {\r\n            const { name, override, aliases: _aliases } = options;\r\n            const entry = {\r\n                step: \"initialize\",\r\n                priority: \"normal\",\r\n                middleware,\r\n                ...options,\r\n            };\r\n            const aliases = getAllAliases(name, _aliases);\r\n            if (aliases.length > 0) {\r\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\r\n                    if (!override)\r\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\r\n                    for (const alias of aliases) {\r\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\r\n                        if (toOverrideIndex === -1) {\r\n                            continue;\r\n                        }\r\n                        const toOverride = absoluteEntries[toOverrideIndex];\r\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\r\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\r\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\r\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\r\n                                `${entry.priority} priority in ${entry.step} step.`);\r\n                        }\r\n                        absoluteEntries.splice(toOverrideIndex, 1);\r\n                    }\r\n                }\r\n                for (const alias of aliases) {\r\n                    entriesNameSet.add(alias);\r\n                }\r\n            }\r\n            absoluteEntries.push(entry);\r\n        },\r\n        addRelativeTo: (middleware, options) => {\r\n            const { name, override, aliases: _aliases } = options;\r\n            const entry = {\r\n                middleware,\r\n                ...options,\r\n            };\r\n            const aliases = getAllAliases(name, _aliases);\r\n            if (aliases.length > 0) {\r\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\r\n                    if (!override)\r\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\r\n                    for (const alias of aliases) {\r\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\r\n                        if (toOverrideIndex === -1) {\r\n                            continue;\r\n                        }\r\n                        const toOverride = relativeEntries[toOverrideIndex];\r\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\r\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\r\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\r\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\r\n                                `\"${entry.toMiddleware}\" middleware.`);\r\n                        }\r\n                        relativeEntries.splice(toOverrideIndex, 1);\r\n                    }\r\n                }\r\n                for (const alias of aliases) {\r\n                    entriesNameSet.add(alias);\r\n                }\r\n            }\r\n            relativeEntries.push(entry);\r\n        },\r\n        clone: () => cloneTo(constructStack()),\r\n        use: (plugin) => {\r\n            plugin.applyToStack(stack);\r\n        },\r\n        remove: (toRemove) => {\r\n            if (typeof toRemove === \"string\")\r\n                return removeByName(toRemove);\r\n            else\r\n                return removeByReference(toRemove);\r\n        },\r\n        removeByTag: (toRemove) => {\r\n            let isRemoved = false;\r\n            const filterCb = (entry) => {\r\n                const { tags, name, aliases: _aliases } = entry;\r\n                if (tags && tags.includes(toRemove)) {\r\n                    const aliases = getAllAliases(name, _aliases);\r\n                    for (const alias of aliases) {\r\n                        entriesNameSet.delete(alias);\r\n                    }\r\n                    isRemoved = true;\r\n                    return false;\r\n                }\r\n                return true;\r\n            };\r\n            absoluteEntries = absoluteEntries.filter(filterCb);\r\n            relativeEntries = relativeEntries.filter(filterCb);\r\n            return isRemoved;\r\n        },\r\n        concat: (from) => {\r\n            const cloned = cloneTo(constructStack());\r\n            cloned.use(from);\r\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\r\n            return cloned;\r\n        },\r\n        applyToStack: cloneTo,\r\n        identify: () => {\r\n            return getMiddlewareList(true).map((mw) => {\r\n                const step = mw.step ??\r\n                    mw.relation +\r\n                        \" \" +\r\n                        mw.toMiddleware;\r\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\r\n            });\r\n        },\r\n        identifyOnResolve(toggle) {\r\n            if (typeof toggle === \"boolean\")\r\n                identifyOnResolve = toggle;\r\n            return identifyOnResolve;\r\n        },\r\n        resolve: (handler, context) => {\r\n            for (const middleware of getMiddlewareList()\r\n                .map((entry) => entry.middleware)\r\n                .reverse()) {\r\n                handler = middleware(handler, context);\r\n            }\r\n            if (identifyOnResolve) {\r\n                console.log(stack.identify());\r\n            }\r\n            return handler;\r\n        },\r\n    };\r\n    return stack;\r\n};\r\nconst stepWeights = {\r\n    initialize: 5,\r\n    serialize: 4,\r\n    build: 3,\r\n    finalizeRequest: 2,\r\n    deserialize: 1,\r\n};\r\nconst priorityWeights = {\r\n    high: 3,\r\n    normal: 2,\r\n    low: 1,\r\n};\r\n", "import { constructStack } from \"@smithy/middleware-stack\";\r\nexport class Client {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.middlewareStack = constructStack();\r\n    }\r\n    send(command, optionsOrCb, cb) {\r\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\r\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\r\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\r\n        let handler;\r\n        if (useHandlerCache) {\r\n            if (!this.handlers) {\r\n                this.handlers = new WeakMap();\r\n            }\r\n            const handlers = this.handlers;\r\n            if (handlers.has(command.constructor)) {\r\n                handler = handlers.get(command.constructor);\r\n            }\r\n            else {\r\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\r\n                handlers.set(command.constructor, handler);\r\n            }\r\n        }\r\n        else {\r\n            delete this.handlers;\r\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\r\n        }\r\n        if (callback) {\r\n            handler(command)\r\n                .then((result) => callback(null, result.output), (err) => callback(err))\r\n                .catch(() => { });\r\n        }\r\n        else {\r\n            return handler(command).then((result) => result.output);\r\n        }\r\n    }\r\n    destroy() {\r\n        this.config?.requestHandler?.destroy?.();\r\n        delete this.handlers;\r\n    }\r\n}\r\n", "export var HttpAuthLocation;\r\n(function (HttpAuthLocation) {\r\n    HttpAuthLocation[\"HEADER\"] = \"header\";\r\n    HttpAuthLocation[\"QUERY\"] = \"query\";\r\n})(HttpAuthLocation || (HttpAuthLocation = {}));\r\n", "export var HttpApiKeyAuthLocation;\r\n(function (HttpApiKeyAuthLocation) {\r\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\r\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\r\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\r\n", "export var EndpointURLScheme;\r\n(function (EndpointURLScheme) {\r\n    EndpointURLScheme[\"HTTP\"] = \"http\";\r\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\r\n})(EndpointURLScheme || (EndpointURLScheme = {}));\r\n", "export var AlgorithmId;\r\n(function (AlgorithmId) {\r\n    AlgorithmId[\"MD5\"] = \"md5\";\r\n    AlgorithmId[\"CRC32\"] = \"crc32\";\r\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\r\n    AlgorithmId[\"SHA1\"] = \"sha1\";\r\n    AlgorithmId[\"SHA256\"] = \"sha256\";\r\n})(AlgorithmId || (AlgorithmId = {}));\r\nexport const getChecksumConfiguration = (runtimeConfig) => {\r\n    const checksumAlgorithms = [];\r\n    if (runtimeConfig.sha256 !== undefined) {\r\n        checksumAlgorithms.push({\r\n            algorithmId: () => AlgorithmId.SHA256,\r\n            checksumConstructor: () => runtimeConfig.sha256,\r\n        });\r\n    }\r\n    if (runtimeConfig.md5 != undefined) {\r\n        checksumAlgorithms.push({\r\n            algorithmId: () => AlgorithmId.MD5,\r\n            checksumConstructor: () => runtimeConfig.md5,\r\n        });\r\n    }\r\n    return {\r\n        addChecksumAlgorithm(algo) {\r\n            checksumAlgorithms.push(algo);\r\n        },\r\n        checksumAlgorithms() {\r\n            return checksumAlgorithms;\r\n        },\r\n    };\r\n};\r\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\r\n    const runtimeConfig = {};\r\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\r\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\r\n    });\r\n    return runtimeConfig;\r\n};\r\n", "export var FieldPosition;\r\n(function (FieldPosition) {\r\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\r\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\r\n})(FieldPosition || (FieldPosition = {}));\r\n", "export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\r\n", "export var IniSectionType;\r\n(function (IniSectionType) {\r\n    IniSectionType[\"PROFILE\"] = \"profile\";\r\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\r\n    IniSectionType[\"SERVICES\"] = \"services\";\r\n})(IniSectionType || (IniSectionType = {}));\r\n", "export var RequestHandlerProtocol;\r\n(function (RequestHandlerProtocol) {\r\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\r\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\r\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\r\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\r\n", "import { constructStack } from \"@smithy/middleware-stack\";\r\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\r\nexport class Command {\r\n    constructor() {\r\n        this.middlewareStack = constructStack();\r\n    }\r\n    static classBuilder() {\r\n        return new ClassBuilder();\r\n    }\r\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\r\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\r\n            this.middlewareStack.use(mw);\r\n        }\r\n        const stack = clientStack.concat(this.middlewareStack);\r\n        const { logger } = configuration;\r\n        const handlerExecutionContext = {\r\n            logger,\r\n            clientName,\r\n            commandName,\r\n            inputFilterSensitiveLog,\r\n            outputFilterSensitiveLog,\r\n            [SMITHY_CONTEXT_KEY]: {\r\n                commandInstance: this,\r\n                ...smithyContext,\r\n            },\r\n            ...additionalContext,\r\n        };\r\n        const { requestHandler } = configuration;\r\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\r\n    }\r\n}\r\nclass ClassBuilder {\r\n    constructor() {\r\n        this._init = () => { };\r\n        this._ep = {};\r\n        this._middlewareFn = () => [];\r\n        this._commandName = \"\";\r\n        this._clientName = \"\";\r\n        this._additionalContext = {};\r\n        this._smithyContext = {};\r\n        this._inputFilterSensitiveLog = (_) => _;\r\n        this._outputFilterSensitiveLog = (_) => _;\r\n        this._serializer = null;\r\n        this._deserializer = null;\r\n    }\r\n    init(cb) {\r\n        this._init = cb;\r\n    }\r\n    ep(endpointParameterInstructions) {\r\n        this._ep = endpointParameterInstructions;\r\n        return this;\r\n    }\r\n    m(middlewareSupplier) {\r\n        this._middlewareFn = middlewareSupplier;\r\n        return this;\r\n    }\r\n    s(service, operation, smithyContext = {}) {\r\n        this._smithyContext = {\r\n            service,\r\n            operation,\r\n            ...smithyContext,\r\n        };\r\n        return this;\r\n    }\r\n    c(additionalContext = {}) {\r\n        this._additionalContext = additionalContext;\r\n        return this;\r\n    }\r\n    n(clientName, commandName) {\r\n        this._clientName = clientName;\r\n        this._commandName = commandName;\r\n        return this;\r\n    }\r\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\r\n        this._inputFilterSensitiveLog = inputFilter;\r\n        this._outputFilterSensitiveLog = outputFilter;\r\n        return this;\r\n    }\r\n    ser(serializer) {\r\n        this._serializer = serializer;\r\n        return this;\r\n    }\r\n    de(deserializer) {\r\n        this._deserializer = deserializer;\r\n        return this;\r\n    }\r\n    sc(operation) {\r\n        this._operationSchema = operation;\r\n        this._smithyContext.operationSchema = operation;\r\n        return this;\r\n    }\r\n    build() {\r\n        const closure = this;\r\n        let CommandRef;\r\n        return (CommandRef = class extends Command {\r\n            static getEndpointParameterInstructions() {\r\n                return closure._ep;\r\n            }\r\n            constructor(...[input]) {\r\n                super();\r\n                this.serialize = closure._serializer;\r\n                this.deserialize = closure._deserializer;\r\n                this.input = input ?? {};\r\n                closure._init(this);\r\n                this.schema = closure._operationSchema;\r\n            }\r\n            resolveMiddleware(stack, configuration, options) {\r\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\r\n                    CommandCtor: CommandRef,\r\n                    middlewareFn: closure._middlewareFn,\r\n                    clientName: closure._clientName,\r\n                    commandName: closure._commandName,\r\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\r\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\r\n                    smithyContext: closure._smithyContext,\r\n                    additionalContext: closure._additionalContext,\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n", "export class HttpRequest {\r\n    constructor(options) {\r\n        this.method = options.method || \"GET\";\r\n        this.hostname = options.hostname || \"localhost\";\r\n        this.port = options.port;\r\n        this.query = options.query || {};\r\n        this.headers = options.headers || {};\r\n        this.body = options.body;\r\n        this.protocol = options.protocol\r\n            ? options.protocol.slice(-1) !== \":\"\r\n                ? `${options.protocol}:`\r\n                : options.protocol\r\n            : \"https:\";\r\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\r\n        this.username = options.username;\r\n        this.password = options.password;\r\n        this.fragment = options.fragment;\r\n    }\r\n    static clone(request) {\r\n        const cloned = new HttpRequest({\r\n            ...request,\r\n            headers: { ...request.headers },\r\n        });\r\n        if (cloned.query) {\r\n            cloned.query = cloneQuery(cloned.query);\r\n        }\r\n        return cloned;\r\n    }\r\n    static isInstance(request) {\r\n        if (!request) {\r\n            return false;\r\n        }\r\n        const req = request;\r\n        return (\"method\" in req &&\r\n            \"protocol\" in req &&\r\n            \"hostname\" in req &&\r\n            \"path\" in req &&\r\n            typeof req[\"query\"] === \"object\" &&\r\n            typeof req[\"headers\"] === \"object\");\r\n    }\r\n    clone() {\r\n        return HttpRequest.clone(this);\r\n    }\r\n}\r\nfunction cloneQuery(query) {\r\n    return Object.keys(query).reduce((carry, paramName) => {\r\n        const param = query[paramName];\r\n        return {\r\n            ...carry,\r\n            [paramName]: Array.isArray(param) ? [...param] : param,\r\n        };\r\n    }, {});\r\n}\r\n", "export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\r\n    return {\r\n        setHttpHandler(handler) {\r\n            runtimeConfig.httpHandler = handler;\r\n        },\r\n        httpHandler() {\r\n            return runtimeConfig.httpHandler;\r\n        },\r\n        updateHttpClientConfig(key, value) {\r\n            runtimeConfig.httpHandler?.updateHttpClientConfig(key, value);\r\n        },\r\n        httpHandlerConfigs() {\r\n            return runtimeConfig.httpHandler.httpHandlerConfigs();\r\n        },\r\n    };\r\n};\r\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\r\n    return {\r\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\r\n    };\r\n};\r\n", "export class HttpResponse {\r\n    constructor(options) {\r\n        this.statusCode = options.statusCode;\r\n        this.reason = options.reason;\r\n        this.headers = options.headers || {};\r\n        this.body = options.body;\r\n    }\r\n    static isInstance(response) {\r\n        if (!response)\r\n            return false;\r\n        const resp = response;\r\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\r\n    }\r\n}\r\n", "export function isValidHostname(hostname) {\r\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\r\n    return hostPattern.test(hostname);\r\n}\r\n", "import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\r\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\r\n", "export const normalizeProvider = (input) => {\r\n    if (typeof input === \"function\")\r\n        return input;\r\n    const promisified = Promise.resolve(input);\r\n    return () => promisified;\r\n};\r\n", "export const resolveAuthOptions = (candidateAuthOptions, authSchemePreference) => {\r\n    if (!authSchemePreference || authSchemePreference.length === 0) {\r\n        return candidateAuthOptions;\r\n    }\r\n    const preferredAuthOptions = [];\r\n    for (const preferredSchemeName of authSchemePreference) {\r\n        for (const candidateAuthOption of candidateAuthOptions) {\r\n            const candidateAuthSchemeName = candidateAuthOption.schemeId.split(\"#\")[1];\r\n            if (candidateAuthSchemeName === preferredSchemeName) {\r\n                preferredAuthOptions.push(candidateAuthOption);\r\n            }\r\n        }\r\n    }\r\n    for (const candidateAuthOption of candidateAuthOptions) {\r\n        if (!preferredAuthOptions.find(({ schemeId }) => schemeId === candidateAuthOption.schemeId)) {\r\n            preferredAuthOptions.push(candidateAuthOption);\r\n        }\r\n    }\r\n    return preferredAuthOptions;\r\n};\r\n", "import { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\r\nimport { getSmithyContext } from \"@smithy/util-middleware\";\r\nimport { resolveAuthOptions } from \"./resolveAuthOptions\";\r\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\r\n    const map = new Map();\r\n    for (const scheme of httpAuthSchemes) {\r\n        map.set(scheme.schemeId, scheme);\r\n    }\r\n    return map;\r\n}\r\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\r\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\r\n    const authSchemePreference = config.authSchemePreference ? await config.authSchemePreference() : [];\r\n    const resolvedOptions = resolveAuthOptions(options, authSchemePreference);\r\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\r\n    const smithyContext = getSmithyContext(context);\r\n    const failureReasons = [];\r\n    for (const option of resolvedOptions) {\r\n        const scheme = authSchemes.get(option.schemeId);\r\n        if (!scheme) {\r\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\r\n            continue;\r\n        }\r\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\r\n        if (!identityProvider) {\r\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\r\n            continue;\r\n        }\r\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\r\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\r\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\r\n        smithyContext.selectedHttpAuthScheme = {\r\n            httpAuthOption: option,\r\n            identity: await identityProvider(option.identityProperties),\r\n            signer: scheme.signer,\r\n        };\r\n        break;\r\n    }\r\n    if (!smithyContext.selectedHttpAuthScheme) {\r\n        throw new Error(failureReasons.join(\"\\n\"));\r\n    }\r\n    return next(args);\r\n};\r\n", "import { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\r\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\r\n    step: \"serialize\",\r\n    tags: [\"HTTP_AUTH_SCHEME\"],\r\n    name: \"httpAuthSchemeMiddleware\",\r\n    override: true,\r\n    relation: \"before\",\r\n    toMiddleware: \"endpointV2Middleware\",\r\n};\r\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\r\n            httpAuthSchemeParametersProvider,\r\n            identityProviderConfigProvider,\r\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\r\n    },\r\n});\r\n", "import { HttpResponse } from \"@smithy/protocol-http\";\r\nexport const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\r\n    const { response } = await next(args);\r\n    try {\r\n        const parsed = await deserializer(response, options);\r\n        return {\r\n            response,\r\n            output: parsed,\r\n        };\r\n    }\r\n    catch (error) {\r\n        Object.defineProperty(error, \"$response\", {\r\n            value: response,\r\n        });\r\n        if (!(\"$metadata\" in error)) {\r\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\r\n            try {\r\n                error.message += \"\\n  \" + hint;\r\n            }\r\n            catch (e) {\r\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\r\n                    console.warn(hint);\r\n                }\r\n                else {\r\n                    context.logger?.warn?.(hint);\r\n                }\r\n            }\r\n            if (typeof error.$responseBodyText !== \"undefined\") {\r\n                if (error.$response) {\r\n                    error.$response.body = error.$responseBodyText;\r\n                }\r\n            }\r\n            try {\r\n                if (HttpResponse.isInstance(response)) {\r\n                    const { headers = {} } = response;\r\n                    const headerEntries = Object.entries(headers);\r\n                    error.$metadata = {\r\n                        httpStatusCode: response.statusCode,\r\n                        requestId: findHeader(/^x-[\\w-]+-request-?id$/, headerEntries),\r\n                        extendedRequestId: findHeader(/^x-[\\w-]+-id-2$/, headerEntries),\r\n                        cfId: findHeader(/^x-[\\w-]+-cf-id$/, headerEntries),\r\n                    };\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        throw error;\r\n    }\r\n};\r\nconst findHeader = (pattern, headers) => {\r\n    return (headers.find(([k]) => {\r\n        return k.match(pattern);\r\n    }) || [void 0, void 1])[1];\r\n};\r\n", "export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\r\n    const endpointConfig = options;\r\n    const endpoint = context.endpointV2?.url && endpointConfig.urlParser\r\n        ? async () => endpointConfig.urlParser(context.endpointV2.url)\r\n        : endpointConfig.endpoint;\r\n    if (!endpoint) {\r\n        throw new Error(\"No valid endpoint provider available.\");\r\n    }\r\n    const request = await serializer(args.input, { ...options, endpoint });\r\n    return next({\r\n        ...args,\r\n        request,\r\n    });\r\n};\r\n", "import { deserializerMiddleware } from \"./deserializerMiddleware\";\r\nimport { serializerMiddleware } from \"./serializerMiddleware\";\r\nexport const deserializerMiddlewareOption = {\r\n    name: \"deserializerMiddleware\",\r\n    step: \"deserialize\",\r\n    tags: [\"DESERIALIZER\"],\r\n    override: true,\r\n};\r\nexport const serializerMiddlewareOption = {\r\n    name: \"serializerMiddleware\",\r\n    step: \"serialize\",\r\n    tags: [\"SERIALIZER\"],\r\n    override: true,\r\n};\r\nexport function getSerdePlugin(config, serializer, deserializer) {\r\n    return {\r\n        applyToStack: (commandStack) => {\r\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\r\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\r\n        },\r\n    };\r\n}\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\r\nimport { getSmithyContext } from \"@smithy/util-middleware\";\r\nconst defaultErrorHandler = (signingProperties) => (error) => {\r\n    throw error;\r\n};\r\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\r\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\r\n    if (!HttpRequest.isInstance(args.request)) {\r\n        return next(args);\r\n    }\r\n    const smithyContext = getSmithyContext(context);\r\n    const scheme = smithyContext.selectedHttpAuthScheme;\r\n    if (!scheme) {\r\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\r\n    }\r\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\r\n    const output = await next({\r\n        ...args,\r\n        request: await signer.sign(args.request, identity, signingProperties),\r\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\r\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\r\n    return output;\r\n};\r\n", "import { httpSigningMiddleware } from \"./httpSigningMiddleware\";\r\nexport const httpSigningMiddlewareOptions = {\r\n    step: \"finalizeRequest\",\r\n    tags: [\"HTTP_SIGNING\"],\r\n    name: \"httpSigningMiddleware\",\r\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\r\n    override: true,\r\n    relation: \"after\",\r\n    toMiddleware: \"retryMiddleware\",\r\n};\r\nexport const getHttpSigningPlugin = (config) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\r\n    },\r\n});\r\n", "const makePagedClientRequest = async (CommandCtor, client, input, withCommand = (_) => _, ...args) => {\r\n    let command = new CommandCtor(input);\r\n    command = withCommand(command) ?? command;\r\n    return await client.send(command, ...args);\r\n};\r\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\r\n    return async function* paginateOperation(config, input, ...additionalArguments) {\r\n        const _input = input;\r\n        let token = config.startingToken ?? _input[inputTokenName];\r\n        let hasNext = true;\r\n        let page;\r\n        while (hasNext) {\r\n            _input[inputTokenName] = token;\r\n            if (pageSizeTokenName) {\r\n                _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\r\n            }\r\n            if (config.client instanceof ClientCtor) {\r\n                page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\r\n            }\r\n            else {\r\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\r\n            }\r\n            yield page;\r\n            const prevToken = token;\r\n            token = get(page, outputTokenName);\r\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nconst get = (fromObject, path) => {\r\n    let cursor = fromObject;\r\n    const pathComponents = path.split(\".\");\r\n    for (const step of pathComponents) {\r\n        if (!cursor || typeof cursor !== \"object\") {\r\n            return undefined;\r\n        }\r\n        cursor = cursor[step];\r\n    }\r\n    return cursor;\r\n};\r\n", "export class DefaultIdentityProviderConfig {\r\n    constructor(config) {\r\n        this.authSchemes = new Map();\r\n        for (const [key, value] of Object.entries(config)) {\r\n            if (value !== undefined) {\r\n                this.authSchemes.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    getIdentityProvider(schemeId) {\r\n        return this.authSchemes.get(schemeId);\r\n    }\r\n}\r\n", "import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\r\nimport { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\r\nexport const httpAuthSchemeMiddlewareOptions = {\r\n    step: \"serialize\",\r\n    tags: [\"HTTP_AUTH_SCHEME\"],\r\n    name: \"httpAuthSchemeMiddleware\",\r\n    override: true,\r\n    relation: \"before\",\r\n    toMiddleware: serializerMiddlewareOption.name,\r\n};\r\nexport const getHttpAuthSchemePlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\r\n            httpAuthSchemeParametersProvider,\r\n            identityProviderConfigProvider,\r\n        }), httpAuthSchemeMiddlewareOptions);\r\n    },\r\n});\r\n", "export const normalizeProvider = (input) => {\r\n    if (typeof input === \"function\")\r\n        return input;\r\n    const promisified = Promise.resolve(input);\r\n    return () => promisified;\r\n};\r\n", "const alphabetByEncoding = {};\r\nconst alphabetByValue = new Array(64);\r\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\r\n    const char = String.fromCharCode(i + start);\r\n    alphabetByEncoding[char] = i;\r\n    alphabetByValue[i] = char;\r\n}\r\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\r\n    const char = String.fromCharCode(i + start);\r\n    const index = i + 26;\r\n    alphabetByEncoding[char] = index;\r\n    alphabetByValue[index] = char;\r\n}\r\nfor (let i = 0; i < 10; i++) {\r\n    alphabetByEncoding[i.toString(10)] = i + 52;\r\n    const char = i.toString(10);\r\n    const index = i + 52;\r\n    alphabetByEncoding[char] = index;\r\n    alphabetByValue[index] = char;\r\n}\r\nalphabetByEncoding[\"+\"] = 62;\r\nalphabetByValue[62] = \"+\";\r\nalphabetByEncoding[\"/\"] = 63;\r\nalphabetByValue[63] = \"/\";\r\nconst bitsPerLetter = 6;\r\nconst bitsPerByte = 8;\r\nconst maxLetterValue = 0b111111;\r\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\r\n", "import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\r\nexport const fromBase64 = (input) => {\r\n    let totalByteLength = (input.length / 4) * 3;\r\n    if (input.slice(-2) === \"==\") {\r\n        totalByteLength -= 2;\r\n    }\r\n    else if (input.slice(-1) === \"=\") {\r\n        totalByteLength--;\r\n    }\r\n    const out = new ArrayBuffer(totalByteLength);\r\n    const dataView = new DataView(out);\r\n    for (let i = 0; i < input.length; i += 4) {\r\n        let bits = 0;\r\n        let bitLength = 0;\r\n        for (let j = i, limit = i + 3; j <= limit; j++) {\r\n            if (input[j] !== \"=\") {\r\n                if (!(input[j] in alphabetByEncoding)) {\r\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\r\n                }\r\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\r\n                bitLength += bitsPerLetter;\r\n            }\r\n            else {\r\n                bits >>= bitsPerLetter;\r\n            }\r\n        }\r\n        const chunkOffset = (i / 4) * 3;\r\n        bits >>= bitLength % bitsPerByte;\r\n        const byteLength = Math.floor(bitLength / bitsPerByte);\r\n        for (let k = 0; k < byteLength; k++) {\r\n            const offset = (byteLength - k - 1) * bitsPerByte;\r\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\r\n        }\r\n    }\r\n    return new Uint8Array(out);\r\n};\r\n", "export const fromUtf8 = (input) => new TextEncoder().encode(input);\r\n", "import { fromUtf8 } from \"./fromUtf8\";\r\nexport const toUint8Array = (data) => {\r\n    if (typeof data === \"string\") {\r\n        return fromUtf8(data);\r\n    }\r\n    if (ArrayBuffer.isView(data)) {\r\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\r\n    }\r\n    return new Uint8Array(data);\r\n};\r\n", "export const toUtf8 = (input) => {\r\n    if (typeof input === \"string\") {\r\n        return input;\r\n    }\r\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\r\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\r\n    }\r\n    return new TextDecoder(\"utf-8\").decode(input);\r\n};\r\n", "import { fromUtf8 } from \"@smithy/util-utf8\";\r\nimport { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\r\nexport function toBase64(_input) {\r\n    let input;\r\n    if (typeof _input === \"string\") {\r\n        input = fromUtf8(_input);\r\n    }\r\n    else {\r\n        input = _input;\r\n    }\r\n    const isArrayLike = typeof input === \"object\" && typeof input.length === \"number\";\r\n    const isUint8Array = typeof input === \"object\" &&\r\n        typeof input.byteOffset === \"number\" &&\r\n        typeof input.byteLength === \"number\";\r\n    if (!isArrayLike && !isUint8Array) {\r\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\r\n    }\r\n    let str = \"\";\r\n    for (let i = 0; i < input.length; i += 3) {\r\n        let bits = 0;\r\n        let bitLength = 0;\r\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\r\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\r\n            bitLength += bitsPerByte;\r\n        }\r\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\r\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\r\n        for (let k = 1; k <= bitClusterCount; k++) {\r\n            const offset = (bitClusterCount - k) * bitsPerLetter;\r\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\r\n        }\r\n        str += \"==\".slice(0, 4 - bitClusterCount);\r\n    }\r\n    return str;\r\n}\r\n", "import { fromBase64, toBase64 } from \"@smithy/util-base64\";\r\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\r\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\r\nexport function transformToString(payload, encoding = \"utf-8\") {\r\n    if (encoding === \"base64\") {\r\n        return toBase64(payload);\r\n    }\r\n    return toUtf8(payload);\r\n}\r\nexport function transformFromString(str, encoding) {\r\n    if (encoding === \"base64\") {\r\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\r\n    }\r\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\r\n}\r\n", "import { transformFromString, transformToString } from \"./transforms\";\r\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\r\n    static fromString(source, encoding = \"utf-8\") {\r\n        switch (typeof source) {\r\n            case \"string\":\r\n                return transformFromString(source, encoding);\r\n            default:\r\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\r\n        }\r\n    }\r\n    static mutate(source) {\r\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\r\n        return source;\r\n    }\r\n    transformToString(encoding = \"utf-8\") {\r\n        return transformToString(this, encoding);\r\n    }\r\n}\r\n", "const ReadableStreamRef = typeof ReadableStream === \"function\" ? ReadableStream : function () { };\r\nexport class ChecksumStream extends ReadableStreamRef {\r\n}\r\n", "export const isReadableStream = (stream) => typeof ReadableStream === \"function\" &&\r\n    (stream?.constructor?.name === ReadableStream.name || stream instanceof ReadableStream);\r\nexport const isBlob = (blob) => {\r\n    return typeof Blob === \"function\" && (blob?.constructor?.name === Blob.name || blob instanceof Blob);\r\n};\r\n", "import { toBase64 } from \"@smithy/util-base64\";\r\nimport { isReadableStream } from \"../stream-type-check\";\r\nimport { ChecksumStream } from \"./ChecksumStream.browser\";\r\nexport const createChecksumStream = ({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) => {\r\n    if (!isReadableStream(source)) {\r\n        throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\r\n    }\r\n    const encoder = base64Encoder ?? toBase64;\r\n    if (typeof TransformStream !== \"function\") {\r\n        throw new Error(\"@smithy/util-stream: unable to instantiate ChecksumStream because API unavailable: ReadableStream/TransformStream.\");\r\n    }\r\n    const transform = new TransformStream({\r\n        start() { },\r\n        async transform(chunk, controller) {\r\n            checksum.update(chunk);\r\n            controller.enqueue(chunk);\r\n        },\r\n        async flush(controller) {\r\n            const digest = await checksum.digest();\r\n            const received = encoder(digest);\r\n            if (expectedChecksum !== received) {\r\n                const error = new Error(`Checksum mismatch: expected \"${expectedChecksum}\" but received \"${received}\"` +\r\n                    ` in response header \"${checksumSourceLocation}\".`);\r\n                controller.error(error);\r\n            }\r\n            else {\r\n                controller.terminate();\r\n            }\r\n        },\r\n    });\r\n    source.pipeThrough(transform);\r\n    const readable = transform.readable;\r\n    Object.setPrototypeOf(readable, ChecksumStream.prototype);\r\n    return readable;\r\n};\r\n", "export class ByteArrayCollector {\r\n    constructor(allocByteArray) {\r\n        this.allocByteArray = allocByteArray;\r\n        this.byteLength = 0;\r\n        this.byteArrays = [];\r\n    }\r\n    push(byteArray) {\r\n        this.byteArrays.push(byteArray);\r\n        this.byteLength += byteArray.byteLength;\r\n    }\r\n    flush() {\r\n        if (this.byteArrays.length === 1) {\r\n            const bytes = this.byteArrays[0];\r\n            this.reset();\r\n            return bytes;\r\n        }\r\n        const aggregation = this.allocByteArray(this.byteLength);\r\n        let cursor = 0;\r\n        for (let i = 0; i < this.byteArrays.length; ++i) {\r\n            const bytes = this.byteArrays[i];\r\n            aggregation.set(bytes, cursor);\r\n            cursor += bytes.byteLength;\r\n        }\r\n        this.reset();\r\n        return aggregation;\r\n    }\r\n    reset() {\r\n        this.byteArrays = [];\r\n        this.byteLength = 0;\r\n    }\r\n}\r\n", "import { ByteArrayCollector } from \"./ByteArrayCollector\";\r\nexport function createBufferedReadableStream(upstream, size, logger) {\r\n    const reader = upstream.getReader();\r\n    let streamBufferingLoggedWarning = false;\r\n    let bytesSeen = 0;\r\n    const buffers = [\"\", new ByteArrayCollector((size) => new Uint8Array(size))];\r\n    let mode = -1;\r\n    const pull = async (controller) => {\r\n        const { value, done } = await reader.read();\r\n        const chunk = value;\r\n        if (done) {\r\n            if (mode !== -1) {\r\n                const remainder = flush(buffers, mode);\r\n                if (sizeOf(remainder) > 0) {\r\n                    controller.enqueue(remainder);\r\n                }\r\n            }\r\n            controller.close();\r\n        }\r\n        else {\r\n            const chunkMode = modeOf(chunk, false);\r\n            if (mode !== chunkMode) {\r\n                if (mode >= 0) {\r\n                    controller.enqueue(flush(buffers, mode));\r\n                }\r\n                mode = chunkMode;\r\n            }\r\n            if (mode === -1) {\r\n                controller.enqueue(chunk);\r\n                return;\r\n            }\r\n            const chunkSize = sizeOf(chunk);\r\n            bytesSeen += chunkSize;\r\n            const bufferSize = sizeOf(buffers[mode]);\r\n            if (chunkSize >= size && bufferSize === 0) {\r\n                controller.enqueue(chunk);\r\n            }\r\n            else {\r\n                const newSize = merge(buffers, mode, chunk);\r\n                if (!streamBufferingLoggedWarning && bytesSeen > size * 2) {\r\n                    streamBufferingLoggedWarning = true;\r\n                    logger?.warn(`@smithy/util-stream - stream chunk size ${chunkSize} is below threshold of ${size}, automatically buffering.`);\r\n                }\r\n                if (newSize >= size) {\r\n                    controller.enqueue(flush(buffers, mode));\r\n                }\r\n                else {\r\n                    await pull(controller);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return new ReadableStream({\r\n        pull,\r\n    });\r\n}\r\nexport const createBufferedReadable = createBufferedReadableStream;\r\nexport function merge(buffers, mode, chunk) {\r\n    switch (mode) {\r\n        case 0:\r\n            buffers[0] += chunk;\r\n            return sizeOf(buffers[0]);\r\n        case 1:\r\n        case 2:\r\n            buffers[mode].push(chunk);\r\n            return sizeOf(buffers[mode]);\r\n    }\r\n}\r\nexport function flush(buffers, mode) {\r\n    switch (mode) {\r\n        case 0:\r\n            const s = buffers[0];\r\n            buffers[0] = \"\";\r\n            return s;\r\n        case 1:\r\n        case 2:\r\n            return buffers[mode].flush();\r\n    }\r\n    throw new Error(`@smithy/util-stream - invalid index ${mode} given to flush()`);\r\n}\r\nexport function sizeOf(chunk) {\r\n    return chunk?.byteLength ?? chunk?.length ?? 0;\r\n}\r\nexport function modeOf(chunk, allowBuffer = true) {\r\n    if (allowBuffer && typeof Buffer !== \"undefined\" && chunk instanceof Buffer) {\r\n        return 2;\r\n    }\r\n    if (chunk instanceof Uint8Array) {\r\n        return 1;\r\n    }\r\n    if (typeof chunk === \"string\") {\r\n        return 0;\r\n    }\r\n    return -1;\r\n}\r\n", "export const getAwsChunkedEncodingStream = (readableStream, options) => {\r\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\r\n    const checksumRequired = base64Encoder !== undefined &&\r\n        bodyLengthChecker !== undefined &&\r\n        checksumAlgorithmFn !== undefined &&\r\n        checksumLocationName !== undefined &&\r\n        streamHasher !== undefined;\r\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\r\n    const reader = readableStream.getReader();\r\n    return new ReadableStream({\r\n        async pull(controller) {\r\n            const { value, done } = await reader.read();\r\n            if (done) {\r\n                controller.enqueue(`0\\r\\n`);\r\n                if (checksumRequired) {\r\n                    const checksum = base64Encoder(await digest);\r\n                    controller.enqueue(`${checksumLocationName}:${checksum}\\r\\n`);\r\n                    controller.enqueue(`\\r\\n`);\r\n                }\r\n                controller.close();\r\n            }\r\n            else {\r\n                controller.enqueue(`${(bodyLengthChecker(value) || 0).toString(16)}\\r\\n${value}\\r\\n`);\r\n            }\r\n        },\r\n    });\r\n};\r\n", "export async function headStream(stream, bytes) {\r\n    let byteLengthCounter = 0;\r\n    const chunks = [];\r\n    const reader = stream.getReader();\r\n    let isDone = false;\r\n    while (!isDone) {\r\n        const { done, value } = await reader.read();\r\n        if (value) {\r\n            chunks.push(value);\r\n            byteLengthCounter += value?.byteLength ?? 0;\r\n        }\r\n        if (byteLengthCounter >= bytes) {\r\n            break;\r\n        }\r\n        isDone = done;\r\n    }\r\n    reader.releaseLock();\r\n    const collected = new Uint8Array(Math.min(bytes, byteLengthCounter));\r\n    let offset = 0;\r\n    for (const chunk of chunks) {\r\n        if (chunk.byteLength > collected.byteLength - offset) {\r\n            collected.set(chunk.subarray(0, collected.byteLength - offset), offset);\r\n            break;\r\n        }\r\n        else {\r\n            collected.set(chunk, offset);\r\n        }\r\n        offset += chunk.length;\r\n    }\r\n    return collected;\r\n}\r\n", "export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\r\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\r\n", "import { escapeUri } from \"@smithy/util-uri-escape\";\r\nexport function buildQueryString(query) {\r\n    const parts = [];\r\n    for (let key of Object.keys(query).sort()) {\r\n        const value = query[key];\r\n        key = escapeUri(key);\r\n        if (Array.isArray(value)) {\r\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\r\n                parts.push(`${key}=${escapeUri(value[i])}`);\r\n            }\r\n        }\r\n        else {\r\n            let qsEntry = key;\r\n            if (value || typeof value === \"string\") {\r\n                qsEntry += `=${escapeUri(value)}`;\r\n            }\r\n            parts.push(qsEntry);\r\n        }\r\n    }\r\n    return parts.join(\"&\");\r\n}\r\n", "export function createRequest(url, requestOptions) {\r\n    return new Request(url, requestOptions);\r\n}\r\n", "export function requestTimeout(timeoutInMs = 0) {\r\n    return new Promise((resolve, reject) => {\r\n        if (timeoutInMs) {\r\n            setTimeout(() => {\r\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\r\n                timeoutError.name = \"TimeoutError\";\r\n                reject(timeoutError);\r\n            }, timeoutInMs);\r\n        }\r\n    });\r\n}\r\n", "import { HttpResponse } from \"@smithy/protocol-http\";\r\nimport { buildQueryString } from \"@smithy/querystring-builder\";\r\nimport { createRequest } from \"./create-request\";\r\nimport { requestTimeout } from \"./request-timeout\";\r\nexport const keepAliveSupport = {\r\n    supported: undefined,\r\n};\r\nexport class FetchHttpHandler {\r\n    static create(instanceOrOptions) {\r\n        if (typeof instanceOrOptions?.handle === \"function\") {\r\n            return instanceOrOptions;\r\n        }\r\n        return new FetchHttpHandler(instanceOrOptions);\r\n    }\r\n    constructor(options) {\r\n        if (typeof options === \"function\") {\r\n            this.configProvider = options().then((opts) => opts || {});\r\n        }\r\n        else {\r\n            this.config = options ?? {};\r\n            this.configProvider = Promise.resolve(this.config);\r\n        }\r\n        if (keepAliveSupport.supported === undefined) {\r\n            keepAliveSupport.supported = Boolean(typeof Request !== \"undefined\" && \"keepalive\" in createRequest(\"https://[::1]\"));\r\n        }\r\n    }\r\n    destroy() {\r\n    }\r\n    async handle(request, { abortSignal } = {}) {\r\n        if (!this.config) {\r\n            this.config = await this.configProvider;\r\n        }\r\n        const requestTimeoutInMs = this.config.requestTimeout;\r\n        const keepAlive = this.config.keepAlive === true;\r\n        const credentials = this.config.credentials;\r\n        if (abortSignal?.aborted) {\r\n            const abortError = new Error(\"Request aborted\");\r\n            abortError.name = \"AbortError\";\r\n            return Promise.reject(abortError);\r\n        }\r\n        let path = request.path;\r\n        const queryString = buildQueryString(request.query || {});\r\n        if (queryString) {\r\n            path += `?${queryString}`;\r\n        }\r\n        if (request.fragment) {\r\n            path += `#${request.fragment}`;\r\n        }\r\n        let auth = \"\";\r\n        if (request.username != null || request.password != null) {\r\n            const username = request.username ?? \"\";\r\n            const password = request.password ?? \"\";\r\n            auth = `${username}:${password}@`;\r\n        }\r\n        const { port, method } = request;\r\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\r\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\r\n        const requestOptions = {\r\n            body,\r\n            headers: new Headers(request.headers),\r\n            method: method,\r\n            credentials,\r\n        };\r\n        if (this.config?.cache) {\r\n            requestOptions.cache = this.config.cache;\r\n        }\r\n        if (body) {\r\n            requestOptions.duplex = \"half\";\r\n        }\r\n        if (typeof AbortController !== \"undefined\") {\r\n            requestOptions.signal = abortSignal;\r\n        }\r\n        if (keepAliveSupport.supported) {\r\n            requestOptions.keepalive = keepAlive;\r\n        }\r\n        if (typeof this.config.requestInit === \"function\") {\r\n            Object.assign(requestOptions, this.config.requestInit(request));\r\n        }\r\n        let removeSignalEventListener = () => { };\r\n        const fetchRequest = createRequest(url, requestOptions);\r\n        const raceOfPromises = [\r\n            fetch(fetchRequest).then((response) => {\r\n                const fetchHeaders = response.headers;\r\n                const transformedHeaders = {};\r\n                for (const pair of fetchHeaders.entries()) {\r\n                    transformedHeaders[pair[0]] = pair[1];\r\n                }\r\n                const hasReadableStream = response.body != undefined;\r\n                if (!hasReadableStream) {\r\n                    return response.blob().then((body) => ({\r\n                        response: new HttpResponse({\r\n                            headers: transformedHeaders,\r\n                            reason: response.statusText,\r\n                            statusCode: response.status,\r\n                            body,\r\n                        }),\r\n                    }));\r\n                }\r\n                return {\r\n                    response: new HttpResponse({\r\n                        headers: transformedHeaders,\r\n                        reason: response.statusText,\r\n                        statusCode: response.status,\r\n                        body: response.body,\r\n                    }),\r\n                };\r\n            }),\r\n            requestTimeout(requestTimeoutInMs),\r\n        ];\r\n        if (abortSignal) {\r\n            raceOfPromises.push(new Promise((resolve, reject) => {\r\n                const onAbort = () => {\r\n                    const abortError = new Error(\"Request aborted\");\r\n                    abortError.name = \"AbortError\";\r\n                    reject(abortError);\r\n                };\r\n                if (typeof abortSignal.addEventListener === \"function\") {\r\n                    const signal = abortSignal;\r\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\r\n                    removeSignalEventListener = () => signal.removeEventListener(\"abort\", onAbort);\r\n                }\r\n                else {\r\n                    abortSignal.onabort = onAbort;\r\n                }\r\n            }));\r\n        }\r\n        return Promise.race(raceOfPromises).finally(removeSignalEventListener);\r\n    }\r\n    updateHttpClientConfig(key, value) {\r\n        this.config = undefined;\r\n        this.configProvider = this.configProvider.then((config) => {\r\n            config[key] = value;\r\n            return config;\r\n        });\r\n    }\r\n    httpHandlerConfigs() {\r\n        return this.config ?? {};\r\n    }\r\n}\r\n", "import { fromBase64 } from \"@smithy/util-base64\";\r\nexport const streamCollector = async (stream) => {\r\n    if ((typeof Blob === \"function\" && stream instanceof Blob) || stream.constructor?.name === \"Blob\") {\r\n        if (Blob.prototype.arrayBuffer !== undefined) {\r\n            return new Uint8Array(await stream.arrayBuffer());\r\n        }\r\n        return collectBlob(stream);\r\n    }\r\n    return collectStream(stream);\r\n};\r\nasync function collectBlob(blob) {\r\n    const base64 = await readToBase64(blob);\r\n    const arrayBuffer = fromBase64(base64);\r\n    return new Uint8Array(arrayBuffer);\r\n}\r\nasync function collectStream(stream) {\r\n    const chunks = [];\r\n    const reader = stream.getReader();\r\n    let isDone = false;\r\n    let length = 0;\r\n    while (!isDone) {\r\n        const { done, value } = await reader.read();\r\n        if (value) {\r\n            chunks.push(value);\r\n            length += value.length;\r\n        }\r\n        isDone = done;\r\n    }\r\n    const collected = new Uint8Array(length);\r\n    let offset = 0;\r\n    for (const chunk of chunks) {\r\n        collected.set(chunk, offset);\r\n        offset += chunk.length;\r\n    }\r\n    return collected;\r\n}\r\nfunction readToBase64(blob) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (reader.readyState !== 2) {\r\n                return reject(new Error(\"Reader aborted too early\"));\r\n            }\r\n            const result = (reader.result ?? \"\");\r\n            const commaIndex = result.indexOf(\",\");\r\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\r\n            resolve(result.substring(dataOffset));\r\n        };\r\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\r\n        reader.onerror = () => reject(reader.error);\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}\r\n", "const SHORT_TO_HEX = {};\r\nconst HEX_TO_SHORT = {};\r\nfor (let i = 0; i < 256; i++) {\r\n    let encodedByte = i.toString(16).toLowerCase();\r\n    if (encodedByte.length === 1) {\r\n        encodedByte = `0${encodedByte}`;\r\n    }\r\n    SHORT_TO_HEX[i] = encodedByte;\r\n    HEX_TO_SHORT[encodedByte] = i;\r\n}\r\nexport function fromHex(encoded) {\r\n    if (encoded.length % 2 !== 0) {\r\n        throw new Error(\"Hex encoded strings must have an even number length\");\r\n    }\r\n    const out = new Uint8Array(encoded.length / 2);\r\n    for (let i = 0; i < encoded.length; i += 2) {\r\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\r\n        if (encodedByte in HEX_TO_SHORT) {\r\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\r\n        }\r\n        else {\r\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexport function toHex(bytes) {\r\n    let out = \"\";\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n        out += SHORT_TO_HEX[bytes[i]];\r\n    }\r\n    return out;\r\n}\r\n", "import { streamCollector } from \"@smithy/fetch-http-handler\";\r\nimport { toBase64 } from \"@smithy/util-base64\";\r\nimport { toHex } from \"@smithy/util-hex-encoding\";\r\nimport { toUtf8 } from \"@smithy/util-utf8\";\r\nimport { isReadableStream } from \"./stream-type-check\";\r\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\r\nexport const sdkStreamMixin = (stream) => {\r\n    if (!isBlobInstance(stream) && !isReadableStream(stream)) {\r\n        const name = stream?.__proto__?.constructor?.name || stream;\r\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\r\n    }\r\n    let transformed = false;\r\n    const transformToByteArray = async () => {\r\n        if (transformed) {\r\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\r\n        }\r\n        transformed = true;\r\n        return await streamCollector(stream);\r\n    };\r\n    const blobToWebStream = (blob) => {\r\n        if (typeof blob.stream !== \"function\") {\r\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\r\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\r\n        }\r\n        return blob.stream();\r\n    };\r\n    return Object.assign(stream, {\r\n        transformToByteArray: transformToByteArray,\r\n        transformToString: async (encoding) => {\r\n            const buf = await transformToByteArray();\r\n            if (encoding === \"base64\") {\r\n                return toBase64(buf);\r\n            }\r\n            else if (encoding === \"hex\") {\r\n                return toHex(buf);\r\n            }\r\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\r\n                return toUtf8(buf);\r\n            }\r\n            else if (typeof TextDecoder === \"function\") {\r\n                return new TextDecoder(encoding).decode(buf);\r\n            }\r\n            else {\r\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\r\n            }\r\n        },\r\n        transformToWebStream: () => {\r\n            if (transformed) {\r\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\r\n            }\r\n            transformed = true;\r\n            if (isBlobInstance(stream)) {\r\n                return blobToWebStream(stream);\r\n            }\r\n            else if (isReadableStream(stream)) {\r\n                return stream;\r\n            }\r\n            else {\r\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\r\n            }\r\n        },\r\n    });\r\n};\r\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\r\n", "export async function splitStream(stream) {\r\n    if (typeof stream.stream === \"function\") {\r\n        stream = stream.stream();\r\n    }\r\n    const readableStream = stream;\r\n    return readableStream.tee();\r\n}\r\n", "import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\r\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\r\n    if (streamBody instanceof Uint8Array) {\r\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\r\n    }\r\n    if (!streamBody) {\r\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\r\n    }\r\n    const fromContext = context.streamCollector(streamBody);\r\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\r\n};\r\n", "export function extendedEncodeURIComponent(str) {\r\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\r\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\r\n    });\r\n}\r\n", "export class TypeRegistry {\r\n    constructor(namespace, schemas = new Map()) {\r\n        this.namespace = namespace;\r\n        this.schemas = schemas;\r\n    }\r\n    static for(namespace) {\r\n        if (!TypeRegistry.registries.has(namespace)) {\r\n            TypeRegistry.registries.set(namespace, new TypeRegistry(namespace));\r\n        }\r\n        return TypeRegistry.registries.get(namespace);\r\n    }\r\n    register(shapeId, schema) {\r\n        const qualifiedName = this.normalizeShapeId(shapeId);\r\n        const registry = TypeRegistry.for(this.getNamespace(shapeId));\r\n        registry.schemas.set(qualifiedName, schema);\r\n    }\r\n    getSchema(shapeId) {\r\n        const id = this.normalizeShapeId(shapeId);\r\n        if (!this.schemas.has(id)) {\r\n            throw new Error(`@smithy/core/schema - schema not found for ${id}`);\r\n        }\r\n        return this.schemas.get(id);\r\n    }\r\n    getBaseException() {\r\n        for (const [id, schema] of this.schemas.entries()) {\r\n            if (id.startsWith(\"smithy.ts.sdk.synthetic.\") && id.endsWith(\"ServiceException\")) {\r\n                return schema;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    find(predicate) {\r\n        return [...this.schemas.values()].find(predicate);\r\n    }\r\n    destroy() {\r\n        TypeRegistry.registries.delete(this.namespace);\r\n        this.schemas.clear();\r\n    }\r\n    normalizeShapeId(shapeId) {\r\n        if (shapeId.includes(\"#\")) {\r\n            return shapeId;\r\n        }\r\n        return this.namespace + \"#\" + shapeId;\r\n    }\r\n    getNamespace(shapeId) {\r\n        return this.normalizeShapeId(shapeId).split(\"#\")[0];\r\n    }\r\n}\r\nTypeRegistry.registries = new Map();\r\n", "export const parseBoolean = (value) => {\r\n    switch (value) {\r\n        case \"true\":\r\n            return true;\r\n        case \"false\":\r\n            return false;\r\n        default:\r\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\r\n    }\r\n};\r\nexport const expectBoolean = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value === \"number\") {\r\n        if (value === 0 || value === 1) {\r\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\r\n        }\r\n        if (value === 0) {\r\n            return false;\r\n        }\r\n        if (value === 1) {\r\n            return true;\r\n        }\r\n    }\r\n    if (typeof value === \"string\") {\r\n        const lower = value.toLowerCase();\r\n        if (lower === \"false\" || lower === \"true\") {\r\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\r\n        }\r\n        if (lower === \"false\") {\r\n            return false;\r\n        }\r\n        if (lower === \"true\") {\r\n            return true;\r\n        }\r\n    }\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\r\n};\r\nexport const expectNumber = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value === \"string\") {\r\n        const parsed = parseFloat(value);\r\n        if (!Number.isNaN(parsed)) {\r\n            if (String(parsed) !== String(value)) {\r\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\r\n            }\r\n            return parsed;\r\n        }\r\n    }\r\n    if (typeof value === \"number\") {\r\n        return value;\r\n    }\r\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\r\n};\r\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\r\nexport const expectFloat32 = (value) => {\r\n    const expected = expectNumber(value);\r\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\r\n        if (Math.abs(expected) > MAX_FLOAT) {\r\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\r\n        }\r\n    }\r\n    return expected;\r\n};\r\nexport const expectLong = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\r\n        return value;\r\n    }\r\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\r\n};\r\nexport const expectInt = expectLong;\r\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\r\nexport const expectShort = (value) => expectSizedInt(value, 16);\r\nexport const expectByte = (value) => expectSizedInt(value, 8);\r\nconst expectSizedInt = (value, size) => {\r\n    const expected = expectLong(value);\r\n    if (expected !== undefined && castInt(expected, size) !== expected) {\r\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\r\n    }\r\n    return expected;\r\n};\r\nconst castInt = (value, size) => {\r\n    switch (size) {\r\n        case 32:\r\n            return Int32Array.of(value)[0];\r\n        case 16:\r\n            return Int16Array.of(value)[0];\r\n        case 8:\r\n            return Int8Array.of(value)[0];\r\n    }\r\n};\r\nexport const expectNonNull = (value, location) => {\r\n    if (value === null || value === undefined) {\r\n        if (location) {\r\n            throw new TypeError(`Expected a non-null value for ${location}`);\r\n        }\r\n        throw new TypeError(\"Expected a non-null value\");\r\n    }\r\n    return value;\r\n};\r\nexport const expectObject = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value === \"object\" && !Array.isArray(value)) {\r\n        return value;\r\n    }\r\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\r\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\r\n};\r\nexport const expectString = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value === \"string\") {\r\n        return value;\r\n    }\r\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\r\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\r\n        return String(value);\r\n    }\r\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\r\n};\r\nexport const expectUnion = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    const asObject = expectObject(value);\r\n    const setKeys = Object.entries(asObject)\r\n        .filter(([, v]) => v != null)\r\n        .map(([k]) => k);\r\n    if (setKeys.length === 0) {\r\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\r\n    }\r\n    if (setKeys.length > 1) {\r\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\r\n    }\r\n    return asObject;\r\n};\r\nexport const strictParseDouble = (value) => {\r\n    if (typeof value == \"string\") {\r\n        return expectNumber(parseNumber(value));\r\n    }\r\n    return expectNumber(value);\r\n};\r\nexport const strictParseFloat = strictParseDouble;\r\nexport const strictParseFloat32 = (value) => {\r\n    if (typeof value == \"string\") {\r\n        return expectFloat32(parseNumber(value));\r\n    }\r\n    return expectFloat32(value);\r\n};\r\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\r\nconst parseNumber = (value) => {\r\n    const matches = value.match(NUMBER_REGEX);\r\n    if (matches === null || matches[0].length !== value.length) {\r\n        throw new TypeError(`Expected real number, got implicit NaN`);\r\n    }\r\n    return parseFloat(value);\r\n};\r\nexport const limitedParseDouble = (value) => {\r\n    if (typeof value == \"string\") {\r\n        return parseFloatString(value);\r\n    }\r\n    return expectNumber(value);\r\n};\r\nexport const handleFloat = limitedParseDouble;\r\nexport const limitedParseFloat = limitedParseDouble;\r\nexport const limitedParseFloat32 = (value) => {\r\n    if (typeof value == \"string\") {\r\n        return parseFloatString(value);\r\n    }\r\n    return expectFloat32(value);\r\n};\r\nconst parseFloatString = (value) => {\r\n    switch (value) {\r\n        case \"NaN\":\r\n            return NaN;\r\n        case \"Infinity\":\r\n            return Infinity;\r\n        case \"-Infinity\":\r\n            return -Infinity;\r\n        default:\r\n            throw new Error(`Unable to parse float value: ${value}`);\r\n    }\r\n};\r\nexport const strictParseLong = (value) => {\r\n    if (typeof value === \"string\") {\r\n        return expectLong(parseNumber(value));\r\n    }\r\n    return expectLong(value);\r\n};\r\nexport const strictParseInt = strictParseLong;\r\nexport const strictParseInt32 = (value) => {\r\n    if (typeof value === \"string\") {\r\n        return expectInt32(parseNumber(value));\r\n    }\r\n    return expectInt32(value);\r\n};\r\nexport const strictParseShort = (value) => {\r\n    if (typeof value === \"string\") {\r\n        return expectShort(parseNumber(value));\r\n    }\r\n    return expectShort(value);\r\n};\r\nexport const strictParseByte = (value) => {\r\n    if (typeof value === \"string\") {\r\n        return expectByte(parseNumber(value));\r\n    }\r\n    return expectByte(value);\r\n};\r\nconst stackTraceWarning = (message) => {\r\n    return String(new TypeError(message).stack || message)\r\n        .split(\"\\n\")\r\n        .slice(0, 5)\r\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\r\n        .join(\"\\n\");\r\n};\r\nexport const logger = {\r\n    warn: console.warn,\r\n};\r\n", "import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\r\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\nexport function dateToUtcString(date) {\r\n    const year = date.getUTCFullYear();\r\n    const month = date.getUTCMonth();\r\n    const dayOfWeek = date.getUTCDay();\r\n    const dayOfMonthInt = date.getUTCDate();\r\n    const hoursInt = date.getUTCHours();\r\n    const minutesInt = date.getUTCMinutes();\r\n    const secondsInt = date.getUTCSeconds();\r\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\r\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\r\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\r\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\r\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\r\n}\r\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\r\nexport const parseRfc3339DateTime = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value !== \"string\") {\r\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\r\n    }\r\n    const match = RFC3339.exec(value);\r\n    if (!match) {\r\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\r\n    }\r\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\r\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\r\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\r\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\r\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\r\n};\r\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\r\nexport const parseRfc3339DateTimeWithOffset = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value !== \"string\") {\r\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\r\n    }\r\n    const match = RFC3339_WITH_OFFSET.exec(value);\r\n    if (!match) {\r\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\r\n    }\r\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\r\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\r\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\r\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\r\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\r\n    if (offsetStr.toUpperCase() != \"Z\") {\r\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\r\n    }\r\n    return date;\r\n};\r\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\r\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\r\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\r\nexport const parseRfc7231DateTime = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof value !== \"string\") {\r\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\r\n    }\r\n    let match = IMF_FIXDATE.exec(value);\r\n    if (match) {\r\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\r\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\r\n    }\r\n    match = RFC_850_DATE.exec(value);\r\n    if (match) {\r\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\r\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\r\n            hours,\r\n            minutes,\r\n            seconds,\r\n            fractionalMilliseconds,\r\n        }));\r\n    }\r\n    match = ASC_TIME.exec(value);\r\n    if (match) {\r\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\r\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\r\n    }\r\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\r\n};\r\nexport const parseEpochTimestamp = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return undefined;\r\n    }\r\n    let valueAsDouble;\r\n    if (typeof value === \"number\") {\r\n        valueAsDouble = value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        valueAsDouble = strictParseDouble(value);\r\n    }\r\n    else if (typeof value === \"object\" && value.tag === 1) {\r\n        valueAsDouble = value.value;\r\n    }\r\n    else {\r\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\r\n    }\r\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\r\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\r\n    }\r\n    return new Date(Math.round(valueAsDouble * 1000));\r\n};\r\nconst buildDate = (year, month, day, time) => {\r\n    const adjustedMonth = month - 1;\r\n    validateDayOfMonth(year, adjustedMonth, day);\r\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\r\n};\r\nconst parseTwoDigitYear = (value) => {\r\n    const thisYear = new Date().getUTCFullYear();\r\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\r\n    if (valueInThisCentury < thisYear) {\r\n        return valueInThisCentury + 100;\r\n    }\r\n    return valueInThisCentury;\r\n};\r\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\r\nconst adjustRfc850Year = (input) => {\r\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\r\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\r\n    }\r\n    return input;\r\n};\r\nconst parseMonthByShortName = (value) => {\r\n    const monthIdx = MONTHS.indexOf(value);\r\n    if (monthIdx < 0) {\r\n        throw new TypeError(`Invalid month: ${value}`);\r\n    }\r\n    return monthIdx + 1;\r\n};\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst validateDayOfMonth = (year, month, day) => {\r\n    let maxDays = DAYS_IN_MONTH[month];\r\n    if (month === 1 && isLeapYear(year)) {\r\n        maxDays = 29;\r\n    }\r\n    if (day > maxDays) {\r\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\r\n    }\r\n};\r\nconst isLeapYear = (year) => {\r\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\r\n};\r\nconst parseDateValue = (value, type, lower, upper) => {\r\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\r\n    if (dateVal < lower || dateVal > upper) {\r\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\r\n    }\r\n    return dateVal;\r\n};\r\nconst parseMilliseconds = (value) => {\r\n    if (value === null || value === undefined) {\r\n        return 0;\r\n    }\r\n    return strictParseFloat32(\"0.\" + value) * 1000;\r\n};\r\nconst parseOffsetToMilliseconds = (value) => {\r\n    const directionStr = value[0];\r\n    let direction = 1;\r\n    if (directionStr == \"+\") {\r\n        direction = 1;\r\n    }\r\n    else if (directionStr == \"-\") {\r\n        direction = -1;\r\n    }\r\n    else {\r\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\r\n    }\r\n    const hour = Number(value.substring(1, 3));\r\n    const minute = Number(value.substring(4, 6));\r\n    return direction * (hour * 60 + minute) * 60 * 1000;\r\n};\r\nconst stripLeadingZeroes = (value) => {\r\n    let idx = 0;\r\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\r\n        idx++;\r\n    }\r\n    if (idx === 0) {\r\n        return value;\r\n    }\r\n    return value.slice(idx);\r\n};\r\n", "export const LazyJsonString = function LazyJsonString(val) {\r\n    const str = Object.assign(new String(val), {\r\n        deserializeJSON() {\r\n            return JSON.parse(String(val));\r\n        },\r\n        toString() {\r\n            return String(val);\r\n        },\r\n        toJSON() {\r\n            return String(val);\r\n        },\r\n    });\r\n    return str;\r\n};\r\nLazyJsonString.from = (object) => {\r\n    if (object && typeof object === \"object\" && (object instanceof LazyJsonString || \"deserializeJSON\" in object)) {\r\n        return object;\r\n    }\r\n    else if (typeof object === \"string\" || Object.getPrototypeOf(object) === String.prototype) {\r\n        return LazyJsonString(String(object));\r\n    }\r\n    return LazyJsonString(JSON.stringify(object));\r\n};\r\nLazyJsonString.fromObject = LazyJsonString.from;\r\n", "export function quoteHeader(part) {\r\n    if (part.includes(\",\") || part.includes('\"')) {\r\n        part = `\"${part.replace(/\"/g, '\\\\\"')}\"`;\r\n    }\r\n    return part;\r\n}\r\n", "import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\r\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\r\n    if (input != null && input[memberName] !== undefined) {\r\n        const labelValue = labelValueProvider();\r\n        if (labelValue.length <= 0) {\r\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\r\n        }\r\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\r\n            ? labelValue\r\n                .split(\"/\")\r\n                .map((segment) => extendedEncodeURIComponent(segment))\r\n                .join(\"/\")\r\n            : extendedEncodeURIComponent(labelValue));\r\n    }\r\n    else {\r\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\r\n    }\r\n    return resolvedPath;\r\n};\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { resolvedPath } from \"./resolve-path\";\r\nexport function requestBuilder(input, context) {\r\n    return new RequestBuilder(input, context);\r\n}\r\nexport class RequestBuilder {\r\n    constructor(input, context) {\r\n        this.input = input;\r\n        this.context = context;\r\n        this.query = {};\r\n        this.method = \"\";\r\n        this.headers = {};\r\n        this.path = \"\";\r\n        this.body = null;\r\n        this.hostname = \"\";\r\n        this.resolvePathStack = [];\r\n    }\r\n    async build() {\r\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\r\n        this.path = basePath;\r\n        for (const resolvePath of this.resolvePathStack) {\r\n            resolvePath(this.path);\r\n        }\r\n        return new HttpRequest({\r\n            protocol,\r\n            hostname: this.hostname || hostname,\r\n            port,\r\n            method: this.method,\r\n            path: this.path,\r\n            query: this.query,\r\n            body: this.body,\r\n            headers: this.headers,\r\n        });\r\n    }\r\n    hn(hostname) {\r\n        this.hostname = hostname;\r\n        return this;\r\n    }\r\n    bp(uriLabel) {\r\n        this.resolvePathStack.push((basePath) => {\r\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\r\n        });\r\n        return this;\r\n    }\r\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\r\n        this.resolvePathStack.push((path) => {\r\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\r\n        });\r\n        return this;\r\n    }\r\n    h(headers) {\r\n        this.headers = headers;\r\n        return this;\r\n    }\r\n    q(query) {\r\n        this.query = query;\r\n        return this;\r\n    }\r\n    b(body) {\r\n        this.body = body;\r\n        return this;\r\n    }\r\n    m(method) {\r\n        this.method = method;\r\n        return this;\r\n    }\r\n}\r\n", "export function setFeature(context, feature, value) {\r\n    if (!context.__smithy_context) {\r\n        context.__smithy_context = {\r\n            features: {},\r\n        };\r\n    }\r\n    else if (!context.__smithy_context.features) {\r\n        context.__smithy_context.features = {};\r\n    }\r\n    context.__smithy_context.features[feature] = value;\r\n}\r\n", "export const createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\r\nexport const EXPIRATION_MS = 300000;\r\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\r\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\r\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\r\n    if (provider === undefined) {\r\n        return undefined;\r\n    }\r\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\r\n    let resolved;\r\n    let pending;\r\n    let hasResult;\r\n    let isConstant = false;\r\n    const coalesceProvider = async (options) => {\r\n        if (!pending) {\r\n            pending = normalizedProvider(options);\r\n        }\r\n        try {\r\n            resolved = await pending;\r\n            hasResult = true;\r\n            isConstant = false;\r\n        }\r\n        finally {\r\n            pending = undefined;\r\n        }\r\n        return resolved;\r\n    };\r\n    if (isExpired === undefined) {\r\n        return async (options) => {\r\n            if (!hasResult || options?.forceRefresh) {\r\n                resolved = await coalesceProvider(options);\r\n            }\r\n            return resolved;\r\n        };\r\n    }\r\n    return async (options) => {\r\n        if (!hasResult || options?.forceRefresh) {\r\n            resolved = await coalesceProvider(options);\r\n        }\r\n        if (isConstant) {\r\n            return resolved;\r\n        }\r\n        if (!requiresRefresh(resolved)) {\r\n            isConstant = true;\r\n            return resolved;\r\n        }\r\n        if (isExpired(resolved)) {\r\n            await coalesceProvider(options);\r\n            return resolved;\r\n        }\r\n        return resolved;\r\n    };\r\n};\r\n", "export const SENSITIVE_STRING = \"***SensitiveInformation***\";\r\n", "export const createAggregatedClient = (commands, Client) => {\r\n    for (const command of Object.keys(commands)) {\r\n        const CommandCtor = commands[command];\r\n        const methodImpl = async function (args, optionsOrCb, cb) {\r\n            const command = new CommandCtor(args);\r\n            if (typeof optionsOrCb === \"function\") {\r\n                this.send(command, optionsOrCb);\r\n            }\r\n            else if (typeof cb === \"function\") {\r\n                if (typeof optionsOrCb !== \"object\")\r\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\r\n                this.send(command, optionsOrCb || {}, cb);\r\n            }\r\n            else {\r\n                return this.send(command, optionsOrCb);\r\n            }\r\n        };\r\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\r\n        Client.prototype[methodName] = methodImpl;\r\n    }\r\n};\r\n", "export class ServiceException extends Error {\r\n    constructor(options) {\r\n        super(options.message);\r\n        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype);\r\n        this.name = options.name;\r\n        this.$fault = options.$fault;\r\n        this.$metadata = options.$metadata;\r\n    }\r\n    static isInstance(value) {\r\n        if (!value)\r\n            return false;\r\n        const candidate = value;\r\n        return (ServiceException.prototype.isPrototypeOf(candidate) ||\r\n            (Boolean(candidate.$fault) &&\r\n                Boolean(candidate.$metadata) &&\r\n                (candidate.$fault === \"client\" || candidate.$fault === \"server\")));\r\n    }\r\n    static [Symbol.hasInstance](instance) {\r\n        if (!instance)\r\n            return false;\r\n        const candidate = instance;\r\n        if (this === ServiceException) {\r\n            return ServiceException.isInstance(instance);\r\n        }\r\n        if (ServiceException.isInstance(instance)) {\r\n            if (candidate.name && this.name) {\r\n                return this.prototype.isPrototypeOf(instance) || candidate.name === this.name;\r\n            }\r\n            return this.prototype.isPrototypeOf(instance);\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport const decorateServiceException = (exception, additions = {}) => {\r\n    Object.entries(additions)\r\n        .filter(([, v]) => v !== undefined)\r\n        .forEach(([k, v]) => {\r\n        if (exception[k] == undefined || exception[k] === \"\") {\r\n            exception[k] = v;\r\n        }\r\n    });\r\n    const message = exception.message || exception.Message || \"UnknownError\";\r\n    exception.message = message;\r\n    delete exception.Message;\r\n    return exception;\r\n};\r\n", "import { decorateServiceException } from \"./exceptions\";\r\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\r\n    const $metadata = deserializeMetadata(output);\r\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\r\n    const response = new exceptionCtor({\r\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\r\n        $fault: \"client\",\r\n        $metadata,\r\n    });\r\n    throw decorateServiceException(response, parsedBody);\r\n};\r\nexport const withBaseException = (ExceptionCtor) => {\r\n    return ({ output, parsedBody, errorCode }) => {\r\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\r\n    };\r\n};\r\nconst deserializeMetadata = (output) => ({\r\n    httpStatusCode: output.statusCode,\r\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\r\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\r\n    cfId: output.headers[\"x-amz-cf-id\"],\r\n});\r\n", "export const loadConfigsForDefaultMode = (mode) => {\r\n    switch (mode) {\r\n        case \"standard\":\r\n            return {\r\n                retryMode: \"standard\",\r\n                connectionTimeout: 3100,\r\n            };\r\n        case \"in-region\":\r\n            return {\r\n                retryMode: \"standard\",\r\n                connectionTimeout: 1100,\r\n            };\r\n        case \"cross-region\":\r\n            return {\r\n                retryMode: \"standard\",\r\n                connectionTimeout: 3100,\r\n            };\r\n        case \"mobile\":\r\n            return {\r\n                retryMode: \"standard\",\r\n                connectionTimeout: 30000,\r\n            };\r\n        default:\r\n            return {};\r\n    }\r\n};\r\n", "import { AlgorithmId } from \"@smithy/types\";\r\nexport { AlgorithmId };\r\nexport const getChecksumConfiguration = (runtimeConfig) => {\r\n    const checksumAlgorithms = [];\r\n    for (const id in AlgorithmId) {\r\n        const algorithmId = AlgorithmId[id];\r\n        if (runtimeConfig[algorithmId] === undefined) {\r\n            continue;\r\n        }\r\n        checksumAlgorithms.push({\r\n            algorithmId: () => algorithmId,\r\n            checksumConstructor: () => runtimeConfig[algorithmId],\r\n        });\r\n    }\r\n    return {\r\n        addChecksumAlgorithm(algo) {\r\n            checksumAlgorithms.push(algo);\r\n        },\r\n        checksumAlgorithms() {\r\n            return checksumAlgorithms;\r\n        },\r\n    };\r\n};\r\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\r\n    const runtimeConfig = {};\r\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\r\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\r\n    });\r\n    return runtimeConfig;\r\n};\r\n", "export const getRetryConfiguration = (runtimeConfig) => {\r\n    return {\r\n        setRetryStrategy(retryStrategy) {\r\n            runtimeConfig.retryStrategy = retryStrategy;\r\n        },\r\n        retryStrategy() {\r\n            return runtimeConfig.retryStrategy;\r\n        },\r\n    };\r\n};\r\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\r\n    const runtimeConfig = {};\r\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\r\n    return runtimeConfig;\r\n};\r\n", "import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\r\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\r\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\r\n    return Object.assign(getChecksumConfiguration(runtimeConfig), getRetryConfiguration(runtimeConfig));\r\n};\r\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\r\nexport const resolveDefaultRuntimeConfig = (config) => {\r\n    return Object.assign(resolveChecksumRuntimeConfig(config), resolveRetryRuntimeConfig(config));\r\n};\r\n", "export const getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\r\n", "export const getValueFromTextNode = (obj) => {\r\n    const textNodeName = \"#text\";\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\r\n            obj[key] = obj[key][textNodeName];\r\n        }\r\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n            obj[key] = getValueFromTextNode(obj[key]);\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n", "export const isSerializableHeaderValue = (value) => {\r\n    return value != null;\r\n};\r\n", "export class NoOpLogger {\r\n    trace() { }\r\n    debug() { }\r\n    info() { }\r\n    warn() { }\r\n    error() { }\r\n}\r\n", "export function map(arg0, arg1, arg2) {\r\n    let target;\r\n    let filter;\r\n    let instructions;\r\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\r\n        target = {};\r\n        instructions = arg0;\r\n    }\r\n    else {\r\n        target = arg0;\r\n        if (typeof arg1 === \"function\") {\r\n            filter = arg1;\r\n            instructions = arg2;\r\n            return mapWithFilter(target, filter, instructions);\r\n        }\r\n        else {\r\n            instructions = arg1;\r\n        }\r\n    }\r\n    for (const key of Object.keys(instructions)) {\r\n        if (!Array.isArray(instructions[key])) {\r\n            target[key] = instructions[key];\r\n            continue;\r\n        }\r\n        applyInstruction(target, null, instructions, key);\r\n    }\r\n    return target;\r\n}\r\nexport const convertMap = (target) => {\r\n    const output = {};\r\n    for (const [k, v] of Object.entries(target || {})) {\r\n        output[k] = [, v];\r\n    }\r\n    return output;\r\n};\r\nexport const take = (source, instructions) => {\r\n    const out = {};\r\n    for (const key in instructions) {\r\n        applyInstruction(out, source, instructions, key);\r\n    }\r\n    return out;\r\n};\r\nconst mapWithFilter = (target, filter, instructions) => {\r\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\r\n        if (Array.isArray(value)) {\r\n            _instructions[key] = value;\r\n        }\r\n        else {\r\n            if (typeof value === \"function\") {\r\n                _instructions[key] = [filter, value()];\r\n            }\r\n            else {\r\n                _instructions[key] = [filter, value];\r\n            }\r\n        }\r\n        return _instructions;\r\n    }, {}));\r\n};\r\nconst applyInstruction = (target, source, instructions, targetKey) => {\r\n    if (source !== null) {\r\n        let instruction = instructions[targetKey];\r\n        if (typeof instruction === \"function\") {\r\n            instruction = [, instruction];\r\n        }\r\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\r\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\r\n            target[targetKey] = valueFn(source[sourceKey]);\r\n        }\r\n        return;\r\n    }\r\n    let [filter, value] = instructions[targetKey];\r\n    if (typeof value === \"function\") {\r\n        let _value;\r\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\r\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\r\n        if (defaultFilterPassed) {\r\n            target[targetKey] = _value;\r\n        }\r\n        else if (customFilterPassed) {\r\n            target[targetKey] = value();\r\n        }\r\n    }\r\n    else {\r\n        const defaultFilterPassed = filter === undefined && value != null;\r\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\r\n        if (defaultFilterPassed || customFilterPassed) {\r\n            target[targetKey] = value;\r\n        }\r\n    }\r\n};\r\nconst nonNullish = (_) => _ != null;\r\nconst pass = (_) => _;\r\n", "export const serializeFloat = (value) => {\r\n    if (value !== value) {\r\n        return \"NaN\";\r\n    }\r\n    switch (value) {\r\n        case Infinity:\r\n            return \"Infinity\";\r\n        case -Infinity:\r\n            return \"-Infinity\";\r\n        default:\r\n            return value;\r\n    }\r\n};\r\nexport const serializeDateTime = (date) => date.toISOString().replace(\".000Z\", \"Z\");\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { NoOpLogger } from \"@smithy/smithy-client\";\r\nconst CONTENT_LENGTH_HEADER = \"content-length\";\r\nconst DECODED_CONTENT_LENGTH_HEADER = \"x-amz-decoded-content-length\";\r\nexport function checkContentLengthHeader() {\r\n    return (next, context) => async (args) => {\r\n        const { request } = args;\r\n        if (HttpRequest.isInstance(request)) {\r\n            if (!(CONTENT_LENGTH_HEADER in request.headers) && !(DECODED_CONTENT_LENGTH_HEADER in request.headers)) {\r\n                const message = `Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.`;\r\n                if (typeof context?.logger?.warn === \"function\" && !(context.logger instanceof NoOpLogger)) {\r\n                    context.logger.warn(message);\r\n                }\r\n                else {\r\n                    console.warn(message);\r\n                }\r\n            }\r\n        }\r\n        return next({ ...args });\r\n    };\r\n}\r\nexport const checkContentLengthHeaderMiddlewareOptions = {\r\n    step: \"finalizeRequest\",\r\n    tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\r\n    name: \"getCheckContentLengthHeaderPlugin\",\r\n    override: true,\r\n};\r\nexport const getCheckContentLengthHeaderPlugin = (unused) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);\r\n    },\r\n});\r\n", "export const regionRedirectEndpointMiddleware = (config) => {\r\n    return (next, context) => async (args) => {\r\n        const originalRegion = await config.region();\r\n        const regionProviderRef = config.region;\r\n        let unlock = () => { };\r\n        if (context.__s3RegionRedirect) {\r\n            Object.defineProperty(config, \"region\", {\r\n                writable: false,\r\n                value: async () => {\r\n                    return context.__s3RegionRedirect;\r\n                },\r\n            });\r\n            unlock = () => Object.defineProperty(config, \"region\", {\r\n                writable: true,\r\n                value: regionProviderRef,\r\n            });\r\n        }\r\n        try {\r\n            const result = await next(args);\r\n            if (context.__s3RegionRedirect) {\r\n                unlock();\r\n                const region = await config.region();\r\n                if (originalRegion !== region) {\r\n                    throw new Error(\"Region was not restored following S3 region redirect.\");\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            unlock();\r\n            throw e;\r\n        }\r\n    };\r\n};\r\nexport const regionRedirectEndpointMiddlewareOptions = {\r\n    tags: [\"REGION_REDIRECT\", \"S3\"],\r\n    name: \"regionRedirectEndpointMiddleware\",\r\n    override: true,\r\n    relation: \"before\",\r\n    toMiddleware: \"endpointV2Middleware\",\r\n};\r\n", "import { regionRedirectEndpointMiddleware, regionRedirectEndpointMiddlewareOptions, } from \"./region-redirect-endpoint-middleware\";\r\nexport function regionRedirectMiddleware(clientConfig) {\r\n    return (next, context) => async (args) => {\r\n        try {\r\n            return await next(args);\r\n        }\r\n        catch (err) {\r\n            if (clientConfig.followRegionRedirects) {\r\n                if (err?.$metadata?.httpStatusCode === 301 ||\r\n                    (err?.$metadata?.httpStatusCode === 400 && err?.name === \"IllegalLocationConstraintException\")) {\r\n                    try {\r\n                        const actualRegion = err.$response.headers[\"x-amz-bucket-region\"];\r\n                        context.logger?.debug(`Redirecting from ${await clientConfig.region()} to ${actualRegion}`);\r\n                        context.__s3RegionRedirect = actualRegion;\r\n                    }\r\n                    catch (e) {\r\n                        throw new Error(\"Region redirect failed: \" + e);\r\n                    }\r\n                    return next(args);\r\n                }\r\n            }\r\n            throw err;\r\n        }\r\n    };\r\n}\r\nexport const regionRedirectMiddlewareOptions = {\r\n    step: \"initialize\",\r\n    tags: [\"REGION_REDIRECT\", \"S3\"],\r\n    name: \"regionRedirectMiddleware\",\r\n    override: true,\r\n};\r\nexport const getRegionRedirectMiddlewarePlugin = (clientConfig) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.add(regionRedirectMiddleware(clientConfig), regionRedirectMiddlewareOptions);\r\n        clientStack.addRelativeTo(regionRedirectEndpointMiddleware(clientConfig), regionRedirectEndpointMiddlewareOptions);\r\n    },\r\n});\r\n", "import { HttpResponse } from \"@smithy/protocol-http\";\r\nimport { parseRfc7231DateTime } from \"@smithy/smithy-client\";\r\nexport const s3ExpiresMiddleware = (config) => {\r\n    return (next, context) => async (args) => {\r\n        const result = await next(args);\r\n        const { response } = result;\r\n        if (HttpResponse.isInstance(response)) {\r\n            if (response.headers.expires) {\r\n                response.headers.expiresstring = response.headers.expires;\r\n                try {\r\n                    parseRfc7231DateTime(response.headers.expires);\r\n                }\r\n                catch (e) {\r\n                    context.logger?.warn(`AWS SDK Warning for ${context.clientName}::${context.commandName} response parsing (${response.headers.expires}): ${e}`);\r\n                    delete response.headers.expires;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n};\r\nexport const s3ExpiresMiddlewareOptions = {\r\n    tags: [\"S3\"],\r\n    name: \"s3ExpiresMiddleware\",\r\n    override: true,\r\n    relation: \"after\",\r\n    toMiddleware: \"deserializerMiddleware\",\r\n};\r\nexport const getS3ExpiresMiddlewarePlugin = (clientConfig) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(s3ExpiresMiddleware(clientConfig), s3ExpiresMiddlewareOptions);\r\n    },\r\n});\r\n", "export function setCredentialFeature(credentials, feature, value) {\r\n    if (!credentials.$source) {\r\n        credentials.$source = {};\r\n    }\r\n    credentials.$source[feature] = value;\r\n    return credentials;\r\n}\r\n", "export function setFeature(context, feature, value) {\r\n    if (!context.__aws_sdk_context) {\r\n        context.__aws_sdk_context = {\r\n            features: {},\r\n        };\r\n    }\r\n    else if (!context.__aws_sdk_context.features) {\r\n        context.__aws_sdk_context.features = {};\r\n    }\r\n    context.__aws_sdk_context.features[feature] = value;\r\n}\r\n", "import { HttpResponse } from \"@smithy/protocol-http\";\r\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\r\n", "export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\r\n", "import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\r\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\r\n", "import { isClockSkewed } from \"./isClockSkewed\";\r\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\r\n    const clockTimeInMs = Date.parse(clockTime);\r\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\r\n        return clockTimeInMs - Date.now();\r\n    }\r\n    return currentSystemClockOffset;\r\n};\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\r\nconst throwSigningPropertyError = (name, property) => {\r\n    if (!property) {\r\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\r\n    }\r\n    return property;\r\n};\r\nexport const validateSigningProperties = async (signingProperties) => {\r\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\r\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\r\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\r\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\r\n    const signer = await signerFunction(authScheme);\r\n    const signingRegion = signingProperties?.signingRegion;\r\n    const signingRegionSet = signingProperties?.signingRegionSet;\r\n    const signingName = signingProperties?.signingName;\r\n    return {\r\n        config,\r\n        signer,\r\n        signingRegion,\r\n        signingRegionSet,\r\n        signingName,\r\n    };\r\n};\r\nexport class AwsSdkSigV4Signer {\r\n    async sign(httpRequest, identity, signingProperties) {\r\n        if (!HttpRequest.isInstance(httpRequest)) {\r\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\r\n        }\r\n        const validatedProps = await validateSigningProperties(signingProperties);\r\n        const { config, signer } = validatedProps;\r\n        let { signingRegion, signingName } = validatedProps;\r\n        const handlerExecutionContext = signingProperties.context;\r\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\r\n            const [first, second] = handlerExecutionContext.authSchemes;\r\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\r\n                signingRegion = second?.signingRegion ?? signingRegion;\r\n                signingName = second?.signingName ?? signingName;\r\n            }\r\n        }\r\n        const signedRequest = await signer.sign(httpRequest, {\r\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\r\n            signingRegion: signingRegion,\r\n            signingService: signingName,\r\n        });\r\n        return signedRequest;\r\n    }\r\n    errorHandler(signingProperties) {\r\n        return (error) => {\r\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\r\n            if (serverTime) {\r\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\r\n                const initialSystemClockOffset = config.systemClockOffset;\r\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\r\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\r\n                if (clockSkewCorrected && error.$metadata) {\r\n                    error.$metadata.clockSkewCorrected = true;\r\n                }\r\n            }\r\n            throw error;\r\n        };\r\n    }\r\n    successHandler(httpResponse, signingProperties) {\r\n        const dateHeader = getDateHeader(httpResponse);\r\n        if (dateHeader) {\r\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\r\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\r\n        }\r\n    }\r\n}\r\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { getSkewCorrectedDate } from \"../utils\";\r\nimport { AwsSdkSigV4Signer, validateSigningProperties } from \"./AwsSdkSigV4Signer\";\r\nexport class AwsSdkSigV4ASigner extends AwsSdkSigV4Signer {\r\n    async sign(httpRequest, identity, signingProperties) {\r\n        if (!HttpRequest.isInstance(httpRequest)) {\r\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\r\n        }\r\n        const { config, signer, signingRegion, signingRegionSet, signingName } = await validateSigningProperties(signingProperties);\r\n        const configResolvedSigningRegionSet = await config.sigv4aSigningRegionSet?.();\r\n        const multiRegionOverride = (configResolvedSigningRegionSet ??\r\n            signingRegionSet ?? [signingRegion]).join(\",\");\r\n        const signedRequest = await signer.sign(httpRequest, {\r\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\r\n            signingRegion: multiRegionOverride,\r\n            signingService: signingName,\r\n        });\r\n        return signedRequest;\r\n    }\r\n}\r\n", "export const memoize = (provider, isExpired, requiresRefresh) => {\r\n    let resolved;\r\n    let pending;\r\n    let hasResult;\r\n    let isConstant = false;\r\n    const coalesceProvider = async () => {\r\n        if (!pending) {\r\n            pending = provider();\r\n        }\r\n        try {\r\n            resolved = await pending;\r\n            hasResult = true;\r\n            isConstant = false;\r\n        }\r\n        finally {\r\n            pending = undefined;\r\n        }\r\n        return resolved;\r\n    };\r\n    if (isExpired === undefined) {\r\n        return async (options) => {\r\n            if (!hasResult || options?.forceRefresh) {\r\n                resolved = await coalesceProvider();\r\n            }\r\n            return resolved;\r\n        };\r\n    }\r\n    return async (options) => {\r\n        if (!hasResult || options?.forceRefresh) {\r\n            resolved = await coalesceProvider();\r\n        }\r\n        if (isConstant) {\r\n            return resolved;\r\n        }\r\n        if (requiresRefresh && !requiresRefresh(resolved)) {\r\n            isConstant = true;\r\n            return resolved;\r\n        }\r\n        if (isExpired(resolved)) {\r\n            await coalesceProvider();\r\n            return resolved;\r\n        }\r\n        return resolved;\r\n    };\r\n};\r\n", "import { normalizeProvider } from \"@smithy/core\";\r\nimport { ProviderError } from \"@smithy/property-provider\";\r\nexport const resolveAwsSdkSigV4AConfig = (config) => {\r\n    config.sigv4aSigningRegionSet = normalizeProvider(config.sigv4aSigningRegionSet);\r\n    return config;\r\n};\r\nexport const NODE_SIGV4A_CONFIG_OPTIONS = {\r\n    environmentVariableSelector(env) {\r\n        if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\r\n            return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_) => _.trim());\r\n        }\r\n        throw new ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\r\n            tryNextLink: true,\r\n        });\r\n    },\r\n    configFileSelector(profile) {\r\n        if (profile.sigv4a_signing_region_set) {\r\n            return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_) => _.trim());\r\n        }\r\n        throw new ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\r\n            tryNextLink: true,\r\n        });\r\n    },\r\n    default: undefined,\r\n};\r\n", "export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\r\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\r\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\r\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\r\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\r\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\r\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\r\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\r\nexport const AUTH_HEADER = \"authorization\";\r\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\r\nexport const DATE_HEADER = \"date\";\r\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\r\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\r\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\r\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\r\nexport const HOST_HEADER = \"host\";\r\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\r\n    authorization: true,\r\n    \"cache-control\": true,\r\n    connection: true,\r\n    expect: true,\r\n    from: true,\r\n    \"keep-alive\": true,\r\n    \"max-forwards\": true,\r\n    pragma: true,\r\n    referer: true,\r\n    te: true,\r\n    trailer: true,\r\n    \"transfer-encoding\": true,\r\n    upgrade: true,\r\n    \"user-agent\": true,\r\n    \"x-amzn-trace-id\": true,\r\n};\r\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\r\nexport const SEC_HEADER_PATTERN = /^sec-/;\r\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\r\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\r\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\r\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\r\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\r\nexport const MAX_CACHE_SIZE = 50;\r\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\r\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\r\n", "import { toHex } from \"@smithy/util-hex-encoding\";\r\nimport { toUint8Array } from \"@smithy/util-utf8\";\r\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\r\nconst signingKeyCache = {};\r\nconst cacheQueue = [];\r\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\r\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\r\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\r\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\r\n    if (cacheKey in signingKeyCache) {\r\n        return signingKeyCache[cacheKey];\r\n    }\r\n    cacheQueue.push(cacheKey);\r\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\r\n        delete signingKeyCache[cacheQueue.shift()];\r\n    }\r\n    let key = `AWS4${credentials.secretAccessKey}`;\r\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\r\n        key = await hmac(sha256Constructor, key, signable);\r\n    }\r\n    return (signingKeyCache[cacheKey] = key);\r\n};\r\nexport const clearCredentialCache = () => {\r\n    cacheQueue.length = 0;\r\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\r\n        delete signingKeyCache[cacheKey];\r\n    });\r\n};\r\nconst hmac = (ctor, secret, data) => {\r\n    const hash = new ctor(secret);\r\n    hash.update(toUint8Array(data));\r\n    return hash.digest();\r\n};\r\n", "import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\r\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\r\n    const canonical = {};\r\n    for (const headerName of Object.keys(headers).sort()) {\r\n        if (headers[headerName] == undefined) {\r\n            continue;\r\n        }\r\n        const canonicalHeaderName = headerName.toLowerCase();\r\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\r\n            unsignableHeaders?.has(canonicalHeaderName) ||\r\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\r\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\r\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\r\n                continue;\r\n            }\r\n        }\r\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\r\n    }\r\n    return canonical;\r\n};\r\n", "export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\r\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\r\n", "import { isArrayBuffer } from \"@smithy/is-array-buffer\";\r\nimport { toHex } from \"@smithy/util-hex-encoding\";\r\nimport { toUint8Array } from \"@smithy/util-utf8\";\r\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\r\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\r\n    for (const headerName of Object.keys(headers)) {\r\n        if (headerName.toLowerCase() === SHA256_HEADER) {\r\n            return headers[headerName];\r\n        }\r\n    }\r\n    if (body == undefined) {\r\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\r\n    }\r\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\r\n        const hashCtor = new hashConstructor();\r\n        hashCtor.update(toUint8Array(body));\r\n        return toHex(await hashCtor.digest());\r\n    }\r\n    return UNSIGNED_PAYLOAD;\r\n};\r\n", "import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\r\nimport { fromUtf8 } from \"@smithy/util-utf8\";\r\nexport class HeaderFormatter {\r\n    format(headers) {\r\n        const chunks = [];\r\n        for (const headerName of Object.keys(headers)) {\r\n            const bytes = fromUtf8(headerName);\r\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\r\n        }\r\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\r\n        let position = 0;\r\n        for (const chunk of chunks) {\r\n            out.set(chunk, position);\r\n            position += chunk.byteLength;\r\n        }\r\n        return out;\r\n    }\r\n    formatHeaderValue(header) {\r\n        switch (header.type) {\r\n            case \"boolean\":\r\n                return Uint8Array.from([header.value ? 0 : 1]);\r\n            case \"byte\":\r\n                return Uint8Array.from([2, header.value]);\r\n            case \"short\":\r\n                const shortView = new DataView(new ArrayBuffer(3));\r\n                shortView.setUint8(0, 3);\r\n                shortView.setInt16(1, header.value, false);\r\n                return new Uint8Array(shortView.buffer);\r\n            case \"integer\":\r\n                const intView = new DataView(new ArrayBuffer(5));\r\n                intView.setUint8(0, 4);\r\n                intView.setInt32(1, header.value, false);\r\n                return new Uint8Array(intView.buffer);\r\n            case \"long\":\r\n                const longBytes = new Uint8Array(9);\r\n                longBytes[0] = 5;\r\n                longBytes.set(header.value.bytes, 1);\r\n                return longBytes;\r\n            case \"binary\":\r\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\r\n                binView.setUint8(0, 6);\r\n                binView.setUint16(1, header.value.byteLength, false);\r\n                const binBytes = new Uint8Array(binView.buffer);\r\n                binBytes.set(header.value, 3);\r\n                return binBytes;\r\n            case \"string\":\r\n                const utf8Bytes = fromUtf8(header.value);\r\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\r\n                strView.setUint8(0, 7);\r\n                strView.setUint16(1, utf8Bytes.byteLength, false);\r\n                const strBytes = new Uint8Array(strView.buffer);\r\n                strBytes.set(utf8Bytes, 3);\r\n                return strBytes;\r\n            case \"timestamp\":\r\n                const tsBytes = new Uint8Array(9);\r\n                tsBytes[0] = 8;\r\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\r\n                return tsBytes;\r\n            case \"uuid\":\r\n                if (!UUID_PATTERN.test(header.value)) {\r\n                    throw new Error(`Invalid UUID received: ${header.value}`);\r\n                }\r\n                const uuidBytes = new Uint8Array(17);\r\n                uuidBytes[0] = 9;\r\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\r\n                return uuidBytes;\r\n        }\r\n    }\r\n}\r\nvar HEADER_VALUE_TYPE;\r\n(function (HEADER_VALUE_TYPE) {\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\r\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\r\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\r\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\r\nexport class Int64 {\r\n    constructor(bytes) {\r\n        this.bytes = bytes;\r\n        if (bytes.byteLength !== 8) {\r\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\r\n        }\r\n    }\r\n    static fromNumber(number) {\r\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\r\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\r\n        }\r\n        const bytes = new Uint8Array(8);\r\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\r\n            bytes[i] = remaining;\r\n        }\r\n        if (number < 0) {\r\n            negate(bytes);\r\n        }\r\n        return new Int64(bytes);\r\n    }\r\n    valueOf() {\r\n        const bytes = this.bytes.slice(0);\r\n        const negative = bytes[0] & 0b10000000;\r\n        if (negative) {\r\n            negate(bytes);\r\n        }\r\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\r\n    }\r\n    toString() {\r\n        return String(this.valueOf());\r\n    }\r\n}\r\nfunction negate(bytes) {\r\n    for (let i = 0; i < 8; i++) {\r\n        bytes[i] ^= 0xff;\r\n    }\r\n    for (let i = 7; i > -1; i--) {\r\n        bytes[i]++;\r\n        if (bytes[i] !== 0)\r\n            break;\r\n    }\r\n}\r\n", "export const hasHeader = (soughtHeader, headers) => {\r\n    soughtHeader = soughtHeader.toLowerCase();\r\n    for (const headerName of Object.keys(headers)) {\r\n        if (soughtHeader === headerName.toLowerCase()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexport const getHeaderValue = (soughtHeader, headers) => {\r\n    soughtHeader = soughtHeader.toLowerCase();\r\n    for (const headerName of Object.keys(headers)) {\r\n        if (soughtHeader === headerName.toLowerCase()) {\r\n            return headers[headerName];\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nexport const deleteHeader = (soughtHeader, headers) => {\r\n    soughtHeader = soughtHeader.toLowerCase();\r\n    for (const headerName of Object.keys(headers)) {\r\n        if (soughtHeader === headerName.toLowerCase()) {\r\n            delete headers[headerName];\r\n        }\r\n    }\r\n};\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nexport const moveHeadersToQuery = (request, options = {}) => {\r\n    const { headers, query = {} } = HttpRequest.clone(request);\r\n    for (const name of Object.keys(headers)) {\r\n        const lname = name.toLowerCase();\r\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\r\n            options.hoistableHeaders?.has(lname)) {\r\n            query[name] = headers[name];\r\n            delete headers[name];\r\n        }\r\n    }\r\n    return {\r\n        ...request,\r\n        headers,\r\n        query,\r\n    };\r\n};\r\n", "import { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { GENERATED_HEADERS } from \"./constants\";\r\nexport const prepareRequest = (request) => {\r\n    request = HttpRequest.clone(request);\r\n    for (const headerName of Object.keys(request.headers)) {\r\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\r\n            delete request.headers[headerName];\r\n        }\r\n    }\r\n    return request;\r\n};\r\n", "import { escapeUri } from \"@smithy/util-uri-escape\";\r\nimport { SIGNATURE_HEADER } from \"./constants\";\r\nexport const getCanonicalQuery = ({ query = {} }) => {\r\n    const keys = [];\r\n    const serialized = {};\r\n    for (const key of Object.keys(query)) {\r\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\r\n            continue;\r\n        }\r\n        const encodedKey = escapeUri(key);\r\n        keys.push(encodedKey);\r\n        const value = query[key];\r\n        if (typeof value === \"string\") {\r\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            serialized[encodedKey] = value\r\n                .slice(0)\r\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\r\n                .sort()\r\n                .join(\"&\");\r\n        }\r\n    }\r\n    return keys\r\n        .sort()\r\n        .map((key) => serialized[key])\r\n        .filter((serialized) => serialized)\r\n        .join(\"&\");\r\n};\r\n", "export const iso8601 = (time) => toDate(time)\r\n    .toISOString()\r\n    .replace(/\\.\\d{3}Z$/, \"Z\");\r\nexport const toDate = (time) => {\r\n    if (typeof time === \"number\") {\r\n        return new Date(time * 1000);\r\n    }\r\n    if (typeof time === \"string\") {\r\n        if (Number(time)) {\r\n            return new Date(Number(time) * 1000);\r\n        }\r\n        return new Date(time);\r\n    }\r\n    return time;\r\n};\r\n", "import { toHex } from \"@smithy/util-hex-encoding\";\r\nimport { normalizeProvider } from \"@smithy/util-middleware\";\r\nimport { escapeUri } from \"@smithy/util-uri-escape\";\r\nimport { toUint8Array } from \"@smithy/util-utf8\";\r\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\r\nimport { iso8601 } from \"./utilDate\";\r\nexport class SignatureV4Base {\r\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\r\n        this.service = service;\r\n        this.sha256 = sha256;\r\n        this.uriEscapePath = uriEscapePath;\r\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\r\n        this.regionProvider = normalizeProvider(region);\r\n        this.credentialProvider = normalizeProvider(credentials);\r\n    }\r\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\r\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\r\n        return `${request.method}\r\n${this.getCanonicalPath(request)}\r\n${getCanonicalQuery(request)}\r\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\r\n\r\n${sortedHeaders.join(\";\")}\r\n${payloadHash}`;\r\n    }\r\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\r\n        const hash = new this.sha256();\r\n        hash.update(toUint8Array(canonicalRequest));\r\n        const hashedRequest = await hash.digest();\r\n        return `${algorithmIdentifier}\r\n${longDate}\r\n${credentialScope}\r\n${toHex(hashedRequest)}`;\r\n    }\r\n    getCanonicalPath({ path }) {\r\n        if (this.uriEscapePath) {\r\n            const normalizedPathSegments = [];\r\n            for (const pathSegment of path.split(\"/\")) {\r\n                if (pathSegment?.length === 0)\r\n                    continue;\r\n                if (pathSegment === \".\")\r\n                    continue;\r\n                if (pathSegment === \"..\") {\r\n                    normalizedPathSegments.pop();\r\n                }\r\n                else {\r\n                    normalizedPathSegments.push(pathSegment);\r\n                }\r\n            }\r\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\r\n            const doubleEncoded = escapeUri(normalizedPath);\r\n            return doubleEncoded.replace(/%2F/g, \"/\");\r\n        }\r\n        return path;\r\n    }\r\n    validateResolvedCredentials(credentials) {\r\n        if (typeof credentials !== \"object\" ||\r\n            typeof credentials.accessKeyId !== \"string\" ||\r\n            typeof credentials.secretAccessKey !== \"string\") {\r\n            throw new Error(\"Resolved credential object is not valid\");\r\n        }\r\n    }\r\n    formatDate(now) {\r\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\r\n        return {\r\n            longDate,\r\n            shortDate: longDate.slice(0, 8),\r\n        };\r\n    }\r\n    getCanonicalHeaderList(headers) {\r\n        return Object.keys(headers).sort().join(\";\");\r\n    }\r\n}\r\n", "import { toHex } from \"@smithy/util-hex-encoding\";\r\nimport { toUint8Array } from \"@smithy/util-utf8\";\r\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\r\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\r\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\r\nimport { getPayloadHash } from \"./getPayloadHash\";\r\nimport { HeaderFormatter } from \"./HeaderFormatter\";\r\nimport { hasHeader } from \"./headerUtil\";\r\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\r\nimport { prepareRequest } from \"./prepareRequest\";\r\nimport { SignatureV4Base } from \"./SignatureV4Base\";\r\nexport class SignatureV4 extends SignatureV4Base {\r\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\r\n        super({\r\n            applyChecksum,\r\n            credentials,\r\n            region,\r\n            service,\r\n            sha256,\r\n            uriEscapePath,\r\n        });\r\n        this.headerFormatter = new HeaderFormatter();\r\n    }\r\n    async presign(originalRequest, options = {}) {\r\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\r\n        const credentials = await this.credentialProvider();\r\n        this.validateResolvedCredentials(credentials);\r\n        const region = signingRegion ?? (await this.regionProvider());\r\n        const { longDate, shortDate } = this.formatDate(signingDate);\r\n        if (expiresIn > MAX_PRESIGNED_TTL) {\r\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\r\n        }\r\n        const scope = createScope(shortDate, region, signingService ?? this.service);\r\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\r\n        if (credentials.sessionToken) {\r\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\r\n        }\r\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\r\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\r\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\r\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\r\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\r\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = this.getCanonicalHeaderList(canonicalHeaders);\r\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\r\n        return request;\r\n    }\r\n    async sign(toSign, options) {\r\n        if (typeof toSign === \"string\") {\r\n            return this.signString(toSign, options);\r\n        }\r\n        else if (toSign.headers && toSign.payload) {\r\n            return this.signEvent(toSign, options);\r\n        }\r\n        else if (toSign.message) {\r\n            return this.signMessage(toSign, options);\r\n        }\r\n        else {\r\n            return this.signRequest(toSign, options);\r\n        }\r\n    }\r\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\r\n        const region = signingRegion ?? (await this.regionProvider());\r\n        const { shortDate, longDate } = this.formatDate(signingDate);\r\n        const scope = createScope(shortDate, region, signingService ?? this.service);\r\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\r\n        const hash = new this.sha256();\r\n        hash.update(headers);\r\n        const hashedHeaders = toHex(await hash.digest());\r\n        const stringToSign = [\r\n            EVENT_ALGORITHM_IDENTIFIER,\r\n            longDate,\r\n            scope,\r\n            priorSignature,\r\n            hashedHeaders,\r\n            hashedPayload,\r\n        ].join(\"\\n\");\r\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\r\n    }\r\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\r\n        const promise = this.signEvent({\r\n            headers: this.headerFormatter.format(signableMessage.message.headers),\r\n            payload: signableMessage.message.body,\r\n        }, {\r\n            signingDate,\r\n            signingRegion,\r\n            signingService,\r\n            priorSignature: signableMessage.priorSignature,\r\n        });\r\n        return promise.then((signature) => {\r\n            return { message: signableMessage.message, signature };\r\n        });\r\n    }\r\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\r\n        const credentials = await this.credentialProvider();\r\n        this.validateResolvedCredentials(credentials);\r\n        const region = signingRegion ?? (await this.regionProvider());\r\n        const { shortDate } = this.formatDate(signingDate);\r\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\r\n        hash.update(toUint8Array(stringToSign));\r\n        return toHex(await hash.digest());\r\n    }\r\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\r\n        const credentials = await this.credentialProvider();\r\n        this.validateResolvedCredentials(credentials);\r\n        const region = signingRegion ?? (await this.regionProvider());\r\n        const request = prepareRequest(requestToSign);\r\n        const { longDate, shortDate } = this.formatDate(signingDate);\r\n        const scope = createScope(shortDate, region, signingService ?? this.service);\r\n        request.headers[AMZ_DATE_HEADER] = longDate;\r\n        if (credentials.sessionToken) {\r\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\r\n        }\r\n        const payloadHash = await getPayloadHash(request, this.sha256);\r\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\r\n            request.headers[SHA256_HEADER] = payloadHash;\r\n        }\r\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\r\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\r\n        request.headers[AUTH_HEADER] =\r\n            `${ALGORITHM_IDENTIFIER} ` +\r\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\r\n                `SignedHeaders=${this.getCanonicalHeaderList(canonicalHeaders)}, ` +\r\n                `Signature=${signature}`;\r\n        return request;\r\n    }\r\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\r\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest, ALGORITHM_IDENTIFIER);\r\n        const hash = new this.sha256(await keyPromise);\r\n        hash.update(toUint8Array(stringToSign));\r\n        return toHex(await hash.digest());\r\n    }\r\n    getSigningKey(credentials, region, shortDate, service) {\r\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\r\n    }\r\n}\r\n", "export const signatureV4aContainer = {\r\n    SignatureV4a: null,\r\n};\r\n", "import { setCredentialFeature } from \"@aws-sdk/core/client\";\r\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\r\nimport { SignatureV4 } from \"@smithy/signature-v4\";\r\nexport const resolveAwsSdkSigV4Config = (config) => {\r\n    let inputCredentials = config.credentials;\r\n    let isUserSupplied = !!config.credentials;\r\n    let resolvedCredentials = undefined;\r\n    Object.defineProperty(config, \"credentials\", {\r\n        set(credentials) {\r\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\r\n                isUserSupplied = true;\r\n            }\r\n            inputCredentials = credentials;\r\n            const memoizedProvider = normalizeCredentialProvider(config, {\r\n                credentials: inputCredentials,\r\n                credentialDefaultProvider: config.credentialDefaultProvider,\r\n            });\r\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\r\n            if (isUserSupplied && !boundProvider.attributed) {\r\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\r\n                resolvedCredentials.memoized = boundProvider.memoized;\r\n                resolvedCredentials.configBound = boundProvider.configBound;\r\n                resolvedCredentials.attributed = true;\r\n            }\r\n            else {\r\n                resolvedCredentials = boundProvider;\r\n            }\r\n        },\r\n        get() {\r\n            return resolvedCredentials;\r\n        },\r\n        enumerable: true,\r\n        configurable: true,\r\n    });\r\n    config.credentials = inputCredentials;\r\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\r\n    let signer;\r\n    if (config.signer) {\r\n        signer = normalizeProvider(config.signer);\r\n    }\r\n    else if (config.regionInfoProvider) {\r\n        signer = () => normalizeProvider(config.region)()\r\n            .then(async (region) => [\r\n            (await config.regionInfoProvider(region, {\r\n                useFipsEndpoint: await config.useFipsEndpoint(),\r\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\r\n            })) || {},\r\n            region,\r\n        ])\r\n            .then(([regionInfo, region]) => {\r\n            const { signingRegion, signingService } = regionInfo;\r\n            config.signingRegion = config.signingRegion || signingRegion || region;\r\n            config.signingName = config.signingName || signingService || config.serviceId;\r\n            const params = {\r\n                ...config,\r\n                credentials: config.credentials,\r\n                region: config.signingRegion,\r\n                service: config.signingName,\r\n                sha256,\r\n                uriEscapePath: signingEscapePath,\r\n            };\r\n            const SignerCtor = config.signerConstructor || SignatureV4;\r\n            return new SignerCtor(params);\r\n        });\r\n    }\r\n    else {\r\n        signer = async (authScheme) => {\r\n            authScheme = Object.assign({}, {\r\n                name: \"sigv4\",\r\n                signingName: config.signingName || config.defaultSigningName,\r\n                signingRegion: await normalizeProvider(config.region)(),\r\n                properties: {},\r\n            }, authScheme);\r\n            const signingRegion = authScheme.signingRegion;\r\n            const signingService = authScheme.signingName;\r\n            config.signingRegion = config.signingRegion || signingRegion;\r\n            config.signingName = config.signingName || signingService || config.serviceId;\r\n            const params = {\r\n                ...config,\r\n                credentials: config.credentials,\r\n                region: config.signingRegion,\r\n                service: config.signingName,\r\n                sha256,\r\n                uriEscapePath: signingEscapePath,\r\n            };\r\n            const SignerCtor = config.signerConstructor || SignatureV4;\r\n            return new SignerCtor(params);\r\n        };\r\n    }\r\n    const resolvedConfig = Object.assign(config, {\r\n        systemClockOffset,\r\n        signingEscapePath,\r\n        signer,\r\n    });\r\n    return resolvedConfig;\r\n};\r\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\r\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\r\n    let credentialsProvider;\r\n    if (credentials) {\r\n        if (!credentials?.memoized) {\r\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\r\n        }\r\n        else {\r\n            credentialsProvider = credentials;\r\n        }\r\n    }\r\n    else {\r\n        if (credentialDefaultProvider) {\r\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\r\n                parentClientConfig: config,\r\n            })));\r\n        }\r\n        else {\r\n            credentialsProvider = async () => {\r\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\r\n            };\r\n        }\r\n    }\r\n    credentialsProvider.memoized = true;\r\n    return credentialsProvider;\r\n}\r\nfunction bindCallerConfig(config, credentialsProvider) {\r\n    if (credentialsProvider.configBound) {\r\n        return credentialsProvider;\r\n    }\r\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\r\n    fn.memoized = credentialsProvider.memoized;\r\n    fn.configBound = true;\r\n    return fn;\r\n}\r\n", "const TEXT_ENCODER = typeof TextEncoder == \"function\" ? new TextEncoder() : null;\r\nexport const calculateBodyLength = (body) => {\r\n    if (typeof body === \"string\") {\r\n        if (TEXT_ENCODER) {\r\n            return TEXT_ENCODER.encode(body).byteLength;\r\n        }\r\n        let len = body.length;\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            const code = body.charCodeAt(i);\r\n            if (code > 0x7f && code <= 0x7ff)\r\n                len++;\r\n            else if (code > 0x7ff && code <= 0xffff)\r\n                len += 2;\r\n            if (code >= 0xdc00 && code <= 0xdfff)\r\n                i--;\r\n        }\r\n        return len;\r\n    }\r\n    else if (typeof body.byteLength === \"number\") {\r\n        return body.byteLength;\r\n    }\r\n    else if (typeof body.size === \"number\") {\r\n        return body.size;\r\n    }\r\n    throw new Error(`Body Length computation failed for ${body}`);\r\n};\r\n", "import { collectBody } from \"@smithy/smithy-client\";\r\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\r\n", "import { NumericValue } from \"@smithy/core/serde\";\r\nconst NUMERIC_CONTROL_CHAR = String.fromCharCode(925);\r\nexport class JsonReplacer {\r\n    values = new Map();\r\n    counter = 0;\r\n    stage = 0;\r\n    createReplacer() {\r\n        if (this.stage === 1) {\r\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer already created.\");\r\n        }\r\n        if (this.stage === 2) {\r\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\r\n        }\r\n        this.stage = 1;\r\n        return (key, value) => {\r\n            if (value instanceof NumericValue) {\r\n                const v = `${NUMERIC_CONTROL_CHAR + +\"nv\" + this.counter++}_` + value.string;\r\n                this.values.set(`\"${v}\"`, value.string);\r\n                return v;\r\n            }\r\n            if (typeof value === \"bigint\") {\r\n                const s = value.toString();\r\n                const v = `${NUMERIC_CONTROL_CHAR + \"b\" + this.counter++}_` + s;\r\n                this.values.set(`\"${v}\"`, s);\r\n                return v;\r\n            }\r\n            return value;\r\n        };\r\n    }\r\n    replaceInJson(json) {\r\n        if (this.stage === 0) {\r\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer not created yet.\");\r\n        }\r\n        if (this.stage === 2) {\r\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\r\n        }\r\n        this.stage = 2;\r\n        if (this.counter === 0) {\r\n            return json;\r\n        }\r\n        for (const [key, value] of this.values) {\r\n            json = json.replace(key, value);\r\n        }\r\n        return json;\r\n    }\r\n}\r\n", "import { FromStringShapeDeserializer } from \"@smithy/core/protocols\";\r\nimport { NormalizedSchema } from \"@smithy/core/schema\";\r\nimport { getValueFromTextNode } from \"@smithy/smithy-client\";\r\nimport { toUtf8 } from \"@smithy/util-utf8\";\r\nimport { XMLParser } from \"fast-xml-parser\";\r\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\r\nexport class XmlShapeDeserializer extends SerdeContextConfig {\r\n    settings;\r\n    stringDeserializer;\r\n    constructor(settings) {\r\n        super();\r\n        this.settings = settings;\r\n        this.stringDeserializer = new FromStringShapeDeserializer(settings);\r\n    }\r\n    setSerdeContext(serdeContext) {\r\n        this.serdeContext = serdeContext;\r\n        this.stringDeserializer.setSerdeContext(serdeContext);\r\n    }\r\n    read(schema, bytes, key) {\r\n        const ns = NormalizedSchema.of(schema);\r\n        const memberSchemas = ns.getMemberSchemas();\r\n        const isEventPayload = ns.isStructSchema() &&\r\n            ns.isMemberSchema() &&\r\n            !!Object.values(memberSchemas).find((memberNs) => {\r\n                return !!memberNs.getMemberTraits().eventPayload;\r\n            });\r\n        if (isEventPayload) {\r\n            const output = {};\r\n            const memberName = Object.keys(memberSchemas)[0];\r\n            const eventMemberSchema = memberSchemas[memberName];\r\n            if (eventMemberSchema.isBlobSchema()) {\r\n                output[memberName] = bytes;\r\n            }\r\n            else {\r\n                output[memberName] = this.read(memberSchemas[memberName], bytes);\r\n            }\r\n            return output;\r\n        }\r\n        const xmlString = (this.serdeContext?.utf8Encoder ?? toUtf8)(bytes);\r\n        const parsedObject = this.parseXml(xmlString);\r\n        return this.readSchema(schema, key ? parsedObject[key] : parsedObject);\r\n    }\r\n    readSchema(_schema, value) {\r\n        const ns = NormalizedSchema.of(_schema);\r\n        const traits = ns.getMergedTraits();\r\n        const schema = ns.getSchema();\r\n        if (ns.isListSchema() && !Array.isArray(value)) {\r\n            return this.readSchema(schema, [value]);\r\n        }\r\n        if (value == null) {\r\n            return value;\r\n        }\r\n        if (typeof value === \"object\") {\r\n            const sparse = !!traits.sparse;\r\n            const flat = !!traits.xmlFlattened;\r\n            if (ns.isListSchema()) {\r\n                const listValue = ns.getValueSchema();\r\n                const buffer = [];\r\n                const sourceKey = listValue.getMergedTraits().xmlName ?? \"member\";\r\n                const source = flat ? value : (value[0] ?? value)[sourceKey];\r\n                const sourceArray = Array.isArray(source) ? source : [source];\r\n                for (const v of sourceArray) {\r\n                    if (v != null || sparse) {\r\n                        buffer.push(this.readSchema(listValue, v));\r\n                    }\r\n                }\r\n                return buffer;\r\n            }\r\n            const buffer = {};\r\n            if (ns.isMapSchema()) {\r\n                const keyNs = ns.getKeySchema();\r\n                const memberNs = ns.getValueSchema();\r\n                let entries;\r\n                if (flat) {\r\n                    entries = Array.isArray(value) ? value : [value];\r\n                }\r\n                else {\r\n                    entries = Array.isArray(value.entry) ? value.entry : [value.entry];\r\n                }\r\n                const keyProperty = keyNs.getMergedTraits().xmlName ?? \"key\";\r\n                const valueProperty = memberNs.getMergedTraits().xmlName ?? \"value\";\r\n                for (const entry of entries) {\r\n                    const key = entry[keyProperty];\r\n                    const value = entry[valueProperty];\r\n                    if (value != null || sparse) {\r\n                        buffer[key] = this.readSchema(memberNs, value);\r\n                    }\r\n                }\r\n                return buffer;\r\n            }\r\n            if (ns.isStructSchema()) {\r\n                for (const [memberName, memberSchema] of ns.structIterator()) {\r\n                    const memberTraits = memberSchema.getMergedTraits();\r\n                    const xmlObjectKey = !memberTraits.httpPayload\r\n                        ? memberSchema.getMemberTraits().xmlName ?? memberName\r\n                        : memberTraits.xmlName ?? memberSchema.getName();\r\n                    if (value[xmlObjectKey] != null) {\r\n                        buffer[memberName] = this.readSchema(memberSchema, value[xmlObjectKey]);\r\n                    }\r\n                }\r\n                return buffer;\r\n            }\r\n            if (ns.isDocumentSchema()) {\r\n                return value;\r\n            }\r\n            throw new Error(`@aws-sdk/core/protocols - xml deserializer unhandled schema type for ${ns.getName(true)}`);\r\n        }\r\n        else {\r\n            if (ns.isListSchema()) {\r\n                return [];\r\n            }\r\n            else if (ns.isMapSchema() || ns.isStructSchema()) {\r\n                return {};\r\n            }\r\n            return this.stringDeserializer.read(ns, value);\r\n        }\r\n    }\r\n    parseXml(xml) {\r\n        if (xml.length) {\r\n            const parser = new XMLParser({\r\n                attributeNamePrefix: \"\",\r\n                htmlEntities: true,\r\n                ignoreAttributes: false,\r\n                ignoreDeclaration: true,\r\n                parseTagValue: false,\r\n                trimValues: false,\r\n                tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\r\n            });\r\n            parser.addEntity(\"#xD\", \"\\r\");\r\n            parser.addEntity(\"#10\", \"\\n\");\r\n            let parsedObj;\r\n            try {\r\n                parsedObj = parser.parse(xml, true);\r\n            }\r\n            catch (e) {\r\n                if (e && typeof e === \"object\") {\r\n                    Object.defineProperty(e, \"$responseBodyText\", {\r\n                        value: xml,\r\n                    });\r\n                }\r\n                throw e;\r\n            }\r\n            const textNodeName = \"#text\";\r\n            const key = Object.keys(parsedObj)[0];\r\n            const parsedObjToReturn = parsedObj[key];\r\n            if (parsedObjToReturn[textNodeName]) {\r\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\r\n                delete parsedObjToReturn[textNodeName];\r\n            }\r\n            return getValueFromTextNode(parsedObjToReturn);\r\n        }\r\n        return {};\r\n    }\r\n}\r\n", "import { getValueFromTextNode } from \"@smithy/smithy-client\";\r\nimport { XMLParser } from \"fast-xml-parser\";\r\nimport { collectBodyString } from \"../common\";\r\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\r\n    if (encoded.length) {\r\n        const parser = new XMLParser({\r\n            attributeNamePrefix: \"\",\r\n            htmlEntities: true,\r\n            ignoreAttributes: false,\r\n            ignoreDeclaration: true,\r\n            parseTagValue: false,\r\n            trimValues: false,\r\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\r\n        });\r\n        parser.addEntity(\"#xD\", \"\\r\");\r\n        parser.addEntity(\"#10\", \"\\n\");\r\n        let parsedObj;\r\n        try {\r\n            parsedObj = parser.parse(encoded, true);\r\n        }\r\n        catch (e) {\r\n            if (e && typeof e === \"object\") {\r\n                Object.defineProperty(e, \"$responseBodyText\", {\r\n                    value: encoded,\r\n                });\r\n            }\r\n            throw e;\r\n        }\r\n        const textNodeName = \"#text\";\r\n        const key = Object.keys(parsedObj)[0];\r\n        const parsedObjToReturn = parsedObj[key];\r\n        if (parsedObjToReturn[textNodeName]) {\r\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\r\n            delete parsedObjToReturn[textNodeName];\r\n        }\r\n        return getValueFromTextNode(parsedObjToReturn);\r\n    }\r\n    return {};\r\n});\r\nexport const parseXmlErrorBody = async (errorBody, context) => {\r\n    const value = await parseXmlBody(errorBody, context);\r\n    if (value.Error) {\r\n        value.Error.message = value.Error.message ?? value.Error.Message;\r\n    }\r\n    return value;\r\n};\r\nexport const loadRestXmlErrorCode = (output, data) => {\r\n    if (data?.Error?.Code !== undefined) {\r\n        return data.Error.Code;\r\n    }\r\n    if (data?.Code !== undefined) {\r\n        return data.Code;\r\n    }\r\n    if (output.statusCode == 404) {\r\n        return \"NotFound\";\r\n    }\r\n};\r\n", "export function escapeAttribute(value) {\r\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\r\n}\r\n", "export function escapeElement(value) {\r\n    return value\r\n        .replace(/&/g, \"&amp;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&apos;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/\\r/g, \"&#x0D;\")\r\n        .replace(/\\n/g, \"&#x0A;\")\r\n        .replace(/\\u0085/g, \"&#x85;\")\r\n        .replace(/\\u2028/, \"&#x2028;\");\r\n}\r\n", "import { escapeElement } from \"./escape-element\";\r\nexport class XmlText {\r\n    value;\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return escapeElement(\"\" + this.value);\r\n    }\r\n}\r\n", "import { escapeAttribute } from \"./escape-attribute\";\r\nimport { XmlText } from \"./XmlText\";\r\nexport class XmlNode {\r\n    name;\r\n    children;\r\n    attributes = {};\r\n    static of(name, childText, withName) {\r\n        const node = new XmlNode(name);\r\n        if (childText !== undefined) {\r\n            node.addChildNode(new XmlText(childText));\r\n        }\r\n        if (withName !== undefined) {\r\n            node.withName(withName);\r\n        }\r\n        return node;\r\n    }\r\n    constructor(name, children = []) {\r\n        this.name = name;\r\n        this.children = children;\r\n    }\r\n    withName(name) {\r\n        this.name = name;\r\n        return this;\r\n    }\r\n    addAttribute(name, value) {\r\n        this.attributes[name] = value;\r\n        return this;\r\n    }\r\n    addChildNode(child) {\r\n        this.children.push(child);\r\n        return this;\r\n    }\r\n    removeAttribute(name) {\r\n        delete this.attributes[name];\r\n        return this;\r\n    }\r\n    n(name) {\r\n        this.name = name;\r\n        return this;\r\n    }\r\n    c(child) {\r\n        this.children.push(child);\r\n        return this;\r\n    }\r\n    a(name, value) {\r\n        if (value != null) {\r\n            this.attributes[name] = value;\r\n        }\r\n        return this;\r\n    }\r\n    cc(input, field, withName = field) {\r\n        if (input[field] != null) {\r\n            const node = XmlNode.of(field, input[field]).withName(withName);\r\n            this.c(node);\r\n        }\r\n    }\r\n    l(input, listName, memberName, valueProvider) {\r\n        if (input[listName] != null) {\r\n            const nodes = valueProvider();\r\n            nodes.map((node) => {\r\n                node.withName(memberName);\r\n                this.c(node);\r\n            });\r\n        }\r\n    }\r\n    lc(input, listName, memberName, valueProvider) {\r\n        if (input[listName] != null) {\r\n            const nodes = valueProvider();\r\n            const containerNode = new XmlNode(memberName);\r\n            nodes.map((node) => {\r\n                containerNode.c(node);\r\n            });\r\n            this.c(containerNode);\r\n        }\r\n    }\r\n    toString() {\r\n        const hasChildren = Boolean(this.children.length);\r\n        let xmlText = `<${this.name}`;\r\n        const attributes = this.attributes;\r\n        for (const attributeName of Object.keys(attributes)) {\r\n            const attribute = attributes[attributeName];\r\n            if (attribute != null) {\r\n                xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\r\n            }\r\n        }\r\n        return (xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`);\r\n    }\r\n}\r\n", "export var SelectorType;\r\n(function (SelectorType) {\r\n    SelectorType[\"ENV\"] = \"env\";\r\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\r\n})(SelectorType || (SelectorType = {}));\r\n", "import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\r\nexport const S3_EXPRESS_BUCKET_TYPE = \"Directory\";\r\nexport const S3_EXPRESS_BACKEND = \"S3Express\";\r\nexport const S3_EXPRESS_AUTH_SCHEME = \"sigv4-s3express\";\r\nexport const SESSION_TOKEN_QUERY_PARAM = \"X-Amz-S3session-Token\";\r\nexport const SESSION_TOKEN_HEADER = SESSION_TOKEN_QUERY_PARAM.toLowerCase();\r\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME = \"AWS_S3_DISABLE_EXPRESS_SESSION_AUTH\";\r\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME = \"s3_disable_express_session_auth\";\r\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS = {\r\n    environmentVariableSelector: (env) => booleanSelector(env, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME, SelectorType.ENV),\r\n    configFileSelector: (profile) => booleanSelector(profile, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME, SelectorType.CONFIG),\r\n    default: false,\r\n};\r\n", "import { setFeature } from \"@aws-sdk/core\";\r\nimport { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { S3_EXPRESS_AUTH_SCHEME, S3_EXPRESS_BACKEND, S3_EXPRESS_BUCKET_TYPE, SESSION_TOKEN_HEADER } from \"../constants\";\r\nexport const s3ExpressMiddleware = (options) => {\r\n    return (next, context) => async (args) => {\r\n        if (context.endpointV2) {\r\n            const endpoint = context.endpointV2;\r\n            const isS3ExpressAuth = endpoint.properties?.authSchemes?.[0]?.name === S3_EXPRESS_AUTH_SCHEME;\r\n            const isS3ExpressBucket = endpoint.properties?.backend === S3_EXPRESS_BACKEND ||\r\n                endpoint.properties?.bucketType === S3_EXPRESS_BUCKET_TYPE;\r\n            if (isS3ExpressBucket) {\r\n                setFeature(context, \"S3_EXPRESS_BUCKET\", \"J\");\r\n                context.isS3ExpressBucket = true;\r\n            }\r\n            if (isS3ExpressAuth) {\r\n                const requestBucket = args.input.Bucket;\r\n                if (requestBucket) {\r\n                    const s3ExpressIdentity = await options.s3ExpressIdentityProvider.getS3ExpressIdentity(await options.credentials(), {\r\n                        Bucket: requestBucket,\r\n                    });\r\n                    context.s3ExpressIdentity = s3ExpressIdentity;\r\n                    if (HttpRequest.isInstance(args.request) && s3ExpressIdentity.sessionToken) {\r\n                        args.request.headers[SESSION_TOKEN_HEADER] = s3ExpressIdentity.sessionToken;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return next(args);\r\n    };\r\n};\r\nexport const s3ExpressMiddlewareOptions = {\r\n    name: \"s3ExpressMiddleware\",\r\n    step: \"build\",\r\n    tags: [\"S3\", \"S3_EXPRESS\"],\r\n    override: true,\r\n};\r\nexport const getS3ExpressPlugin = (options) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.add(s3ExpressMiddleware(options), s3ExpressMiddlewareOptions);\r\n    },\r\n});\r\n", "export const signS3Express = async (s3ExpressIdentity, signingOptions, request, sigV4MultiRegionSigner) => {\r\n    const signedRequest = await sigV4MultiRegionSigner.signWithCredentials(request, s3ExpressIdentity, {});\r\n    if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\r\n        throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\r\n    }\r\n    return signedRequest;\r\n};\r\n", "import { httpSigningMiddlewareOptions } from \"@smithy/core\";\r\nimport { HttpRequest } from \"@smithy/protocol-http\";\r\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\r\nimport { getSmithyContext } from \"@smithy/util-middleware\";\r\nimport { signS3Express } from \"./signS3Express\";\r\nconst defaultErrorHandler = (signingProperties) => (error) => {\r\n    throw error;\r\n};\r\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\r\nexport const s3ExpressHttpSigningMiddlewareOptions = httpSigningMiddlewareOptions;\r\nexport const s3ExpressHttpSigningMiddleware = (config) => (next, context) => async (args) => {\r\n    if (!HttpRequest.isInstance(args.request)) {\r\n        return next(args);\r\n    }\r\n    const smithyContext = getSmithyContext(context);\r\n    const scheme = smithyContext.selectedHttpAuthScheme;\r\n    if (!scheme) {\r\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\r\n    }\r\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\r\n    let request;\r\n    if (context.s3ExpressIdentity) {\r\n        request = await signS3Express(context.s3ExpressIdentity, signingProperties, args.request, await config.signer());\r\n    }\r\n    else {\r\n        request = await signer.sign(args.request, identity, signingProperties);\r\n    }\r\n    const output = await next({\r\n        ...args,\r\n        request,\r\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\r\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\r\n    return output;\r\n};\r\nexport const getS3ExpressHttpSigningPlugin = (config) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(s3ExpressHttpSigningMiddleware(config), httpSigningMiddlewareOptions);\r\n    },\r\n});\r\n", "export class S3ExpressIdentityCache {\r\n    data;\r\n    lastPurgeTime = Date.now();\r\n    static EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS = 30_000;\r\n    constructor(data = {}) {\r\n        this.data = data;\r\n    }\r\n    get(key) {\r\n        const entry = this.data[key];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        return entry;\r\n    }\r\n    set(key, entry) {\r\n        this.data[key] = entry;\r\n        return entry;\r\n    }\r\n    delete(key) {\r\n        delete this.data[key];\r\n    }\r\n    async purgeExpired() {\r\n        const now = Date.now();\r\n        if (this.lastPurgeTime + S3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS > now) {\r\n            return;\r\n        }\r\n        for (const key in this.data) {\r\n            const entry = this.data[key];\r\n            if (!entry.isRefreshing) {\r\n                const credential = await entry.identity;\r\n                if (credential.expiration) {\r\n                    if (credential.expiration.getTime() < now) {\r\n                        delete this.data[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export class S3ExpressIdentityCacheEntry {\r\n    _identity;\r\n    isRefreshing;\r\n    accessed;\r\n    constructor(_identity, isRefreshing = false, accessed = Date.now()) {\r\n        this._identity = _identity;\r\n        this.isRefreshing = isRefreshing;\r\n        this.accessed = accessed;\r\n    }\r\n    get identity() {\r\n        this.accessed = Date.now();\r\n        return this._identity;\r\n    }\r\n}\r\n", "import { S3ExpressIdentityCache } from \"./S3ExpressIdentityCache\";\r\nimport { S3ExpressIdentityCacheEntry } from \"./S3ExpressIdentityCacheEntry\";\r\nexport class S3ExpressIdentityProviderImpl {\r\n    createSessionFn;\r\n    cache;\r\n    static REFRESH_WINDOW_MS = 60_000;\r\n    constructor(createSessionFn, cache = new S3ExpressIdentityCache()) {\r\n        this.createSessionFn = createSessionFn;\r\n        this.cache = cache;\r\n    }\r\n    async getS3ExpressIdentity(awsIdentity, identityProperties) {\r\n        const key = identityProperties.Bucket;\r\n        const { cache } = this;\r\n        const entry = cache.get(key);\r\n        if (entry) {\r\n            return entry.identity.then((identity) => {\r\n                const isExpired = (identity.expiration?.getTime() ?? 0) < Date.now();\r\n                if (isExpired) {\r\n                    return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\r\n                }\r\n                const isExpiringSoon = (identity.expiration?.getTime() ?? 0) < Date.now() + S3ExpressIdentityProviderImpl.REFRESH_WINDOW_MS;\r\n                if (isExpiringSoon && !entry.isRefreshing) {\r\n                    entry.isRefreshing = true;\r\n                    this.getIdentity(key).then((id) => {\r\n                        cache.set(key, new S3ExpressIdentityCacheEntry(Promise.resolve(id)));\r\n                    });\r\n                }\r\n                return identity;\r\n            });\r\n        }\r\n        return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\r\n    }\r\n    async getIdentity(key) {\r\n        await this.cache.purgeExpired().catch((error) => {\r\n            console.warn(\"Error while clearing expired entries in S3ExpressIdentityCache: \\n\" + error);\r\n        });\r\n        const session = await this.createSessionFn(key);\r\n        if (!session.Credentials?.AccessKeyId || !session.Credentials?.SecretAccessKey) {\r\n            throw new Error(\"s3#createSession response credential missing AccessKeyId or SecretAccessKey.\");\r\n        }\r\n        const identity = {\r\n            accessKeyId: session.Credentials.AccessKeyId,\r\n            secretAccessKey: session.Credentials.SecretAccessKey,\r\n            sessionToken: session.Credentials.SessionToken,\r\n            expiration: session.Credentials.Expiration ? new Date(session.Credentials.Expiration) : undefined,\r\n        };\r\n        return identity;\r\n    }\r\n}\r\n", "import { SignatureV4 } from \"@smithy/signature-v4\";\r\nimport { SESSION_TOKEN_HEADER, SESSION_TOKEN_QUERY_PARAM } from \"../constants\";\r\nexport class SignatureV4S3Express extends SignatureV4 {\r\n    async signWithCredentials(requestToSign, credentials, options) {\r\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\r\n        requestToSign.headers[SESSION_TOKEN_HEADER] = credentials.sessionToken;\r\n        const privateAccess = this;\r\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\r\n        return privateAccess.signRequest(requestToSign, options ?? {});\r\n    }\r\n    async presignWithCredentials(requestToSign, credentials, options) {\r\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\r\n        delete requestToSign.headers[SESSION_TOKEN_HEADER];\r\n        requestToSign.headers[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\r\n        requestToSign.query = requestToSign.query ?? {};\r\n        requestToSign.query[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\r\n        const privateAccess = this;\r\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\r\n        return this.presign(requestToSign, options);\r\n    }\r\n}\r\nfunction getCredentialsWithoutSessionToken(credentials) {\r\n    const credentialsWithoutSessionToken = {\r\n        accessKeyId: credentials.accessKeyId,\r\n        secretAccessKey: credentials.secretAccessKey,\r\n        expiration: credentials.expiration,\r\n    };\r\n    return credentialsWithoutSessionToken;\r\n}\r\nfunction setSingleOverride(privateAccess, credentialsWithoutSessionToken) {\r\n    const id = setTimeout(() => {\r\n        throw new Error(\"SignatureV4S3Express credential override was created but not called.\");\r\n    }, 10);\r\n    const currentCredentialProvider = privateAccess.credentialProvider;\r\n    const overrideCredentialsProviderOnce = () => {\r\n        clearTimeout(id);\r\n        privateAccess.credentialProvider = currentCredentialProvider;\r\n        return Promise.resolve(credentialsWithoutSessionToken);\r\n    };\r\n    privateAccess.credentialProvider = overrideCredentialsProviderOnce;\r\n}\r\n", "import { S3ExpressIdentityProviderImpl } from \"./s3-express\";\r\nexport const resolveS3Config = (input, { session, }) => {\r\n    const [s3ClientProvider, CreateSessionCommandCtor] = session;\r\n    const { forcePathStyle, useAccelerateEndpoint, disableMultiregionAccessPoints, followRegionRedirects, s3ExpressIdentityProvider, bucketEndpoint, } = input;\r\n    return Object.assign(input, {\r\n        forcePathStyle: forcePathStyle ?? false,\r\n        useAccelerateEndpoint: useAccelerateEndpoint ?? false,\r\n        disableMultiregionAccessPoints: disableMultiregionAccessPoints ?? false,\r\n        followRegionRedirects: followRegionRedirects ?? false,\r\n        s3ExpressIdentityProvider: s3ExpressIdentityProvider ??\r\n            new S3ExpressIdentityProviderImpl(async (key) => s3ClientProvider().send(new CreateSessionCommandCtor({\r\n                Bucket: key,\r\n            }))),\r\n        bucketEndpoint: bucketEndpoint ?? false,\r\n    });\r\n};\r\n", "import { HttpResponse } from \"@smithy/protocol-http\";\r\nimport { headStream, splitStream } from \"@smithy/util-stream\";\r\nconst THROW_IF_EMPTY_BODY = {\r\n    CopyObjectCommand: true,\r\n    UploadPartCopyCommand: true,\r\n    CompleteMultipartUploadCommand: true,\r\n};\r\nconst MAX_BYTES_TO_INSPECT = 3000;\r\nexport const throw200ExceptionsMiddleware = (config) => (next, context) => async (args) => {\r\n    const result = await next(args);\r\n    const { response } = result;\r\n    if (!HttpResponse.isInstance(response)) {\r\n        return result;\r\n    }\r\n    const { statusCode, body: sourceBody } = response;\r\n    if (statusCode < 200 || statusCode >= 300) {\r\n        return result;\r\n    }\r\n    const isSplittableStream = typeof sourceBody?.stream === \"function\" ||\r\n        typeof sourceBody?.pipe === \"function\" ||\r\n        typeof sourceBody?.tee === \"function\";\r\n    if (!isSplittableStream) {\r\n        return result;\r\n    }\r\n    let bodyCopy = sourceBody;\r\n    let body = sourceBody;\r\n    if (sourceBody && typeof sourceBody === \"object\" && !(sourceBody instanceof Uint8Array)) {\r\n        [bodyCopy, body] = await splitStream(sourceBody);\r\n    }\r\n    response.body = body;\r\n    const bodyBytes = await collectBody(bodyCopy, {\r\n        streamCollector: async (stream) => {\r\n            return headStream(stream, MAX_BYTES_TO_INSPECT);\r\n        },\r\n    });\r\n    if (typeof bodyCopy?.destroy === \"function\") {\r\n        bodyCopy.destroy();\r\n    }\r\n    const bodyStringTail = config.utf8Encoder(bodyBytes.subarray(bodyBytes.length - 16));\r\n    if (bodyBytes.length === 0 && THROW_IF_EMPTY_BODY[context.commandName]) {\r\n        const err = new Error(\"S3 aborted request\");\r\n        err.name = \"InternalError\";\r\n        throw err;\r\n    }\r\n    if (bodyStringTail && bodyStringTail.endsWith(\"</Error>\")) {\r\n        response.statusCode = 400;\r\n    }\r\n    return result;\r\n};\r\nconst collectBody = (streamBody = new Uint8Array(), context) => {\r\n    if (streamBody instanceof Uint8Array) {\r\n        return Promise.resolve(streamBody);\r\n    }\r\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\r\n};\r\nexport const throw200ExceptionsMiddlewareOptions = {\r\n    relation: \"after\",\r\n    toMiddleware: \"deserializerMiddleware\",\r\n    tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\r\n    name: \"throw200ExceptionsMiddleware\",\r\n    override: true,\r\n};\r\nexport const getThrow200ExceptionsPlugin = (config) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\r\n    },\r\n});\r\n", "export const validate = (str) => typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\r\nexport const parse = (arn) => {\r\n    const segments = arn.split(\":\");\r\n    if (segments.length < 6 || segments[0] !== \"arn\")\r\n        throw new Error(\"Malformed ARN\");\r\n    const [, partition, service, region, accountId, ...resource] = segments;\r\n    return {\r\n        partition,\r\n        service,\r\n        region,\r\n        accountId,\r\n        resource: resource.join(\":\"),\r\n    };\r\n};\r\nexport const build = (arnObject) => {\r\n    const { partition = \"aws\", service, region, accountId, resource } = arnObject;\r\n    if ([service, region, accountId, resource].some((segment) => typeof segment !== \"string\")) {\r\n        throw new Error(\"Input ARN object is invalid\");\r\n    }\r\n    return `arn:${partition}:${service}:${region}:${accountId}:${resource}`;\r\n};\r\n", "export function bucketEndpointMiddleware(options) {\r\n    return (next, context) => async (args) => {\r\n        if (options.bucketEndpoint) {\r\n            const endpoint = context.endpointV2;\r\n            if (endpoint) {\r\n                const bucket = args.input.Bucket;\r\n                if (typeof bucket === \"string\") {\r\n                    try {\r\n                        const bucketEndpointUrl = new URL(bucket);\r\n                        context.endpointV2 = {\r\n                            ...endpoint,\r\n                            url: bucketEndpointUrl,\r\n                        };\r\n                    }\r\n                    catch (e) {\r\n                        const warning = `@aws-sdk/middleware-sdk-s3: bucketEndpoint=true was set but Bucket=${bucket} could not be parsed as URL.`;\r\n                        if (context.logger?.constructor?.name === \"NoOpLogger\") {\r\n                            console.warn(warning);\r\n                        }\r\n                        else {\r\n                            context.logger?.warn?.(warning);\r\n                        }\r\n                        throw e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return next(args);\r\n    };\r\n}\r\nexport const bucketEndpointMiddlewareOptions = {\r\n    name: \"bucketEndpointMiddleware\",\r\n    override: true,\r\n    relation: \"after\",\r\n    toMiddleware: \"endpointV2Middleware\",\r\n};\r\n", "import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\r\nimport { bucketEndpointMiddleware, bucketEndpointMiddlewareOptions } from \"./bucket-endpoint-middleware\";\r\nexport function validateBucketNameMiddleware({ bucketEndpoint }) {\r\n    return (next) => async (args) => {\r\n        const { input: { Bucket }, } = args;\r\n        if (!bucketEndpoint && typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\r\n            const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\r\n            err.name = \"InvalidBucketName\";\r\n            throw err;\r\n        }\r\n        return next({ ...args });\r\n    };\r\n}\r\nexport const validateBucketNameMiddlewareOptions = {\r\n    step: \"initialize\",\r\n    tags: [\"VALIDATE_BUCKET_NAME\"],\r\n    name: \"validateBucketNameMiddleware\",\r\n    override: true,\r\n};\r\nexport const getValidateBucketNamePlugin = (options) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.add(validateBucketNameMiddleware(options), validateBucketNameMiddlewareOptions);\r\n        clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\r\n    },\r\n});\r\n", "export const resolveParamsForS3 = async (endpointParams) => {\r\n    const bucket = endpointParams?.Bucket || \"\";\r\n    if (typeof endpointParams.Bucket === \"string\") {\r\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\r\n    }\r\n    if (isArnBucketName(bucket)) {\r\n        if (endpointParams.ForcePathStyle === true) {\r\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\r\n        }\r\n    }\r\n    else if (!isDnsCompatibleBucketName(bucket) ||\r\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\r\n        bucket.toLowerCase() !== bucket ||\r\n        bucket.length < 3) {\r\n        endpointParams.ForcePathStyle = true;\r\n    }\r\n    if (endpointParams.DisableMultiRegionAccessPoints) {\r\n        endpointParams.disableMultiRegionAccessPoints = true;\r\n        endpointParams.DisableMRAP = true;\r\n    }\r\n    return endpointParams;\r\n};\r\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\r\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\r\nconst DOTS_PATTERN = /\\.\\./;\r\nexport const DOT_PATTERN = /\\./;\r\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\r\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\r\nexport const isArnBucketName = (bucketName) => {\r\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\r\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\r\n    const isValidArn = Boolean(isArn && partition && service && bucket);\r\n    if (isArn && !isValidArn) {\r\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\r\n    }\r\n    return isValidArn;\r\n};\r\n", "export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\r\n    const configProvider = async () => {\r\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\r\n        if (typeof configValue === \"function\") {\r\n            return configValue();\r\n        }\r\n        return configValue;\r\n    };\r\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\r\n        return async () => {\r\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\r\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\r\n            return configValue;\r\n        };\r\n    }\r\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\r\n        return async () => {\r\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\r\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\r\n            return configValue;\r\n        };\r\n    }\r\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\r\n        return async () => {\r\n            const endpoint = await configProvider();\r\n            if (endpoint && typeof endpoint === \"object\") {\r\n                if (\"url\" in endpoint) {\r\n                    return endpoint.url.href;\r\n                }\r\n                if (\"hostname\" in endpoint) {\r\n                    const { protocol, hostname, port, path } = endpoint;\r\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\r\n                }\r\n            }\r\n            return endpoint;\r\n        };\r\n    }\r\n    return configProvider;\r\n};\r\n", "export const getEndpointFromConfig = async (serviceId) => undefined;\r\n", "export function parseQueryString(querystring) {\r\n    const query = {};\r\n    querystring = querystring.replace(/^\\?/, \"\");\r\n    if (querystring) {\r\n        for (const pair of querystring.split(\"&\")) {\r\n            let [key, value = null] = pair.split(\"=\");\r\n            key = decodeURIComponent(key);\r\n            if (value) {\r\n                value = decodeURIComponent(value);\r\n            }\r\n            if (!(key in query)) {\r\n                query[key] = value;\r\n            }\r\n            else if (Array.isArray(query[key])) {\r\n                query[key].push(value);\r\n            }\r\n            else {\r\n                query[key] = [query[key], value];\r\n            }\r\n        }\r\n    }\r\n    return query;\r\n}\r\n", "import { parseQueryString } from \"@smithy/querystring-parser\";\r\nexport const parseUrl = (url) => {\r\n    if (typeof url === \"string\") {\r\n        return parseUrl(new URL(url));\r\n    }\r\n    const { hostname, pathname, port, protocol, search } = url;\r\n    let query;\r\n    if (search) {\r\n        query = parseQueryString(search);\r\n    }\r\n    return {\r\n        hostname,\r\n        port: port ? parseInt(port) : undefined,\r\n        protocol,\r\n        path: pathname,\r\n        query,\r\n    };\r\n};\r\n", "import { parseUrl } from \"@smithy/url-parser\";\r\nexport const toEndpointV1 = (endpoint) => {\r\n    if (typeof endpoint === \"object\") {\r\n        if (\"url\" in endpoint) {\r\n            return parseUrl(endpoint.url);\r\n        }\r\n        return endpoint;\r\n    }\r\n    return parseUrl(endpoint);\r\n};\r\n", "import { resolveParamsForS3 } from \"../service-customizations\";\r\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\r\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\r\nimport { toEndpointV1 } from \"./toEndpointV1\";\r\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\r\n    if (!clientConfig.endpoint) {\r\n        let endpointFromConfig;\r\n        if (clientConfig.serviceConfiguredEndpoint) {\r\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\r\n        }\r\n        else {\r\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\r\n        }\r\n        if (endpointFromConfig) {\r\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\r\n        }\r\n    }\r\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\r\n    if (typeof clientConfig.endpointProvider !== \"function\") {\r\n        throw new Error(\"config.endpointProvider is not set.\");\r\n    }\r\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\r\n    return endpoint;\r\n};\r\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\r\n    const endpointParams = {};\r\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\r\n    for (const [name, instruction] of Object.entries(instructions)) {\r\n        switch (instruction.type) {\r\n            case \"staticContextParams\":\r\n                endpointParams[name] = instruction.value;\r\n                break;\r\n            case \"contextParams\":\r\n                endpointParams[name] = commandInput[instruction.name];\r\n                break;\r\n            case \"clientContextParams\":\r\n            case \"builtInParams\":\r\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\r\n                break;\r\n            case \"operationContextParams\":\r\n                endpointParams[name] = instruction.get(commandInput);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\r\n        }\r\n    }\r\n    if (Object.keys(instructions).length === 0) {\r\n        Object.assign(endpointParams, clientConfig);\r\n    }\r\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\r\n        await resolveParamsForS3(endpointParams);\r\n    }\r\n    return endpointParams;\r\n};\r\n", "import { setFeature } from \"@smithy/core\";\r\nimport { getSmithyContext } from \"@smithy/util-middleware\";\r\nimport { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\r\nexport const endpointMiddleware = ({ config, instructions, }) => {\r\n    return (next, context) => async (args) => {\r\n        if (config.endpoint) {\r\n            setFeature(context, \"ENDPOINT_OVERRIDE\", \"N\");\r\n        }\r\n        const endpoint = await getEndpointFromInstructions(args.input, {\r\n            getEndpointParameterInstructions() {\r\n                return instructions;\r\n            },\r\n        }, { ...config }, context);\r\n        context.endpointV2 = endpoint;\r\n        context.authSchemes = endpoint.properties?.authSchemes;\r\n        const authScheme = context.authSchemes?.[0];\r\n        if (authScheme) {\r\n            context[\"signing_region\"] = authScheme.signingRegion;\r\n            context[\"signing_service\"] = authScheme.signingName;\r\n            const smithyContext = getSmithyContext(context);\r\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\r\n            if (httpAuthOption) {\r\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\r\n                    signing_region: authScheme.signingRegion,\r\n                    signingRegion: authScheme.signingRegion,\r\n                    signing_service: authScheme.signingName,\r\n                    signingName: authScheme.signingName,\r\n                    signingRegionSet: authScheme.signingRegionSet,\r\n                }, authScheme.properties);\r\n            }\r\n        }\r\n        return next({\r\n            ...args,\r\n        });\r\n    };\r\n};\r\n", "import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\r\nimport { endpointMiddleware } from \"./endpointMiddleware\";\r\nexport const endpointMiddlewareOptions = {\r\n    step: \"serialize\",\r\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\r\n    name: \"endpointV2Middleware\",\r\n    override: true,\r\n    relation: \"before\",\r\n    toMiddleware: serializerMiddlewareOption.name,\r\n};\r\nexport const getEndpointPlugin = (config, instructions) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(endpointMiddleware({\r\n            config,\r\n            instructions,\r\n        }), endpointMiddlewareOptions);\r\n    },\r\n});\r\n", "import { normalizeProvider } from \"@smithy/util-middleware\";\r\nimport { getEndpointFromConfig } from \"./adaptors/getEndpointFromConfig\";\r\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\r\nexport const resolveEndpointConfig = (input) => {\r\n    const tls = input.tls ?? true;\r\n    const { endpoint, useDualstackEndpoint, useFipsEndpoint } = input;\r\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\r\n    const isCustomEndpoint = !!endpoint;\r\n    const resolvedConfig = Object.assign(input, {\r\n        endpoint: customEndpointProvider,\r\n        tls,\r\n        isCustomEndpoint,\r\n        useDualstackEndpoint: normalizeProvider(useDualstackEndpoint ?? false),\r\n        useFipsEndpoint: normalizeProvider(useFipsEndpoint ?? false),\r\n    });\r\n    let configuredEndpointPromise = undefined;\r\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\r\n        if (input.serviceId && !configuredEndpointPromise) {\r\n            configuredEndpointPromise = getEndpointFromConfig(input.serviceId);\r\n        }\r\n        return configuredEndpointPromise;\r\n    };\r\n    return resolvedConfig;\r\n};\r\n", "export const signatureV4CrtContainer = {\r\n    CrtSignerV4: null,\r\n};\r\n", "import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\r\nimport { signatureV4aContainer, } from \"@smithy/signature-v4\";\r\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\r\nexport class SignatureV4MultiRegion {\r\n    sigv4aSigner;\r\n    sigv4Signer;\r\n    signerOptions;\r\n    static sigv4aDependency() {\r\n        if (typeof signatureV4CrtContainer.CrtSignerV4 === \"function\") {\r\n            return \"crt\";\r\n        }\r\n        else if (typeof signatureV4aContainer.SignatureV4a === \"function\") {\r\n            return \"js\";\r\n        }\r\n        return \"none\";\r\n    }\r\n    constructor(options) {\r\n        this.sigv4Signer = new SignatureV4S3Express(options);\r\n        this.signerOptions = options;\r\n    }\r\n    async sign(requestToSign, options = {}) {\r\n        if (options.signingRegion === \"*\") {\r\n            return this.getSigv4aSigner().sign(requestToSign, options);\r\n        }\r\n        return this.sigv4Signer.sign(requestToSign, options);\r\n    }\r\n    async signWithCredentials(requestToSign, credentials, options = {}) {\r\n        if (options.signingRegion === \"*\") {\r\n            const signer = this.getSigv4aSigner();\r\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\r\n            if (CrtSignerV4 && signer instanceof CrtSignerV4) {\r\n                return signer.signWithCredentials(requestToSign, credentials, options);\r\n            }\r\n            else {\r\n                throw new Error(`signWithCredentials with signingRegion '*' is only supported when using the CRT dependency @aws-sdk/signature-v4-crt. ` +\r\n                    `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. ` +\r\n                    `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\r\n                    `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. ` +\r\n                    `For more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`);\r\n            }\r\n        }\r\n        return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\r\n    }\r\n    async presign(originalRequest, options = {}) {\r\n        if (options.signingRegion === \"*\") {\r\n            const signer = this.getSigv4aSigner();\r\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\r\n            if (CrtSignerV4 && signer instanceof CrtSignerV4) {\r\n                return signer.presign(originalRequest, options);\r\n            }\r\n            else {\r\n                throw new Error(`presign with signingRegion '*' is only supported when using the CRT dependency @aws-sdk/signature-v4-crt. ` +\r\n                    `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. ` +\r\n                    `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\r\n                    `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. ` +\r\n                    `For more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`);\r\n            }\r\n        }\r\n        return this.sigv4Signer.presign(originalRequest, options);\r\n    }\r\n    async presignWithCredentials(originalRequest, credentials, options = {}) {\r\n        if (options.signingRegion === \"*\") {\r\n            throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\r\n        }\r\n        return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\r\n    }\r\n    getSigv4aSigner() {\r\n        if (!this.sigv4aSigner) {\r\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\r\n            const JsSigV4aSigner = signatureV4aContainer.SignatureV4a;\r\n            if (this.signerOptions.runtime === \"node\") {\r\n                if (!CrtSignerV4 && !JsSigV4aSigner) {\r\n                    throw new Error(\"Neither CRT nor JS SigV4a implementation is available. \" +\r\n                        \"Please load either @aws-sdk/signature-v4-crt or @aws-sdk/signature-v4a. \" +\r\n                        \"For more information please go to \" +\r\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\");\r\n                }\r\n                if (CrtSignerV4 && typeof CrtSignerV4 === \"function\") {\r\n                    this.sigv4aSigner = new CrtSignerV4({\r\n                        ...this.signerOptions,\r\n                        signingAlgorithm: 1,\r\n                    });\r\n                }\r\n                else if (JsSigV4aSigner && typeof JsSigV4aSigner === \"function\") {\r\n                    this.sigv4aSigner = new JsSigV4aSigner({\r\n                        ...this.signerOptions,\r\n                    });\r\n                }\r\n                else {\r\n                    throw new Error(\"Available SigV4a implementation is not a valid constructor. \" +\r\n                        \"Please ensure you've properly imported @aws-sdk/signature-v4-crt or @aws-sdk/signature-v4a.\" +\r\n                        \"For more information please go to \" +\r\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\");\r\n                }\r\n            }\r\n            else {\r\n                if (!JsSigV4aSigner || typeof JsSigV4aSigner !== \"function\") {\r\n                    throw new Error(\"JS SigV4a implementation is not available or not a valid constructor. \" +\r\n                        \"Please check whether you have installed the @aws-sdk/signature-v4a package explicitly. The CRT implementation is not available for browsers. \" +\r\n                        \"You must also register the package by calling [require('@aws-sdk/signature-v4a');] \" +\r\n                        \"or an ESM equivalent such as [import '@aws-sdk/signature-v4a';]. \" +\r\n                        \"For more information please go to \" +\r\n                        \"https://github.com/aws/aws-sdk-js-v3#using-javascript-non-crt-implementation-of-sigv4a\");\r\n                }\r\n                this.sigv4aSigner = new JsSigV4aSigner({\r\n                    ...this.signerOptions,\r\n                });\r\n            }\r\n        }\r\n        return this.sigv4aSigner;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["val", "XmlNode", "val", "entityName", "val", "val", "result", "entityName", "val", "XMLParser", "attStr", "val", "XMLParser", "entry", "HttpAuthLocation", "HttpApiKeyAuthLocation", "EndpointURLScheme", "AlgorithmId", "FieldPosition", "IniSectionType", "RequestHandlerProtocol", "logger", "map", "normalizeProvider", "logger", "size", "body", "LazyJsonString", "val", "resolvedPath", "Client", "command", "getChecksumConfiguration", "resolveChecksumRuntimeConfig", "getChecksumConfiguration", "resolveChecksumRuntimeConfig", "filter", "setFeature", "normalizeProvider", "HEADER_VALUE_TYPE", "value", "serialized", "normalizeProvider", "normalizeProvider", "import_fast_xml_parser", "val", "SelectorType", "setFeature", "defaultErrorHandler", "defaultSuccessHandler", "defaultErrorHandler", "defaultSuccessHandler", "collectBody"]
}
