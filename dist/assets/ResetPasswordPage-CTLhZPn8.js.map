{"version":3,"file":"ResetPasswordPage-CTLhZPn8.js","sources":["../../src/pages/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2, Eye, EyeOff, Lock, CheckCircle2, AlertCircle, ArrowLeft } from 'lucide-react';\nimport Logo from '@/components/Logo';\nimport { useToast } from '@/hooks/use-toast';\nimport { useSupabaseAuth } from '@/contexts/SupabaseAuthContext';\n\nconst ResetPasswordPage: React.FC = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState<'error' | 'success'>('error');\n  const [token, setToken] = useState('');\n\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { toast } = useToast();\n  const { updatePassword } = useSupabaseAuth();\n\n  useEffect(() => {\n    const type = searchParams.get('type');\n    \n    if (type === 'recovery') {\n      setToken('recovery');\n    } else {\n      // For Supabase, we don't need to show an error immediately\n      // The user might have been redirected here directly\n      setToken('recovery');\n    }\n  }, [searchParams]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setMessage('');\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      setMessageType('error');\n      return;\n    }\n\n    if (password.length < 6) {\n      setMessage('Password must be at least 6 characters long');\n      setMessageType('error');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const { error } = await updatePassword(password);\n\n      if (error) {\n        setMessage(error.message);\n        setMessageType('error');\n        toast({\n          title: \"Error\",\n          description: error.message,\n          variant: \"destructive\"\n        });\n      } else {\n        setMessage('Password reset successfully! Redirecting to login...');\n        setMessageType('success');\n        toast({\n          title: \"Success\",\n          description: \"Password reset successfully\"\n        });\n\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to reset password';\n      setMessage(errorMessage);\n      setMessageType('error');\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center p-4\" data-id=\"dpdv55alk\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n      <div className=\"w-full max-w-md\" data-id=\"3srcy9393\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n        {/* Logo and Company Name */}\n        <div className=\"text-center mb-8\" data-id=\"968fyjjtt\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <div className=\"flex flex-col items-center\" data-id=\"nw3vmu7wh\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            <div className=\"mb-4 transform hover:scale-105 transition-transform duration-200\" data-id=\"oopupxh29\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              <Logo size=\"xl\" showText={false} className=\"mb-4\" data-id=\"wjkr3op05\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n            </div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-800 to-indigo-800 bg-clip-text text-transparent mb-2\" data-id=\"ix1tvevg8\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              DFS Manager Portal\n            </h1>\n            <p className=\"text-slate-600 font-medium\" data-id=\"2laq9ll50\" data-path=\"src/pages/ResetPasswordPage.tsx\">Reset Your Password</p>\n          </div>\n        </div>\n\n        <Card className=\"shadow-2xl border-0 backdrop-blur-sm bg-white/95\" data-id=\"045tlkg86\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <CardHeader className=\"space-y-1 pb-6\" data-id=\"ddnsbfvo5\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            <CardTitle className=\"text-2xl font-bold text-center text-slate-800\" data-id=\"osyjg8yv0\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              Set New Password\n            </CardTitle>\n            <CardDescription className=\"text-center text-slate-600\" data-id=\"fdgtx5ea9\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              Enter your new password below\n            </CardDescription>\n          </CardHeader>\n          <CardContent data-id=\"r3rebjnsn\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            {message &&\n            <Alert className={`mb-4 ${messageType === 'success' ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`} data-id=\"qajtm8vvb\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                {messageType === 'success' ?\n              <CheckCircle2 className=\"h-4 w-4 text-green-600\" data-id=\"fh2t41ydw\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> :\n\n              <AlertCircle className=\"h-4 w-4 text-red-600\" data-id=\"9apgywdll\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n              }\n                <AlertDescription className={messageType === 'success' ? 'text-green-800' : 'text-red-800'} data-id=\"10xeeuax8\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  {message}\n                </AlertDescription>\n              </Alert>\n            }\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\" data-id=\"d97tkztlr\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              {/* Password Field */}\n              <div className=\"space-y-2\" data-id=\"42v14imgh\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                <Label htmlFor=\"password\" className=\"text-slate-700 font-medium\" data-id=\"74qwl0skr\" data-path=\"src/pages/ResetPasswordPage.tsx\">New Password</Label>\n                <div className=\"relative\" data-id=\"b3e7hddrf\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4\" data-id=\"lfx3443mr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Enter your new password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    minLength={6}\n                    className=\"h-11 pl-10 pr-10 border-slate-200 focus:border-blue-500 focus:ring-blue-500\" data-id=\"zc6r88c9n\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\" data-id=\"ysc1hlj1y\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" data-id=\"h13dv9gjs\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> : <Eye className=\"h-4 w-4\" data-id=\"du9c3r877\" data-path=\"src/pages/ResetPasswordPage.tsx\" />}\n                  </button>\n                </div>\n                <p className=\"text-xs text-slate-500\" data-id=\"i520b802e\" data-path=\"src/pages/ResetPasswordPage.tsx\">Password must be at least 6 characters long</p>\n              </div>\n\n              {/* Confirm Password Field */}\n              <div className=\"space-y-2\" data-id=\"da1l49887\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                <Label htmlFor=\"confirmPassword\" className=\"text-slate-700 font-medium\" data-id=\"0u659tl6w\" data-path=\"src/pages/ResetPasswordPage.tsx\">Confirm New Password</Label>\n                <div className=\"relative\" data-id=\"0wrnkkphx\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4\" data-id=\"z6wtvjpi2\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                  <Input\n                    id=\"confirmPassword\"\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    placeholder=\"Confirm your new password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                    className=\"h-11 pl-10 pr-10 border-slate-200 focus:border-blue-500 focus:ring-blue-500\" data-id=\"eur1s0gtr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\" data-id=\"zp9jslwws\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                    {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" data-id=\"2f9yog8zf\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> : <Eye className=\"h-4 w-4\" data-id=\"bfx19cng0\" data-path=\"src/pages/ResetPasswordPage.tsx\" />}\n                  </button>\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full h-11 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-medium transition-all duration-200 transform hover:scale-[1.02]\"\n                disabled={isLoading || !password || !confirmPassword} data-id=\"75pjsh8tp\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                {isLoading ?\n                <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" data-id=\"wa3kktfrr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                    Resetting Password...\n                  </> :\n\n                <>\n                    <Lock className=\"mr-2 h-4 w-4\" data-id=\"3law60b5g\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                    Reset Password\n                  </>\n                }\n              </Button>\n            </form>\n\n            {/* Back to Login */}\n            <div className=\"mt-6 text-center\" data-id=\"jga3b8h6t\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              <Button\n                variant=\"link\"\n                className=\"text-blue-600 hover:text-blue-800\"\n                onClick={() => navigate('/login')} data-id=\"nx6c1tfhq\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                <ArrowLeft className=\"mr-2 h-4 w-4\" data-id=\"s1ttobi2d\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                Back to Login\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center mt-6 text-sm text-slate-500\" data-id=\"xxtqp793b\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <p data-id=\"tcm9vb6sk\" data-path=\"src/pages/ResetPasswordPage.tsx\">&copy; 2024 DFS Management Systems. All rights reserved.</p>\n        </div>\n      </div>\n    </div>);\n\n};\n\nexport default ResetPasswordPage;\n"],"names":["ResetPasswordPage","password","setPassword","useState","confirmPassword","setConfirmPassword","isLoading","setIsLoading","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","message","setMessage","messageType","setMessageType","token","setToken","navigate","useNavigate","searchParams","useSearchParams","toast","useToast","updatePassword","useSupabaseAuth","useEffect","type","handleSubmit","error","errorMessage","jsx","jsxs","Logo","Card","CardHeader","CardTitle","CardDescription","CardContent","Alert","CheckCircle2","AlertCircle","AlertDescription","Label","Lock","Input","EyeOff","Eye","Button","Fragment","Loader2","ArrowLeft"],"mappings":"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"}