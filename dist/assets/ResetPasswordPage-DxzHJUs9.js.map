{"version":3,"file":"ResetPasswordPage-DxzHJUs9.js","sources":["../../src/pages/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2, Eye, EyeOff, Lock, CheckCircle2, AlertCircle, ArrowLeft } from 'lucide-react';\nimport Logo from '@/components/Logo';\nimport { useToast } from '@/hooks/use-toast';\nimport { useSupabaseAuth } from '@/contexts/SupabaseAuthContext';\n\nconst ResetPasswordPage: React.FC = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState<'error' | 'success'>('error');\n  const [token, setToken] = useState('');\n\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { toast } = useToast();\n  const { updatePassword } = useSupabaseAuth();\n\n  useEffect(() => {\n    const type = searchParams.get('type');\n    \n    if (type === 'recovery') {\n      setToken('recovery');\n    } else {\n      // For Supabase, we don't need to show an error immediately\n      // The user might have been redirected here directly\n      setToken('recovery');\n    }\n  }, [searchParams]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setMessage('');\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      setMessageType('error');\n      return;\n    }\n\n    if (password.length < 6) {\n      setMessage('Password must be at least 6 characters long');\n      setMessageType('error');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const { error } = await updatePassword(password);\n\n      if (error) {\n        setMessage(error.message);\n        setMessageType('error');\n        toast({\n          title: \"Error\",\n          description: error.message,\n          variant: \"destructive\"\n        });\n      } else {\n        setMessage('Password reset successfully! Redirecting to login...');\n        setMessageType('success');\n        toast({\n          title: \"Success\",\n          description: \"Password reset successfully\"\n        });\n\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to reset password';\n      setMessage(errorMessage);\n      setMessageType('error');\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center p-4\" data-id=\"dpdv55alk\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n      <div className=\"w-full max-w-md\" data-id=\"3srcy9393\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n        {/* Logo and Company Name */}\n        <div className=\"text-center mb-8\" data-id=\"968fyjjtt\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <div className=\"flex flex-col items-center\" data-id=\"nw3vmu7wh\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            <div className=\"mb-4 transform hover:scale-105 transition-transform duration-200\" data-id=\"oopupxh29\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              <Logo size=\"xl\" showText={false} className=\"mb-4\" data-id=\"wjkr3op05\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n            </div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-800 to-indigo-800 bg-clip-text text-transparent mb-2\" data-id=\"ix1tvevg8\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              DFS Manager Portal\n            </h1>\n            <p className=\"text-slate-600 font-medium\" data-id=\"2laq9ll50\" data-path=\"src/pages/ResetPasswordPage.tsx\">Reset Your Password</p>\n          </div>\n        </div>\n\n        <Card className=\"shadow-2xl border-0 backdrop-blur-sm bg-white/95\" data-id=\"045tlkg86\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <CardHeader className=\"space-y-1 pb-6\" data-id=\"ddnsbfvo5\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            <CardTitle className=\"text-2xl font-bold text-center text-slate-800\" data-id=\"osyjg8yv0\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              Set New Password\n            </CardTitle>\n            <CardDescription className=\"text-center text-slate-600\" data-id=\"fdgtx5ea9\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              Enter your new password below\n            </CardDescription>\n          </CardHeader>\n          <CardContent data-id=\"r3rebjnsn\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n            {message &&\n            <Alert className={`mb-4 ${messageType === 'success' ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`} data-id=\"qajtm8vvb\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                {messageType === 'success' ?\n              <CheckCircle2 className=\"h-4 w-4 text-green-600\" data-id=\"fh2t41ydw\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> :\n\n              <AlertCircle className=\"h-4 w-4 text-red-600\" data-id=\"9apgywdll\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n              }\n                <AlertDescription className={messageType === 'success' ? 'text-green-800' : 'text-red-800'} data-id=\"10xeeuax8\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  {message}\n                </AlertDescription>\n              </Alert>\n            }\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\" data-id=\"d97tkztlr\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              {/* Password Field */}\n              <div className=\"space-y-2\" data-id=\"42v14imgh\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                <Label htmlFor=\"password\" className=\"text-slate-700 font-medium\" data-id=\"74qwl0skr\" data-path=\"src/pages/ResetPasswordPage.tsx\">New Password</Label>\n                <div className=\"relative\" data-id=\"b3e7hddrf\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4\" data-id=\"lfx3443mr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Enter your new password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    minLength={6}\n                    className=\"h-11 pl-10 pr-10 border-slate-200 focus:border-blue-500 focus:ring-blue-500\" data-id=\"zc6r88c9n\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\" data-id=\"ysc1hlj1y\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" data-id=\"h13dv9gjs\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> : <Eye className=\"h-4 w-4\" data-id=\"du9c3r877\" data-path=\"src/pages/ResetPasswordPage.tsx\" />}\n                  </button>\n                </div>\n                <p className=\"text-xs text-slate-500\" data-id=\"i520b802e\" data-path=\"src/pages/ResetPasswordPage.tsx\">Password must be at least 6 characters long</p>\n              </div>\n\n              {/* Confirm Password Field */}\n              <div className=\"space-y-2\" data-id=\"da1l49887\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                <Label htmlFor=\"confirmPassword\" className=\"text-slate-700 font-medium\" data-id=\"0u659tl6w\" data-path=\"src/pages/ResetPasswordPage.tsx\">Confirm New Password</Label>\n                <div className=\"relative\" data-id=\"0wrnkkphx\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n                  <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4\" data-id=\"z6wtvjpi2\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                  <Input\n                    id=\"confirmPassword\"\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    placeholder=\"Confirm your new password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                    className=\"h-11 pl-10 pr-10 border-slate-200 focus:border-blue-500 focus:ring-blue-500\" data-id=\"eur1s0gtr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600\" data-id=\"zp9jslwws\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                    {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" data-id=\"2f9yog8zf\" data-path=\"src/pages/ResetPasswordPage.tsx\" /> : <Eye className=\"h-4 w-4\" data-id=\"bfx19cng0\" data-path=\"src/pages/ResetPasswordPage.tsx\" />}\n                  </button>\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full h-11 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-medium transition-all duration-200 transform hover:scale-[1.02]\"\n                disabled={isLoading || !password || !confirmPassword} data-id=\"75pjsh8tp\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                {isLoading ?\n                <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" data-id=\"wa3kktfrr\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                    Resetting Password...\n                  </> :\n\n                <>\n                    <Lock className=\"mr-2 h-4 w-4\" data-id=\"3law60b5g\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                    Reset Password\n                  </>\n                }\n              </Button>\n            </form>\n\n            {/* Back to Login */}\n            <div className=\"mt-6 text-center\" data-id=\"jga3b8h6t\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n              <Button\n                variant=\"link\"\n                className=\"text-blue-600 hover:text-blue-800\"\n                onClick={() => navigate('/login')} data-id=\"nx6c1tfhq\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n\n                <ArrowLeft className=\"mr-2 h-4 w-4\" data-id=\"s1ttobi2d\" data-path=\"src/pages/ResetPasswordPage.tsx\" />\n                Back to Login\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center mt-6 text-sm text-slate-500\" data-id=\"xxtqp793b\" data-path=\"src/pages/ResetPasswordPage.tsx\">\n          <p data-id=\"tcm9vb6sk\" data-path=\"src/pages/ResetPasswordPage.tsx\">&copy; 2024 DFS Management Systems. All rights reserved.</p>\n        </div>\n      </div>\n    </div>);\n\n};\n\nexport default ResetPasswordPage;"],"names":["useState","useEffect","jsx","jsxs","Fragment"],"mappings":"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"}