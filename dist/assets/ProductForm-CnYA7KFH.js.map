{"version":3,"file":"ProductForm-CnYA7KFH.js","sources":["../../node_modules/lucide-react/dist/esm/icons/calculator.js","../../src/components/ErrorBoundary/ComponentErrorBoundary.tsx","../../src/components/ErrorBoundary/FormErrorBoundary.tsx","../../src/hooks/use-error-handler.ts","../../src/components/BarcodeScanner.tsx","../../src/pages/Products/ProductForm.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Calculator = createLucideIcon(\"Calculator\", [\n  [\"rect\", { width: \"16\", height: \"20\", x: \"4\", y: \"2\", rx: \"2\", key: \"1nb95v\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"6\", y2: \"6\", key: \"x4nwl0\" }],\n  [\"line\", { x1: \"16\", x2: \"16\", y1: \"14\", y2: \"18\", key: \"wjye3r\" }],\n  [\"path\", { d: \"M16 10h.01\", key: \"1m94wz\" }],\n  [\"path\", { d: \"M12 10h.01\", key: \"1nrarc\" }],\n  [\"path\", { d: \"M8 10h.01\", key: \"19clt8\" }],\n  [\"path\", { d: \"M12 14h.01\", key: \"1etili\" }],\n  [\"path\", { d: \"M8 14h.01\", key: \"6423bh\" }],\n  [\"path\", { d: \"M12 18h.01\", key: \"mhygvu\" }],\n  [\"path\", { d: \"M8 18h.01\", key: \"lrp35t\" }]\n]);\n\nexport { Calculator as default };\n//# sourceMappingURL=calculator.js.map\n","import React, { Component, ReactNode } from 'react';\nimport { ErrorLogger } from '@/services/errorLogger';\nimport { AlertTriangle, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\n\ninterface Props {\n  children: ReactNode;\n  componentName?: string;\n  fallback?: React.ComponentType<any>;\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n  showErrorDetails?: boolean;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n  minHeight?: string;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: React.ErrorInfo | null;\n}\n\nclass ComponentErrorBoundary extends Component<Props, State> {\n  private errorLogger: ErrorLogger;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n    this.errorLogger = ErrorLogger.getInstance();\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    const severity = this.props.severity || 'medium';\n    const componentName = this.props.componentName || 'Unknown Component';\n\n    this.errorLogger.log(\n      error,\n      severity,\n      `ComponentErrorBoundary - ${componentName}`,\n      errorInfo,\n      {\n        component: componentName,\n        url: window.location.href,\n        timestamp: new Date().toISOString()\n      }\n    );\n\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group(`ðŸš¨ Component Error Boundary - ${componentName}`);\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.groupEnd();\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n  };\n\n  render() {\n    if (this.state.hasError && this.state.error) {\n      // Custom fallback component\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return (\n          <FallbackComponent\n            error={this.state.error}\n            resetError={this.handleReset}\n            errorInfo={this.state.errorInfo}\n            componentName={this.props.componentName} data-id=\"fnb0gt7fa\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\" />);\n\n\n      }\n\n      // Default compact fallback UI for components\n      return (\n        <Card\n          className=\"bg-red-50 border-red-200 border-2\"\n          style={{ minHeight: this.props.minHeight || 'auto' }} data-id=\"u4id1borq\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n\n          <CardContent className=\"p-4\" data-id=\"9isa1zn6t\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n            <div className=\"flex items-center justify-center text-center\" data-id=\"wq5r1pf7d\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n              <div className=\"space-y-3\" data-id=\"jfsd4j1bd\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                <div className=\"flex items-center justify-center text-red-600\" data-id=\"gaz6exm82\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                  <AlertTriangle size={24} data-id=\"gkfcithgp\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\" />\n                </div>\n                \n                <div data-id=\"j3z8qmr6a\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                  <h3 className=\"font-semibold text-red-800 text-sm\" data-id=\"d6hziynwg\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                    Component Error\n                  </h3>\n                  <p className=\"text-red-600 text-xs mt-1\" data-id=\"hjdifgto7\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                    {this.props.componentName || 'This component'} encountered an error\n                  </p>\n                </div>\n\n                <Button\n                  onClick={this.handleReset}\n                  size=\"sm\"\n                  variant=\"outline\"\n                  className=\"border-red-300 text-red-700 hover:bg-red-100\" data-id=\"2u4hbiecv\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n\n                  <RefreshCw size={14} className=\"mr-1\" data-id=\"utll9ux2h\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\" />\n                  Retry\n                </Button>\n\n                {this.props.showErrorDetails &&\n                <details className=\"mt-2 text-xs text-red-600\" data-id=\"o2mnuse1n\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                    <summary className=\"cursor-pointer hover:text-red-800\" data-id=\"12fgo0dp3\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                      Error Details\n                    </summary>\n                    <div className=\"mt-1 text-left bg-red-100 p-2 rounded font-mono text-xs\" data-id=\"jhpnqra4w\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                      <div data-id=\"xn1spat0z\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\"><strong data-id=\"3sst9i0hb\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">Error:</strong> {this.state.error.message}</div>\n                      {this.state.error.stack &&\n                    <div className=\"mt-1\" data-id=\"moidzeyq0\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                          <strong data-id=\"wb5v3pbq3\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">Stack:</strong>\n                          <pre className=\"whitespace-pre-wrap text-xs\" data-id=\"njt5g1n1r\" data-path=\"src/components/ErrorBoundary/ComponentErrorBoundary.tsx\">\n                            {this.state.error.stack.split('\\n').slice(0, 3).join('\\n')}\n                          </pre>\n                        </div>\n                    }\n                    </div>\n                  </details>\n                }\n              </div>\n            </div>\n          </CardContent>\n        </Card>);\n\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ComponentErrorBoundary;\n","import React, { Component, ReactNode } from 'react';\nimport { ErrorLogger } from '@/services/errorLogger';\nimport { AlertTriangle, RefreshCw, Save } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\n\ninterface Props {\n  children: ReactNode;\n  formName?: string;\n  onFormReset?: () => void;\n  onDataSave?: () => void;\n  fallback?: React.ComponentType<any>;\n  showDataRecovery?: boolean;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: React.ErrorInfo | null;\n}\n\nclass FormErrorBoundary extends Component<Props, State> {\n  private errorLogger: ErrorLogger;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n    this.errorLogger = ErrorLogger.getInstance();\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    const formName = this.props.formName || 'Unknown Form';\n\n    this.errorLogger.log(\n      error,\n      'high', // Forms are critical for data entry\n      `FormErrorBoundary - ${formName}`,\n      errorInfo,\n      {\n        form: formName,\n        url: window.location.href,\n        timestamp: new Date().toISOString(),\n        formData: this.attemptFormDataRecovery()\n      }\n    );\n\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group(`ðŸš¨ Form Error Boundary - ${formName}`);\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.groupEnd();\n    }\n  }\n\n  private attemptFormDataRecovery = (): Record<string, any> => {\n    try {\n      // Try to extract form data from the DOM\n      const formElements = document.querySelectorAll('input, select, textarea');\n      const formData: Record<string, any> = {};\n\n      formElements.forEach((element: any) => {\n        if (element.name || element.id) {\n          const key = element.name || element.id;\n          if (element.type === 'checkbox' || element.type === 'radio') {\n            formData[key] = element.checked;\n          } else {\n            formData[key] = element.value;\n          }\n        }\n      });\n\n      return formData;\n    } catch (e) {\n      console.warn('Failed to recover form data:', e);\n      return {};\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n  };\n\n  handleFormReset = () => {\n    if (this.props.onFormReset) {\n      this.props.onFormReset();\n    }\n    this.handleReset();\n  };\n\n  handleDataSave = () => {\n    if (this.props.onDataSave) {\n      this.props.onDataSave();\n    }\n  };\n\n  render() {\n    if (this.state.hasError && this.state.error) {\n      // Custom fallback component\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return (\n          <FallbackComponent\n            error={this.state.error}\n            resetError={this.handleReset}\n            errorInfo={this.state.errorInfo}\n            formName={this.props.formName}\n            onFormReset={this.handleFormReset}\n            onDataSave={this.handleDataSave} data-id=\"azrzj1hk7\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />);\n\n\n      }\n\n      // Default form error fallback UI\n      return (\n        <Card className=\"bg-red-50 border-red-200 border-2\" data-id=\"o9oy5mqpb\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n          <CardHeader className=\"pb-3\" data-id=\"e7j4mj6bu\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n            <CardTitle className=\"flex items-center gap-2 text-red-800 text-lg\" data-id=\"qnunxliw0\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <AlertTriangle size={20} data-id=\"krsr4xyy3\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />\n              Form Error Detected\n            </CardTitle>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-4\" data-id=\"p0jb9ivwp\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n            <Alert className=\"border-red-300 bg-red-100\" data-id=\"x107yl2ul\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <AlertTriangle className=\"h-4 w-4\" data-id=\"qy5uoxuev\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />\n              <AlertDescription className=\"text-red-800\" data-id=\"i2sluoe32\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                An error occurred while processing the{' '}\n                {this.props.formName ? `${this.props.formName} form` : 'form'}.\n                {this.props.showDataRecovery &&\n                <span className=\"block mt-1 text-sm\" data-id=\"nasi086i0\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                    Your form data may have been preserved and can be recovered.\n                  </span>\n                }\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-2\" data-id=\"vhehq0iiw\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <p className=\"text-sm text-red-700\" data-id=\"lsco323xy\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                <strong data-id=\"78v9et2bi\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">Error:</strong> {this.state.error.message}\n              </p>\n            </div>\n\n            <div className=\"flex flex-wrap gap-2\" data-id=\"rgxwg3h8n\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <Button\n                onClick={this.handleReset}\n                variant=\"default\"\n                size=\"sm\"\n                className=\"flex items-center gap-2\" data-id=\"tqvzrxrnt\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n\n                <RefreshCw size={16} data-id=\"ilqq3ie0x\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />\n                Retry Form\n              </Button>\n\n              {this.props.onFormReset &&\n              <Button\n                onClick={this.handleFormReset}\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"flex items-center gap-2 border-red-300 text-red-700 hover:bg-red-100\" data-id=\"hfvv8cghy\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n\n                  <RefreshCw size={16} data-id=\"ct81b6oa2\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />\n                  Reset Form\n                </Button>\n              }\n\n              {this.props.showDataRecovery && this.props.onDataSave &&\n              <Button\n                onClick={this.handleDataSave}\n                variant=\"secondary\"\n                size=\"sm\"\n                className=\"flex items-center gap-2\" data-id=\"ah2mnwc7h\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n\n                  <Save size={16} data-id=\"ue6vkf90d\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\" />\n                  Save Draft\n                </Button>\n              }\n            </div>\n\n            {/* Recovery Tips */}\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3 mt-4\" data-id=\"ieg2buvrl\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <h4 className=\"font-semibold text-yellow-800 text-sm mb-2\" data-id=\"w0xe7mhsq\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                Recovery Tips:\n              </h4>\n              <ul className=\"text-xs text-yellow-700 space-y-1\" data-id=\"gwnuiolpx\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                <li data-id=\"t98pt9lk8\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">â€¢ Try refreshing the page and filling out the form again</li>\n                <li data-id=\"o592m2kox\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">â€¢ Check that all required fields are properly filled</li>\n                <li data-id=\"bdp73qm7c\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">â€¢ Ensure your internet connection is stable</li>\n                {this.props.showDataRecovery &&\n                <li data-id=\"dfoej8nvp\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">â€¢ Use \"Save Draft\" to preserve your current data</li>\n                }\n              </ul>\n            </div>\n\n            {/* Technical Details */}\n            <details className=\"mt-3\" data-id=\"r05gzfi8t\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n              <summary className=\"cursor-pointer text-xs text-red-600 hover:text-red-800\" data-id=\"27qigrobz\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                Technical Details\n              </summary>\n              <div className=\"mt-2 bg-red-100 p-2 rounded text-xs font-mono text-red-800\" data-id=\"j8weabzf5\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">\n                <div data-id=\"yqi6sbfp3\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\"><strong data-id=\"d4xmj0lyg\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">Component:</strong> {this.props.formName || 'Form'}</div>\n                <div data-id=\"nekl0qjsr\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\"><strong data-id=\"k8r3j2sdf\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">Error Type:</strong> {this.state.error.name}</div>\n                <div data-id=\"1y41ihf9w\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\"><strong data-id=\"zybkn7amd\" data-path=\"src/components/ErrorBoundary/FormErrorBoundary.tsx\">Time:</strong> {new Date().toLocaleString()}</div>\n              </div>\n            </details>\n          </CardContent>\n        </Card>);\n\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default FormErrorBoundary;\n","import React, { useCallback } from 'react';\nimport { useToast } from './use-toast';\nimport { ErrorLogger } from '@/services/errorLogger';\n\ninterface UseErrorHandlerOptions {\n  component?: string;\n  showToast?: boolean;\n  logError?: boolean;\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n}\n\nexport const useErrorHandler = (options: UseErrorHandlerOptions = {}) => {\n  const { toast } = useToast();\n  const errorLogger = ErrorLogger.getInstance();\n\n  const {\n    component = 'Unknown Component',\n    showToast = true,\n    logError = true,\n    severity = 'medium'\n  } = options;\n\n  const handleError = useCallback((\n  error: Error | string,\n  customMessage?: string,\n  context?: Record<string, any>) => {\n    const errorObj = typeof error === 'string' ? new Error(error) : error;\n\n    // Log the error\n    if (logError) {\n      errorLogger.log(\n        errorObj,\n        severity,\n        component,\n        undefined,\n        context\n      );\n    }\n\n    // Show toast notification\n    if (showToast) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: customMessage || errorObj.message || 'An unexpected error occurred'\n      });\n    }\n\n    // Console log for development\n    if (process.env.NODE_ENV === 'development') {\n      console.error(`[${component}] Error:`, errorObj);\n      if (context) {\n        console.error('Context:', context);\n      }\n    }\n  }, [component, showToast, logError, severity, toast, errorLogger]);\n\n  // Async wrapper that automatically handles errors\n  const handleAsync = useCallback(async <T,>(\n  asyncFn: () => Promise<T>,\n  errorMessage?: string,\n  context?: Record<string, any>)\n  : Promise<T | null> => {\n    try {\n      return await asyncFn();\n    } catch (error) {\n      handleError(\n        error instanceof Error ? error : new Error(String(error)),\n        errorMessage,\n        context\n      );\n      return null;\n    }\n  }, [handleError]);\n\n  // API call wrapper with built-in error handling\n  const handleApiCall = useCallback(async <T,>(\n  apiCall: () => Promise<{data?: T;error?: string;}>,\n  errorMessage?: string,\n  context?: Record<string, any>)\n  : Promise<T | null> => {\n    try {\n      const result = await apiCall();\n\n      if (result.error) {\n        throw new Error(result.error);\n      }\n\n      return result.data || null;\n    } catch (error) {\n      handleError(\n        error instanceof Error ? error : new Error(String(error)),\n        errorMessage,\n        context\n      );\n      return null;\n    }\n  }, [handleError]);\n\n  return {\n    handleError,\n    handleAsync,\n    handleApiCall\n  };\n};\n\n// HOC for wrapping components with error handling\nexport const withErrorHandler = <P extends object,>(\nComponent: React.ComponentType<P>,\nerrorHandlerOptions?: UseErrorHandlerOptions) => {\n  return React.forwardRef<any, P & {errorHandler?: ReturnType<typeof useErrorHandler>;}>((props, ref) => {\n    const errorHandler = useErrorHandler(errorHandlerOptions);\n\n    return React.createElement(Component, {\n      ...props,\n      ref,\n      errorHandler\n    });\n  });\n};\n\nexport default useErrorHandler;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Camera, X } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { ComponentErrorBoundary } from './ErrorBoundary';\n\ninterface BarcodeScannerProps {\n  onScan: (barcode: string) => void;\n  triggerText?: string;\n  disabled?: boolean;\n}\n\nconst BarcodeScanner: React.FC<BarcodeScannerProps> = ({ onScan, triggerText = \"Scan Barcode\", disabled = false }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [stream, setStream] = useState<MediaStream | null>(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const { toast } = useToast();\n\n  const startCamera = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { facingMode: 'environment' }\n      });\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n        setStream(mediaStream);\n        setIsScanning(true);\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Camera Error\",\n        description: \"Unable to access camera. Please check permissions.\"\n      });\n    }\n  };\n\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n      setStream(null);\n      setIsScanning(false);\n    }\n  };\n\n  const captureFrame = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      if (context) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        context.drawImage(video, 0, 0);\n\n        // Simple barcode detection simulation\n        // In a real implementation, you would use a library like ZXing or QuaggaJS\n        const simulatedBarcode = Math.random().toString(36).substr(2, 12).toUpperCase();\n        onScan(simulatedBarcode);\n        setIsOpen(false);\n        stopCamera();\n\n        toast({\n          title: \"Barcode Scanned\",\n          description: `Detected barcode: ${simulatedBarcode}`\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      startCamera();\n    } else {\n      stopCamera();\n    }\n\n    return () => {\n      stopCamera();\n    };\n  }, [isOpen]);\n\n  return (\n    <ComponentErrorBoundary\n      componentName=\"BarcodeScanner\"\n      severity=\"medium\"\n      minHeight=\"200px\" data-id=\"3pibg6ms7\" data-path=\"src/components/BarcodeScanner.tsx\">\n\n      <Dialog open={isOpen} onOpenChange={setIsOpen} data-id=\"39q67l96m\" data-path=\"src/components/BarcodeScanner.tsx\">\n      <DialogTrigger asChild data-id=\"avk5syt1n\" data-path=\"src/components/BarcodeScanner.tsx\">\n        <Button type=\"button\" variant=\"outline\" size=\"sm\" disabled={disabled} data-id=\"y6ol20tpr\" data-path=\"src/components/BarcodeScanner.tsx\">\n          <Camera className=\"w-4 h-4 mr-2\" data-id=\"st0einn3s\" data-path=\"src/components/BarcodeScanner.tsx\" />\n          {triggerText}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-md\" data-id=\"3crr5yoy5\" data-path=\"src/components/BarcodeScanner.tsx\">\n        <DialogHeader data-id=\"pcs34g8fb\" data-path=\"src/components/BarcodeScanner.tsx\">\n          <DialogTitle data-id=\"vr2r4ah79\" data-path=\"src/components/BarcodeScanner.tsx\">Scan Barcode</DialogTitle>\n        </DialogHeader>\n        <div className=\"flex flex-col items-center space-y-4\" data-id=\"m2yxl59b5\" data-path=\"src/components/BarcodeScanner.tsx\">\n          <div className=\"relative w-full max-w-sm aspect-video bg-black rounded-lg overflow-hidden\" data-id=\"jv41adqnn\" data-path=\"src/components/BarcodeScanner.tsx\">\n            <video\n                ref={videoRef}\n                autoPlay\n                playsInline\n                className=\"w-full h-full object-cover\" data-id=\"umo9yuczd\" data-path=\"src/components/BarcodeScanner.tsx\" />\n\n            <canvas\n                ref={canvasRef}\n                className=\"hidden\" data-id=\"1zqrqnpg4\" data-path=\"src/components/BarcodeScanner.tsx\" />\n\n            {!isScanning &&\n              <div className=\"absolute inset-0 flex items-center justify-center text-white\" data-id=\"4n61y3quc\" data-path=\"src/components/BarcodeScanner.tsx\">\n                <div className=\"text-center\" data-id=\"0yw8fuk6s\" data-path=\"src/components/BarcodeScanner.tsx\">\n                  <Camera className=\"w-12 h-12 mx-auto mb-2\" data-id=\"blxgzp25x\" data-path=\"src/components/BarcodeScanner.tsx\" />\n                  <p data-id=\"ebyr1flvg\" data-path=\"src/components/BarcodeScanner.tsx\">Initializing camera...</p>\n                </div>\n              </div>\n              }\n          </div>\n          <div className=\"flex space-x-2\" data-id=\"ga2zy4vyi\" data-path=\"src/components/BarcodeScanner.tsx\">\n            <Button onClick={captureFrame} disabled={!isScanning} data-id=\"gdiold53r\" data-path=\"src/components/BarcodeScanner.tsx\">\n              Capture\n            </Button>\n            <Button variant=\"outline\" onClick={() => setIsOpen(false)} data-id=\"6hay25d0q\" data-path=\"src/components/BarcodeScanner.tsx\">\n              <X className=\"w-4 h-4 mr-2\" data-id=\"62fns4deb\" data-path=\"src/components/BarcodeScanner.tsx\" />\n              Cancel\n            </Button>\n          </div>\n          <p className=\"text-sm text-muted-foreground text-center\" data-id=\"ypqys8ed6\" data-path=\"src/components/BarcodeScanner.tsx\">\n            Position the barcode within the camera view and click Capture\n          </p>\n        </div>\n      </DialogContent>\n      </Dialog>\n    </ComponentErrorBoundary>);\n\n\n};\n\nexport default BarcodeScanner;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { NumberInput } from '@/components/ui/number-input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { useToast } from '@/hooks/use-toast';\nimport { useErrorHandler } from '@/hooks/use-error-handler';\nimport { ArrowLeft, Save, Calculator, Upload, Eye, Plus, Download, FileText, AlertTriangle, DollarSign } from 'lucide-react';\nimport BarcodeScanner from '@/components/BarcodeScanner';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { FormErrorBoundary } from '@/components/ErrorBoundary';\nimport { supabase } from '@/lib/supabase';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\n\ninterface Vendor {\n  id: number;\n  vendor_name: string;\n  is_active: boolean;\n}\n\ninterface ProductCategory {\n  id: number;\n  category_name: string;\n  department: string;\n  is_active: boolean;\n}\n\nconst ProductForm = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { toast } = useToast();\n  const { userProfile } = useAuth();\n  const { handleApiCall, handleError } = useErrorHandler({\n    component: 'ProductForm',\n    severity: 'high'\n  });\n\n  const isEdit = !!id;\n  const [isLoading, setIsLoading] = useState(false);\n  const [vendors, setVendors] = useState<Vendor[]>([]);\n  const [categories, setCategories] = useState<ProductCategory[]>([]);\n  const [bulkUploadData, setBulkUploadData] = useState<any[]>([]);\n  const [showBulkPreview, setShowBulkPreview] = useState(false);\n  const [isUploadingBulk, setIsUploadingBulk] = useState(false);\n\n  const [formData, setFormData] = useState({\n    product_name: '',\n    weight: 0,\n    weight_unit: 'lb',\n    department: 'Convenience Store',\n    merchant_id: '',\n    last_updated_date: new Date().toISOString().split('T')[0],\n    last_shopping_date: '',\n    case_price: 0,\n    unit_per_case: 1,\n    unit_price: 0,\n    retail_price: 0,\n    profit_margin: 0,\n    category: '',\n    supplier: '',\n    quantity_in_stock: 0,\n    minimum_stock: 0,\n    description: '',\n    bar_code_case: '',\n    bar_code_unit: '',\n    serial_number: 0,\n    overdue: false\n  });\n\n  const [originalData, setOriginalData] = useState<any>(null);\n\n  // USA Weight Units\n  const weightUnits = [\n  { value: 'lb', label: 'Pounds (lb)' },\n  { value: 'oz', label: 'Ounces (oz)' },\n  { value: 'ton', label: 'Tons' },\n  { value: 'fl_oz', label: 'Fluid Ounces (fl oz)' },\n  { value: 'gal', label: 'Gallons (gal)' },\n  { value: 'qt', label: 'Quarts (qt)' },\n  { value: 'pt', label: 'Pints (pt)' },\n  { value: 'cup', label: 'Cups' },\n  { value: 'tbsp', label: 'Tablespoons (tbsp)' },\n  { value: 'tsp', label: 'Teaspoons (tsp)' }];\n\n\n  // Departments based on gas station categories\n  const departments = [\n  'Convenience Store',\n  'Fuel & Oil',\n  'Automotive',\n  'Food & Beverages',\n  'Tobacco Products',\n  'Lottery & Gaming',\n  'Health & Personal Care',\n  'Electronics & Accessories',\n  'Cleaning Supplies',\n  'Office Supplies',\n  'Snacks & Candy',\n  'Hot Foods & Coffee',\n  'Cold Beverages',\n  'Energy Drinks',\n  'Beer & Wine',\n  'Ice & Frozen',\n  'Phone Cards & Prepaid',\n  'Car Accessories',\n  'Gift Cards',\n  'Pharmacy & Medicine'];\n\n\n  useEffect(() => {\n    fetchVendors();\n    fetchCategories();\n    if (isEdit) {\n      fetchProduct();\n    } else {\n      generateSerialNumber();\n    }\n  }, [id]);\n\n  // Auto-calculate unit price when case price or unit per case changes\n  useEffect(() => {\n    if (formData.case_price > 0 && formData.unit_per_case > 0) {\n      const calculatedUnitPrice = formData.case_price / formData.unit_per_case;\n      setFormData((prev) => ({\n        ...prev,\n        unit_price: Math.round(calculatedUnitPrice * 100) / 100\n      }));\n    }\n  }, [formData.case_price, formData.unit_per_case]);\n\n  // Auto-calculate retail price when unit price changes\n  useEffect(() => {\n    if (formData.unit_price > 0) {\n      const suggestedPrice = calculateSuggestedRetailPrice(formData.unit_price);\n      // Only auto-update if retail price is 0 or very close to the previous suggestion\n      if (formData.retail_price === 0) {\n        setFormData((prev) => ({\n          ...prev,\n          retail_price: suggestedPrice\n        }));\n      }\n    } else if (formData.unit_price === 0) {\n      setFormData((prev) => ({\n        ...prev,\n        retail_price: 0\n      }));\n    }\n  }, [formData.unit_price]);\n\n  // Auto-calculate profit margin\n  useEffect(() => {\n    if (formData.unit_price > 0 && formData.retail_price > 0) {\n      const margin = (formData.retail_price - formData.unit_price) / formData.retail_price * 100;\n      setFormData((prev) => ({\n        ...prev,\n        profit_margin: Math.round(margin * 100) / 100\n      }));\n    } else {\n      setFormData((prev) => ({ ...prev, profit_margin: 0 }));\n    }\n  }, [formData.unit_price, formData.retail_price]);\n\n  const fetchVendors = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('vendors')\n        .select('*')\n        .eq('is_active', true)\n        .order('vendor_name', { ascending: true })\n        .limit(100);\n\n      if (error) throw error;\n      setVendors(data || []);\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('product_categories')\n        .select('*')\n        .eq('is_active', true)\n        .order('category_name', { ascending: true })\n        .limit(100);\n\n      if (error) throw error;\n      setCategories(data || []);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const generateSerialNumber = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .select('serial_number')\n        .order('serial_number', { ascending: false })\n        .limit(1);\n\n      if (error) throw error;\n      const lastSerial = data?.[0]?.serial_number || 0;\n      setFormData((prev) => ({ ...prev, serial_number: lastSerial + 1 }));\n    } catch (error) {\n      console.error('Error generating serial number:', error);\n      setFormData((prev) => ({ ...prev, serial_number: 1 }));\n    }\n  };\n\n  const fetchProduct = async () => {\n    if (!id) return;\n\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .select('*')\n        .eq('id', id)\n        .limit(1)\n        .single();\n\n      if (error) throw error;\n\n      if (data) {\n        const product = data;\n        const productData = {\n          product_name: product.product_name || '',\n          weight: product.weight || 0,\n          weight_unit: product.weight_unit || 'lb',\n          department: product.department || 'Convenience Store',\n          merchant_id: product.merchant_id?.toString() || '',\n          last_updated_date: product.last_updated_date ? product.last_updated_date.split('T')[0] : '',\n          last_shopping_date: product.last_shopping_date ? product.last_shopping_date.split('T')[0] : '',\n          case_price: product.case_price || 0,\n          unit_per_case: product.unit_per_case || 1,\n          unit_price: product.unit_price || 0,\n          retail_price: product.retail_price || 0,\n          profit_margin: 0, // Will be calculated by useEffect\n          category: product.category || '',\n          supplier: product.supplier || '',\n          quantity_in_stock: product.quantity_in_stock || 0,\n          minimum_stock: product.minimum_stock || 0,\n          description: product.description || '',\n          bar_code_case: product.bar_code_case || '',\n          bar_code_unit: product.bar_code_unit || '',\n          serial_number: product.serial_number || 0,\n          overdue: product.overdue || false\n        };\n        setFormData(productData);\n        setOriginalData(productData);\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to load product data.\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Calculate suggested retail price based on unit price with specific rules\n  const calculateSuggestedRetailPrice = (unitPrice: number) => {\n    if (unitPrice === 0) return 0;\n\n    let markupPercentage = 0;\n    if (unitPrice < 4) {\n      markupPercentage = 65;\n    } else if (unitPrice >= 4 && unitPrice < 6) {\n      markupPercentage = 55;\n    } else if (unitPrice >= 6 && unitPrice < 8) {\n      markupPercentage = 45;\n    } else if (unitPrice >= 8 && unitPrice < 10) {\n      markupPercentage = 35;\n    } else {\n      markupPercentage = 25;\n    }\n\n    const suggestedPrice = unitPrice * (1 + markupPercentage / 100);\n\n    // Round to closest .25, .49, .75, or .99\n    const roundingTargets = [0.25, 0.49, 0.75, 0.99];\n    const wholeNumber = Math.floor(suggestedPrice);\n    const decimal = suggestedPrice - wholeNumber;\n\n    let closestRounding = 0.99;\n    let minDifference = Math.abs(decimal - 0.99);\n\n    roundingTargets.forEach((target) => {\n      const difference = Math.abs(decimal - target);\n      if (difference < minDifference) {\n        minDifference = difference;\n        closestRounding = target;\n      }\n    });\n\n    return wholeNumber + closestRounding;\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleBarcodeScanned = (field: string, barcode: string) => {\n    setFormData((prev) => ({ ...prev, [field]: barcode }));\n    toast({\n      title: \"Barcode Scanned\",\n      description: `Barcode ${barcode} added to ${field.replace('_', ' ')}`\n    });\n  };\n\n  // Bulk upload functionality\n  const handleBulkFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const text = e.target?.result as string;\n        const lines = text.split('\\n').filter((line) => line.trim());\n        const headers = lines[0].split(',').map((h) => h.trim().toLowerCase());\n\n        const data = lines.slice(1).map((line, index) => {\n          const values = line.split(',');\n          const product: any = {};\n\n          headers.forEach((header, i) => {\n            let value = values[i]?.trim() || '';\n\n            // Map CSV headers to database fields\n            const fieldMapping: {[key: string]: string;} = {\n              'product name': 'product_name',\n              'product_name': 'product_name',\n              'weight': 'weight',\n              'weight unit': 'weight_unit',\n              'weight_unit': 'weight_unit',\n              'department': 'department',\n              'merchant': 'merchant_id',\n              'merchant_id': 'merchant_id',\n              'last shopping date': 'last_shopping_date',\n              'last_shopping_date': 'last_shopping_date',\n              'case price': 'case_price',\n              'case_price': 'case_price',\n              'unit per case': 'unit_per_case',\n              'unit_per_case': 'unit_per_case',\n              'unit price': 'unit_price',\n              'unit_price': 'unit_price',\n              'retail price': 'retail_price',\n              'retail_price': 'retail_price',\n              'category': 'category',\n              'supplier': 'supplier',\n              'description': 'description'\n            };\n\n            const dbField = fieldMapping[header] || header;\n\n            // Convert numeric fields\n            if (['weight', 'case_price', 'unit_per_case', 'unit_price', 'retail_price', 'merchant_id'].includes(dbField)) {\n              value = value ? parseFloat(value) || 0 : 0;\n            }\n\n            product[dbField] = value;\n          });\n\n          // Auto-calculate unit price if case price and unit per case are provided\n          if (product.case_price > 0 && product.unit_per_case > 0 && !product.unit_price) {\n            product.unit_price = Math.round(product.case_price / product.unit_per_case * 100) / 100;\n          }\n\n          // Calculate suggested retail price if unit price is available\n          if (product.unit_price > 0 && !product.retail_price) {\n            product.retail_price = calculateSuggestedRetailPrice(product.unit_price);\n          }\n\n          return product;\n        });\n\n        setBulkUploadData(data);\n        setShowBulkPreview(true);\n\n      } catch (error) {\n        toast({\n          variant: \"destructive\",\n          title: \"Error\",\n          description: \"Failed to parse CSV file. Please check the format.\"\n        });\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  const handleBulkSubmit = async () => {\n    if (!userProfile) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"User profile not found.\"\n      });\n      return;\n    }\n\n    setIsUploadingBulk(true);\n    try {\n      let successCount = 0;\n      let errorCount = 0;\n      const errors: string[] = [];\n\n      // Get the latest serial number\n      const serialResponse = await supabase\n        .from('products')\n        .select('serial_number')      .order('serial_number', { ascending: false })\n      .limit(1);\n\n    const lastSerial = serialResponse.data?.[0]?.serial_number || 0;\n\n    for (const productData of bulkUploadData) {\n      try {\n        if (!productData.product_name?.trim()) {\n          errors.push(`Row ${successCount + errorCount + 1}: Product name is required`);\n          errorCount++;\n          continue;\n          }\n\n          const productPayload: any = {\n            serial_number: lastSerial + successCount + 1,\n            product_name: productData.product_name.trim(),\n            last_updated_date: new Date().toISOString(),\n            overdue: false,\n            weight: productData.weight || 0,\n            weight_unit: productData.weight_unit || 'lb',\n            department: productData.department || 'Convenience Store',\n            case_price: productData.case_price || 0,\n            unit_per_case: productData.unit_per_case || 1,\n            unit_price: productData.unit_price || 0,\n            retail_price: productData.retail_price || 0,\n            category: productData.category || '',\n            supplier: productData.supplier || '',\n            description: productData.description || '',\n            quantity_in_stock: 0,\n            minimum_stock: 0,\n            bar_code_case: '',\n            bar_code_unit: '',\n            created_by: userProfile.user_id\n          };\n\n          if (productData.merchant_id) {\n            productPayload.merchant_id = parseInt(productData.merchant_id);\n          }\n\n          if (productData.last_shopping_date) {\n            productPayload.last_shopping_date = new Date(productData.last_shopping_date).toISOString();\n          }\n\n          const { error } = await supabase\n            .from('products')\n            .insert(productPayload);\n\n          if (error) {\n            errors.push(`${productData.product_name}: ${error}`);\n            errorCount++;\n          } else {\n            successCount++;\n          }\n        } catch (error) {\n          const errorMsg = error instanceof Error ? error.message : 'Unknown error';\n          errors.push(`${productData.product_name || 'Unknown'}: ${errorMsg}`);\n          errorCount++;\n        }\n      }\n\n      if (successCount > 0) {\n        toast({\n          title: \"Import Complete\",\n          description: `Successfully imported ${successCount} products. ${errorCount > 0 ? `${errorCount} errors occurred.` : ''}`\n        });\n      } else {\n        toast({\n          variant: \"destructive\",\n          title: \"Import Failed\",\n          description: `No products were imported. ${errorCount} errors occurred.`\n        });\n      }\n\n      if (errors.length > 0) {\n        console.error('Import errors:', errors);\n      }\n\n      if (successCount > 0) {\n        setShowBulkPreview(false);\n        setBulkUploadData([]);\n        navigate('/products');\n      }\n    } catch (error) {\n      console.error('Bulk import error:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Import Failed\",\n        description: error instanceof Error ? error.message : \"Failed to import product data.\"\n      });\n    } finally {\n      setIsUploadingBulk(false);\n    }\n  };\n\n  const logFieldChange = async (productId: number, fieldName: string, oldValue: any, newValue: any, userId: number) => {\n    try {\n      const { error } = await supabase\n        .from('product_field_changes')\n        .insert({\n          product_id: productId,\n          field_name: fieldName,\n          old_value: oldValue?.toString() || '',\n          new_value: newValue?.toString() || '',\n          change_date: new Date().toISOString(),\n          changed_by: userId\n        });\n      if (error) {\n        console.error('Error logging field change:', error);\n      }\n    } catch (error) {\n      console.error('Error logging field change:', error);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!formData.product_name.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Validation Error\",\n        description: \"Product name is required.\"\n      });\n      return;\n    }\n\n    if (!userProfile) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"User profile not found.\"\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const payload = {\n        ...formData,\n        last_updated_date: new Date().toISOString(),\n        last_shopping_date: formData.last_shopping_date ? new Date(formData.last_shopping_date).toISOString() : null,\n        merchant_id: formData.merchant_id ? parseInt(formData.merchant_id) : null,\n        created_by: userProfile.user_id\n      };\n\n      const { error } = isEdit ?\n        await supabase.from('products').update(payload).eq('id', parseInt(id!)) :\n        await supabase.from('products').insert(payload);\n\n      if (error) throw error;\n\n      // Log changes for existing products\n      if (isEdit && originalData && userProfile) {\n        const fieldsToTrack = [\n        'last_shopping_date',\n        'case_price',\n        'unit_per_case',\n        'unit_price',\n        'retail_price'];\n\n\n        for (const field of fieldsToTrack) {\n          const oldValue = originalData[field];\n          const newValue = formData[field];\n\n          if (oldValue !== newValue) {\n            await logFieldChange(parseInt(id!), field, oldValue, newValue, userProfile.user_id);\n          }\n        }\n\n        // Calculate and log profit margin changes\n        const oldProfitMargin = originalData.unit_price > 0 && originalData.retail_price > 0 ?\n        (originalData.retail_price - originalData.unit_price) / originalData.retail_price * 100 : 0;\n        const newProfitMargin = formData.profit_margin;\n\n        if (Math.abs(oldProfitMargin - newProfitMargin) > 0.01) {\n          await logFieldChange(parseInt(id!), 'profit_margin', oldProfitMargin.toFixed(2), newProfitMargin.toFixed(2), userProfile.user_id);\n        }\n      }\n\n      toast({\n        title: \"Success\",\n        description: `Product ${isEdit ? 'updated' : 'created'} successfully.`\n      });\n\n      navigate('/products');\n    } catch (error) {\n      console.error('Error saving product:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: `Failed to ${isEdit ? 'update' : 'create'} product.`\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const suggestedRetailPrice = calculateSuggestedRetailPrice(formData.unit_price);\n\n  // Download CSV template\n  const downloadTemplate = () => {\n    const csvContent = [\n    'Product Name,Weight,Weight Unit,Department,Merchant,Case Price,Unit Per Case,Unit Price,Retail Price,Category,Supplier,Description',\n    'Example Product,12,oz,Food & Beverages,,24.00,24,1.00,1.99,Soft Drinks,Example Supplier,Example description'].\n    join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'product_import_template.csv';\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\" data-id=\"bx12wklbd\" data-path=\"src/pages/Products/ProductForm.tsx\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\" data-id=\"q5k5t85tc\" data-path=\"src/pages/Products/ProductForm.tsx\">\n        <div className=\"flex items-center space-x-4\" data-id=\"wlu98sixy\" data-path=\"src/pages/Products/ProductForm.tsx\">\n          <Button variant=\"outline\" size=\"sm\" onClick={() => navigate('/products')} data-id=\"bdw35t5fy\" data-path=\"src/pages/Products/ProductForm.tsx\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" data-id=\"rtvwkpjqu\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n            Back to Products\n          </Button>\n          <div data-id=\"q5m983vey\" data-path=\"src/pages/Products/ProductForm.tsx\">\n            <h1 className=\"text-2xl font-bold\" data-id=\"41gy26pq3\" data-path=\"src/pages/Products/ProductForm.tsx\">{isEdit ? 'Edit Product' : 'Add New Product'}</h1>\n            <p className=\"text-muted-foreground\" data-id=\"h07pjygjz\" data-path=\"src/pages/Products/ProductForm.tsx\">\n              {isEdit ? 'Update product information' : 'Add a new product to your inventory'}\n            </p>\n          </div>\n        </div>\n        \n        {/* Bulk Upload Dialog */}\n        <Dialog open={showBulkPreview} onOpenChange={setShowBulkPreview} data-id=\"hi7kexvnf\" data-path=\"src/pages/Products/ProductForm.tsx\">\n          <DialogTrigger asChild data-id=\"93g6amn9o\" data-path=\"src/pages/Products/ProductForm.tsx\">\n            <Button variant=\"outline\" data-id=\"uy4lxewlc\" data-path=\"src/pages/Products/ProductForm.tsx\">\n              <Upload className=\"w-4 h-4 mr-2\" data-id=\"h92678uku\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n              Bulk Upload\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-6xl max-h-[80vh] overflow-auto\" data-id=\"0nz2kj64x\" data-path=\"src/pages/Products/ProductForm.tsx\">\n            <DialogHeader data-id=\"rmb9repv9\" data-path=\"src/pages/Products/ProductForm.tsx\">\n              <DialogTitle data-id=\"s0xq7459l\" data-path=\"src/pages/Products/ProductForm.tsx\">Bulk Product Upload</DialogTitle>\n              <DialogDescription data-id=\"hlbqg641c\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                Upload a CSV file with product data. Click \"Download Template\" for the correct format.\n              </DialogDescription>\n            </DialogHeader>\n            \n            {bulkUploadData.length === 0 ?\n            <div className=\"space-y-4\" data-id=\"otrmnjarm\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <div className=\"flex justify-between items-center\" data-id=\"jnbayeohh\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <h3 className=\"text-lg font-medium\" data-id=\"iflfxutqr\" data-path=\"src/pages/Products/ProductForm.tsx\">Upload CSV File</h3>\n                  <Button variant=\"outline\" onClick={downloadTemplate} data-id=\"7citiads7\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Download className=\"w-4 h-4 mr-2\" data-id=\"6gsm7c3h7\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                    Download Template\n                  </Button>\n                </div>\n                \n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\" data-id=\"l6duwtega\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Upload className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" data-id=\"bvz7kpd58\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                  <div className=\"space-y-2\" data-id=\"xqwub2p94\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <h3 className=\"text-lg font-medium\" data-id=\"kjou9apny\" data-path=\"src/pages/Products/ProductForm.tsx\">Upload CSV File</h3>\n                    <p className=\"text-sm text-gray-500\" data-id=\"3xwvpr12u\" data-path=\"src/pages/Products/ProductForm.tsx\">Select a CSV file containing product data</p>\n                    <Input\n                    type=\"file\"\n                    accept=\".csv\"\n                    onChange={handleBulkFileUpload}\n                    className=\"max-w-xs mx-auto\" data-id=\"r8qynfi9q\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                  </div>\n                </div>\n                \n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\" data-id=\"3dwp5fzxb\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\" data-id=\"u2zoncman\" data-path=\"src/pages/Products/ProductForm.tsx\">Required Columns:</h4>\n                  <ul className=\"text-sm text-blue-700 space-y-1\" data-id=\"rhkwpjqrw\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <li data-id=\"guya2pqun\" data-path=\"src/pages/Products/ProductForm.tsx\">â€¢ Product Name (required)</li>\n                    <li data-id=\"tgq6dgo04\" data-path=\"src/pages/Products/ProductForm.tsx\">â€¢ Weight, Weight Unit, Department, Merchant</li>\n                    <li data-id=\"jvpyf8maa\" data-path=\"src/pages/Products/ProductForm.tsx\">â€¢ Case Price, Unit Per Case, Unit Price, Retail Price</li>\n                    <li data-id=\"44pem9vcv\" data-path=\"src/pages/Products/ProductForm.tsx\">â€¢ Category, Supplier, Description</li>\n                  </ul>\n                </div>\n              </div> :\n\n            <div className=\"space-y-4\" data-id=\"13jnbnr6s\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <div className=\"flex items-center justify-between\" data-id=\"vl7z3re82\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <h3 className=\"text-lg font-medium\" data-id=\"x7eodbrud\" data-path=\"src/pages/Products/ProductForm.tsx\">Preview Import Data ({bulkUploadData.length} products)</h3>\n                  <div className=\"space-x-2\" data-id=\"spwy9543p\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Button variant=\"outline\" onClick={() => {\n                    setBulkUploadData([]);\n                    setShowBulkPreview(false);\n                  }} data-id=\"nf798ix7z\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleBulkSubmit} disabled={isUploadingBulk} data-id=\"s0l90qs0w\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {isUploadingBulk ? 'Importing...' : 'Import Products'}\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"border rounded-lg max-h-96 overflow-auto\" data-id=\"8knn1mgms\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Table data-id=\"p9k1dq6d0\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <TableHeader data-id=\"1d31nj8tz\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <TableRow data-id=\"7ay0v18xb\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                        <TableHead data-id=\"3aba6dsmt\" data-path=\"src/pages/Products/ProductForm.tsx\">Product Name</TableHead>\n                        <TableHead data-id=\"h7safkm9m\" data-path=\"src/pages/Products/ProductForm.tsx\">Weight</TableHead>\n                        <TableHead data-id=\"fnhhv5m54\" data-path=\"src/pages/Products/ProductForm.tsx\">Department</TableHead>\n                        <TableHead data-id=\"eoxwo0so8\" data-path=\"src/pages/Products/ProductForm.tsx\">Case Price</TableHead>\n                        <TableHead data-id=\"lietay58u\" data-path=\"src/pages/Products/ProductForm.tsx\">Unit Price</TableHead>\n                        <TableHead data-id=\"vob1mrzrz\" data-path=\"src/pages/Products/ProductForm.tsx\">Retail Price</TableHead>\n                        <TableHead data-id=\"9qxs82bs8\" data-path=\"src/pages/Products/ProductForm.tsx\">Profit %</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody data-id=\"nyr9xf477\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {bulkUploadData.map((product, index) => {\n                      const profit = product.unit_price > 0 && product.retail_price > 0 ?\n                      ((product.retail_price - product.unit_price) / product.retail_price * 100).toFixed(1) :\n                      '0';\n\n                      return (\n                        <TableRow key={index} data-id=\"0w8qpnjpw\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                            <TableCell className=\"font-medium\" data-id=\"ztfzojfdy\" data-path=\"src/pages/Products/ProductForm.tsx\">{product.product_name}</TableCell>\n                            <TableCell data-id=\"qxwlle97c\" data-path=\"src/pages/Products/ProductForm.tsx\">{product.weight} {product.weight_unit}</TableCell>\n                            <TableCell data-id=\"nawb7vr9m\" data-path=\"src/pages/Products/ProductForm.tsx\">{product.department}</TableCell>\n                            <TableCell data-id=\"6ackpc71i\" data-path=\"src/pages/Products/ProductForm.tsx\">${product.case_price?.toFixed(2) || '0.00'}</TableCell>\n                            <TableCell data-id=\"ag0ksahtm\" data-path=\"src/pages/Products/ProductForm.tsx\">${product.unit_price?.toFixed(2) || '0.00'}</TableCell>\n                            <TableCell data-id=\"4yr04zme5\" data-path=\"src/pages/Products/ProductForm.tsx\">${product.retail_price?.toFixed(2) || '0.00'}</TableCell>\n                            <TableCell data-id=\"iecxknd33\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                              <Badge variant={parseFloat(profit) > 20 ? 'default' : 'secondary'} data-id=\"kbs73ub5d\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                                {profit}%\n                              </Badge>\n                            </TableCell>\n                          </TableRow>);\n\n                    })}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n            }\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Form */}\n      <Card data-id=\"ybi5y9x0t\" data-path=\"src/pages/Products/ProductForm.tsx\">\n        <CardHeader data-id=\"c0sro9agp\" data-path=\"src/pages/Products/ProductForm.tsx\">\n          <CardTitle data-id=\"yblpzeajq\" data-path=\"src/pages/Products/ProductForm.tsx\">{isEdit ? 'Edit Product' : 'New Product'}</CardTitle>\n          <CardDescription data-id=\"4snm2u3bc\" data-path=\"src/pages/Products/ProductForm.tsx\">\n            {isEdit ? 'Update the product information below' : 'Enter the product details below'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent data-id=\"9gdcuh4ed\" data-path=\"src/pages/Products/ProductForm.tsx\">\n          <FormErrorBoundary\n            formName=\"Product Form\"\n            showDataRecovery={true}\n            onFormReset={() => {\n              if (isEdit) {\n                fetchProduct();\n              } else {\n                setFormData({\n                  product_name: '',\n                  weight: 0,\n                  weight_unit: 'lb',\n                  department: 'Convenience Store',\n                  merchant_id: '',\n                  last_updated_date: new Date().toISOString().split('T')[0],\n                  last_shopping_date: '',\n                  case_price: 0,\n                  unit_per_case: 1,\n                  unit_price: 0,\n                  retail_price: 0,\n                  profit_margin: 0,\n                  category: '',\n                  supplier: '',\n                  quantity_in_stock: 0,\n                  minimum_stock: 0,\n                  description: '',\n                  bar_code_case: '',\n                  bar_code_unit: '',\n                  serial_number: 0,\n                  overdue: false\n                });\n                generateSerialNumber();\n              }\n            }} data-id=\"cktkquzxl\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n            <form onSubmit={handleSubmit} className=\"space-y-6\" data-id=\"b47e9aqag\" data-path=\"src/pages/Products/ProductForm.tsx\">\n              {/* Basic Information */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"xjmwfhyiz\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"kglmcicue\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"product_name\" data-id=\"phoq35hdt\" data-path=\"src/pages/Products/ProductForm.tsx\">Product Name *</Label>\n                  <Input\n                    id=\"product_name\"\n                    placeholder=\"Enter product name\"\n                    value={formData.product_name}\n                    onChange={(e) => handleInputChange('product_name', e.target.value)}\n                    required data-id=\"rjrlm6qa7\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"5wnmbfxgz\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"category\" data-id=\"4rvslpa8b\" data-path=\"src/pages/Products/ProductForm.tsx\">Category</Label>\n                  <Select\n                    value={formData.category}\n                    onValueChange={(value) => handleInputChange('category', value)} data-id=\"cj8kg9x7v\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n                    <SelectTrigger data-id=\"h53ofq07e\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <SelectValue placeholder=\"Select category\" data-id=\"lt19useuz\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"tu1fli4s7\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {categories.map((cat) =>\n                      <SelectItem key={cat.id} value={cat.category_name} data-id=\"dxg4exzsk\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          {cat.category_name}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {/* Weight and Measurement */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\" data-id=\"kcclizqrd\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"rbfly9jkc\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"weight\" data-id=\"5kewfxhrq\" data-path=\"src/pages/Products/ProductForm.tsx\">Weight</Label>\n                  <NumberInput\n                    id=\"weight\"\n                    step={0.01}\n                    min={0}\n                    value={formData.weight}\n                    onChange={(value) => handleInputChange('weight', value)} data-id=\"ntm2991pu\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"dpy100zkt\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"weight_unit\" data-id=\"lmhazo1o2\" data-path=\"src/pages/Products/ProductForm.tsx\">Weight Unit (USA Measurements)</Label>\n                  <Select\n                    value={formData.weight_unit}\n                    onValueChange={(value) => handleInputChange('weight_unit', value)} data-id=\"ykhzxj6ot\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n                    <SelectTrigger data-id=\"ibo0fui0o\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <SelectValue placeholder=\"Select unit\" data-id=\"wikid8ydq\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"o46bsqe2q\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {weightUnits.map((unit) =>\n                      <SelectItem key={unit.value} value={unit.value} data-id=\"vr3gmqpg9\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          {unit.label}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-xs text-muted-foreground\" data-id=\"ilqscfzlv\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    Combined: {formData.weight} {formData.weight_unit}\n                  </p>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"qsxt1su8b\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"department\" data-id=\"ui00cry10\" data-path=\"src/pages/Products/ProductForm.tsx\">Department</Label>\n                  <Select\n                    value={formData.department}\n                    onValueChange={(value) => handleInputChange('department', value)} data-id=\"9e5cpkg0a\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n                    <SelectTrigger data-id=\"o17mjjiz5\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <SelectValue placeholder=\"Select department\" data-id=\"onct4n5nl\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"5w12yqkd7\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {departments.map((dept) =>\n                      <SelectItem key={dept} value={dept} data-id=\"f42auxyjl\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          {dept}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {/* Merchant and Dates */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\" data-id=\"8ev602vbv\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"2a4vpkma2\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"merchant_id\" data-id=\"lyuaqm4jk\" data-path=\"src/pages/Products/ProductForm.tsx\">Merchant</Label>\n                  <Select\n                    value={formData.merchant_id}\n                    onValueChange={(value) => handleInputChange('merchant_id', value)} data-id=\"07ewjpxem\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n                    <SelectTrigger data-id=\"r6bhwqo6v\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <SelectValue placeholder=\"Select merchant\" data-id=\"gcgdwhskz\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"stxcuz9bv\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      {vendors.map((vendor) =>\n                      <SelectItem key={vendor.id} value={vendor.id.toString()} data-id=\"8t00h2uci\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          {vendor.vendor_name}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"7xotykfm4\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"last_updated_date\" data-id=\"d4wo4tj5g\" data-path=\"src/pages/Products/ProductForm.tsx\">Last Updated Date</Label>\n                  <Input\n                    id=\"last_updated_date\"\n                    type=\"date\"\n                    value={formData.last_updated_date}\n                    onChange={(e) => handleInputChange('last_updated_date', e.target.value)} data-id=\"afigj8q8r\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"joc9bnqgp\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"last_shopping_date\" data-id=\"nfkbcc485\" data-path=\"src/pages/Products/ProductForm.tsx\">Last Shopping Date</Label>\n                  <Input\n                    id=\"last_shopping_date\"\n                    type=\"date\"\n                    value={formData.last_shopping_date}\n                    onChange={(e) => handleInputChange('last_shopping_date', e.target.value)} data-id=\"4brvqnedm\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                </div>\n              </div>\n\n              {/* Pricing Information */}\n              <Separator data-id=\"9o0gwbwwq\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n              <div className=\"space-y-4\" data-id=\"wbwknuhfy\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <h3 className=\"text-lg font-medium\" data-id=\"yu7bdekm3\" data-path=\"src/pages/Products/ProductForm.tsx\">Pricing Information</h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\" data-id=\"iwqed2cq2\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <div className=\"space-y-2\" data-id=\"h13mzseq5\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"case_price\" data-id=\"3yq7lv3rt\" data-path=\"src/pages/Products/ProductForm.tsx\">Case Price ($)</Label>\n                    <NumberInput\n                      id=\"case_price\"\n                      step={0.01}\n                      min={0}\n                      value={formData.case_price}\n                      onChange={(value) => handleInputChange('case_price', value)} data-id=\"8lif39lep\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                  </div>\n\n                  <div className=\"space-y-2\" data-id=\"8ilbz7re9\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"unit_per_case\" data-id=\"lu93lxaue\" data-path=\"src/pages/Products/ProductForm.tsx\">Unit Per Case</Label>\n                    <NumberInput\n                      id=\"unit_per_case\"\n                      min={1}\n                      value={formData.unit_per_case}\n                      onChange={(value) => handleInputChange('unit_per_case', value)} data-id=\"xpreug7g1\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                  </div>\n\n                  <div className=\"space-y-2\" data-id=\"sqleu9w7o\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"unit_price\" data-id=\"bw3hnk8lw\" data-path=\"src/pages/Products/ProductForm.tsx\">Unit Price ($)</Label>\n                    <NumberInput\n                      id=\"unit_price\"\n                      step={0.01}\n                      min={0}\n                      value={formData.unit_price}\n                      onChange={(value) => handleInputChange('unit_price', value)} data-id=\"bhjy2741g\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                    {formData.case_price > 0 && formData.unit_per_case > 0 &&\n                    <p className=\"text-xs text-green-600 flex items-center\" data-id=\"mig3drq7h\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                        <Calculator className=\"w-3 h-3 mr-1\" data-id=\"9wwkfvxsf\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                        Auto-calculated from case price\n                      </p>\n                    }\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"7szavq7wt\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <div className=\"space-y-2\" data-id=\"s44v0bd4c\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"retail_price\" data-id=\"sw3slkr61\" data-path=\"src/pages/Products/ProductForm.tsx\">Retail Price ($)</Label>\n                    <NumberInput\n                      id=\"retail_price\"\n                      step={0.01}\n                      min={0}\n                      value={formData.retail_price}\n                      onChange={(value) => handleInputChange('retail_price', value)} data-id=\"nhp6pvirq\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                    {/* Auto-calculation indicator */}\n                    {formData.unit_price > 0 && Math.abs(formData.retail_price - suggestedRetailPrice) < 0.01 &&\n                    <p className=\"text-xs text-green-600 flex items-center\" data-id=\"c6694zlow\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                        <Calculator className=\"w-3 h-3 mr-1\" data-id=\"7j2ylnx8a\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                        Auto-calculated from unit price\n                      </p>\n                    }\n                    \n                    {/* Pricing Suggestion */}\n                    {formData.unit_price > 0 && Math.abs(formData.retail_price - suggestedRetailPrice) >= 0.01 &&\n                    <div className=\"mt-2 p-3 bg-red-50 border border-red-200 rounded-lg\" data-id=\"7ggtw6coy\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                        <div className=\"flex items-center justify-between\" data-id=\"ggamngcao\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          <div className=\"flex items-center space-x-2\" data-id=\"1l6080zer\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                            <DollarSign className=\"w-4 h-4 text-red-600\" data-id=\"r1rmqer56\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                            <span className=\"text-sm font-medium text-red-800\" data-id=\"hs4p8lfhn\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                              Suggested: ${suggestedRetailPrice.toFixed(2)}\n                            </span>\n                          </div>\n                          <Button\n                          type=\"button\"\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleInputChange('retail_price', suggestedRetailPrice)}\n                          className=\"text-xs h-6 px-2\" data-id=\"rhpckr8hc\" data-path=\"src/pages/Products/ProductForm.tsx\">\n\n                            Apply\n                          </Button>\n                        </div>\n                        <p className=\"text-xs text-red-700 mt-1\" data-id=\"on56s08f2\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                          {formData.unit_price < 4 ? '+65%' :\n                        formData.unit_price < 6 ? '+55%' :\n                        formData.unit_price < 8 ? '+45%' :\n                        formData.unit_price < 10 ? '+35%' : '+25%'} markup, \n                          rounded to .25/.49/.75/.99\n                        </p>\n                      </div>\n                    }\n                  </div>\n\n                  <div className=\"space-y-2\" data-id=\"orczwe7jq\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"profit_margin\" data-id=\"sq9xzux3z\" data-path=\"src/pages/Products/ProductForm.tsx\">Profit Margin (%)</Label>\n                    <div className=\"flex items-center space-x-2\" data-id=\"jf7rutm1u\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <NumberInput\n                        id=\"profit_margin\"\n                        step={0.01}\n                        value={formData.profit_margin}\n                        disabled\n                        className=\"bg-muted\" data-id=\"uiwlfbodg\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                      <Badge variant={formData.profit_margin > 20 ? 'default' : 'secondary'} data-id=\"3fkohoku4\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                        {formData.profit_margin > 20 ? 'Good' : 'Low'}\n                      </Badge>\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\" data-id=\"p6l0gv7lg\" data-path=\"src/pages/Products/ProductForm.tsx\">Auto-calculated from unit and retail price</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Additional Information */}\n              <Separator data-id=\"rqx6u6vw5\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n              <div className=\"space-y-4\" data-id=\"rpa5p141o\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <h3 className=\"text-lg font-medium\" data-id=\"kkeqlckhp\" data-path=\"src/pages/Products/ProductForm.tsx\">Additional Information</h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"t1uth5etf\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <div className=\"space-y-2\" data-id=\"br0f51o36\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"supplier\" data-id=\"nwezqijbs\" data-path=\"src/pages/Products/ProductForm.tsx\">Supplier</Label>\n                    <Input\n                      id=\"supplier\"\n                      placeholder=\"Enter supplier name\"\n                      value={formData.supplier}\n                      onChange={(e) => handleInputChange('supplier', e.target.value)} data-id=\"txymx9tx5\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                  </div>\n\n                  <div className=\"space-y-2\" data-id=\"9x4r9yo2t\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label data-id=\"2f1u5b9f8\" data-path=\"src/pages/Products/ProductForm.tsx\">Stock Information</Label>\n                    <div className=\"grid grid-cols-2 gap-2\" data-id=\"qa7poz02u\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <NumberInput\n                        placeholder=\"Current Stock\"\n                        value={formData.quantity_in_stock}\n                        onChange={(value) => handleInputChange('quantity_in_stock', value)}\n                        min={0} data-id=\"aizhy7ulb\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                      <NumberInput\n                        placeholder=\"Min Stock\"\n                        value={formData.minimum_stock}\n                        onChange={(value) => handleInputChange('minimum_stock', value)}\n                        min={0} data-id=\"dckcsjdop\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\" data-id=\"hbdkhswsk\" data-path=\"src/pages/Products/ProductForm.tsx\">Current stock / Minimum stock level</p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"i6cs0n1a2\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Label htmlFor=\"description\" data-id=\"vr0yez4f7\" data-path=\"src/pages/Products/ProductForm.tsx\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    placeholder=\"Enter product description\"\n                    rows={4}\n                    value={formData.description}\n                    onChange={(e) => handleInputChange('description', e.target.value)} data-id=\"pi8xzw20m\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                </div>\n\n                {/* Barcode Scanning */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"bcdeqdoq5\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <div className=\"space-y-2\" data-id=\"00ykzf331\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"bar_code_case\" data-id=\"sx2pox7kt\" data-path=\"src/pages/Products/ProductForm.tsx\">Barcode (Case)</Label>\n                    <div className=\"flex space-x-2\" data-id=\"6ri7xrix9\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <Input\n                        id=\"bar_code_case\"\n                        placeholder=\"Scan or enter case barcode\"\n                        value={formData.bar_code_case}\n                        onChange={(e) => handleInputChange('bar_code_case', e.target.value)} data-id=\"bzbisylmd\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                      <BarcodeScanner\n                        onScanned={(barcode) => handleBarcodeScanned('bar_code_case', barcode)} data-id=\"98bp73w7a\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\" data-id=\"x7tmyo56s\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                    <Label htmlFor=\"bar_code_unit\" data-id=\"hdxeaxie5\" data-path=\"src/pages/Products/ProductForm.tsx\">Barcode (Unit)</Label>\n                    <div className=\"flex space-x-2\" data-id=\"s3j3g1f3f\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                      <Input\n                        id=\"bar_code_unit\"\n                        placeholder=\"Scan or enter unit barcode\"\n                        value={formData.bar_code_unit}\n                        onChange={(e) => handleInputChange('bar_code_unit', e.target.value)} data-id=\"5irm9j9k9\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                      <BarcodeScanner\n                        onScanned={(barcode) => handleBarcodeScanned('bar_code_unit', barcode)} data-id=\"eshdnhw4l\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Form Actions */}\n              <div className=\"flex items-center justify-end space-x-4 pt-6\" data-id=\"2pgb4f3ov\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => navigate('/products')} data-id=\"t2fbqbrwk\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={isLoading} data-id=\"fp7m4hvvp\" data-path=\"src/pages/Products/ProductForm.tsx\">\n                  <Save className=\"w-4 h-4 mr-2\" data-id=\"e2dbj22gs\" data-path=\"src/pages/Products/ProductForm.tsx\" />\n                  {isLoading ? 'Saving...' : isEdit ? 'Update Product' : 'Create Product'}\n                </Button>\n              </div>\n            </form>\n          </FormErrorBoundary>\n        </CardContent>\n      </Card>\n    </div>);\n\n};\n\nexport default ProductForm;\n"],"names":["Component","jsx","jsxs","useCallback","useRef","useState","useEffect","_a"],"mappings":"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","x_google_ignoreList":[0]}