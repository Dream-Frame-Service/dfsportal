{"version":3,"file":"Dashboard-DLXYiF5u.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { supabase } from '@/lib/supabase';\nimport { DollarSign, Package, ShoppingCart, Users, TrendingUp, TrendingDown, AlertTriangle, CheckCircle, RefreshCw } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { useToast } from '@/hooks/use-toast';\nimport { Button } from '@/components/ui/button';\nimport { useNavigate } from 'react-router-dom';\n\n// Add formatCurrency function\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount);\n}\n\ninterface DebugInfo {\n  supabaseUrl: string;\n  hasAnonKey: boolean;\n  authStatus: string;\n  networkRequests: Array<{\n    type: string;\n    success: boolean;\n    timestamp: string;\n    error?: any;\n  }>;\n  rlsError: string | null;\n}\n\nconst Dashboard = () => {\n  const [user, setUser] = useState<any>(null);\n  const [profile, setProfile] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<DebugInfo>({\n    supabaseUrl: '',\n    hasAnonKey: false,\n    authStatus: 'checking',\n    networkRequests: [],\n    rlsError: null\n  });\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    // Check Supabase configuration\n    const checkSupabaseConfig = () => {\n      const url = import.meta.env.VITE_SUPABASE_URL;\n      const anonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n      \n      console.log('🔧 Supabase Configuration Check:');\n      console.log('URL:', url ? `${url.substring(0, 30)}...` : 'NOT SET');\n      console.log('Anon Key:', anonKey ? 'SET' : 'NOT SET');\n      \n      setDebugInfo(prev => ({\n        ...prev,\n        supabaseUrl: url || 'NOT SET',\n        hasAnonKey: !!anonKey\n      }));\n\n      if (!url || !anonKey) {\n        setError('Supabase environment variables are not properly configured');\n        setLoading(false);\n        return false;\n      }\n      return true;\n    };\n\n    // Check authentication and fetch data\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        \n        // Check config first\n        if (!checkSupabaseConfig()) {\n          return;\n        }\n\n        // Get current session\n        console.log('🔐 Checking authentication...');\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n        \n        if (sessionError) {\n          console.error('❌ Session error:', sessionError);\n          throw sessionError;\n        }\n\n        console.log('📊 Session status:', session ? 'Active' : 'No session');\n        \n        // Get current user\n        const { data: { user }, error: userError } = await supabase.auth.getUser();\n        \n        setDebugInfo(prev => ({\n          ...prev,\n          authStatus: user ? 'authenticated' : 'not authenticated',\n          networkRequests: [...prev.networkRequests, {\n            type: 'auth.getUser',\n            success: !userError,\n            timestamp: new Date().toISOString()\n          }]\n        }));\n\n        if (userError) {\n          console.error('❌ Error fetching user:', userError);\n          throw userError;\n        }\n\n        if (!user) {\n          console.log('🚪 No user found, redirecting to login');\n          navigate('/login');\n          return;\n        }\n\n        console.log('✅ User authenticated:', user.id);\n        setUser(user);\n\n        // Test RLS by fetching profile\n        console.log('📝 Fetching user profile...');\n        const { data: profileData, error: profileError } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', user.id)\n          .single();\n\n        setDebugInfo(prev => ({\n          ...prev,\n          networkRequests: [...prev.networkRequests, {\n            type: 'profiles.select',\n            success: !profileError,\n            error: profileError?.message,\n            timestamp: new Date().toISOString()\n          }]\n        }));\n\n        if (profileError) {\n          console.error('❌ Error fetching profile:', profileError);\n          \n          // Check for RLS error\n          if (profileError.message?.includes('policy')) {\n            setDebugInfo(prev => ({\n              ...prev,\n              rlsError: 'Row Level Security (RLS) policy may be blocking access to profiles table'\n            }));\n          }\n          \n          // If profile doesn't exist, create one\n          if (profileError.code === 'PGRST116') {\n            console.log('📝 Profile not found, creating new profile...');\n            const { data: newProfile, error: createError } = await supabase\n              .from('profiles')\n              .insert([\n                {\n                  id: user.id,\n                  email: user.email,\n                  updated_at: new Date().toISOString()\n                }\n              ])\n              .select()\n              .single();\n\n            setDebugInfo(prev => ({\n              ...prev,\n              networkRequests: [...prev.networkRequests, {\n                type: 'profiles.insert',\n                success: !createError,\n                error: createError?.message,\n                timestamp: new Date().toISOString()\n              }]\n            }));\n\n            if (createError) {\n              console.error('❌ Error creating profile:', createError);\n              if (createError.message?.includes('policy')) {\n                setDebugInfo(prev => ({\n                  ...prev,\n                  rlsError: 'RLS policy is blocking profile creation. Check INSERT policy for profiles table.'\n                }));\n              }\n              throw createError;\n            }\n            setProfile(newProfile);\n            console.log('✅ Profile created successfully');\n          } else {\n            throw profileError;\n          }\n        } else {\n          setProfile(profileData);\n          console.log('✅ Profile fetched successfully');\n        }\n\n        // Test other table access\n        console.log('🧪 Testing access to other tables...');\n        const tables = ['chats', 'messages', 'wisdom'];\n        for (const table of tables) {\n          try {\n            const { error: tableError } = await supabase\n              .from(table)\n              .select('id')\n              .limit(1);\n            \n            setDebugInfo(prev => ({\n              ...prev,\n              networkRequests: [...prev.networkRequests, {\n                type: `${table}.select`,\n                success: !tableError,\n                error: tableError?.message,\n                timestamp: new Date().toISOString()\n              }]\n            }));\n\n            if (tableError?.message?.includes('policy')) {\n              console.warn(`⚠️ RLS issue with ${table} table:`, tableError.message);\n            }\n          } catch (err) {\n            console.error(`❌ Error testing ${table} table:`, err);\n          }\n        }\n\n      } catch (err) {\n        console.error('❌ Dashboard data fetch error:', err);\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        toast({\n          title: \"Error\",\n          description: \"Failed to load dashboard data. Check console for details.\",\n          variant: \"destructive\",\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Set up auth state listener\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        console.log('🔄 Auth state changed:', event, session?.user?.id);\n        if (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED') {\n          await fetchDashboardData();\n        } else if (event === 'SIGNED_OUT') {\n          navigate('/login');\n        }\n      }\n    );\n\n    // Initial fetch\n    fetchDashboardData();\n\n    // Cleanup subscription\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [navigate, toast]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto\"></div>\n          <p className=\"mt-4\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center max-w-2xl mx-auto p-8\">\n          <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Dashboard Error</h2>\n          <p className=\"text-red-500 mb-4\">Error: {error}</p>\n          \n          {/* Debug information for error state */}\n          <div className=\"bg-gray-100 p-4 rounded text-left mb-4\">\n            <h3 className=\"font-semibold mb-2\">Debug Information:</h3>\n            <div className=\"space-y-2 text-sm\">\n              <p><strong>Supabase URL:</strong> {debugInfo.supabaseUrl}</p>\n              <p><strong>Anon Key:</strong> {debugInfo.hasAnonKey ? 'Present' : 'Missing'}</p>\n              <p><strong>Auth Status:</strong> {debugInfo.authStatus}</p>\n              {debugInfo.rlsError && (\n                <p className=\"text-red-600\"><strong>RLS Error:</strong> {debugInfo.rlsError}</p>\n              )}\n            </div>\n          </div>\n\n          <button \n            onClick={() => window.location.reload()} \n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            Refresh Page\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Dashboard</h1>\n      \n      {/* Enhanced debug information */}\n      <div className=\"bg-gray-100 p-4 rounded mb-4\">\n        <h2 className=\"font-semibold mb-2\">Debug Info:</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h3 className=\"font-medium\">User Info:</h3>\n            <p className=\"text-sm\">User ID: {user?.id}</p>\n            <p className=\"text-sm\">Email: {user?.email}</p>\n            <p className=\"text-sm\">Auth Status: {debugInfo.authStatus}</p>\n          </div>\n          <div>\n            <h3 className=\"font-medium\">Supabase Config:</h3>\n            <p className=\"text-sm\">URL: {debugInfo.supabaseUrl?.substring(0, 30)}...</p>\n            <p className=\"text-sm\">Anon Key: {debugInfo.hasAnonKey ? '✅ Set' : '❌ Missing'}</p>\n          </div>\n        </div>\n        \n        <div className=\"mt-4\">\n          <h3 className=\"font-medium\">Profile Data:</h3>\n          <pre className=\"text-xs bg-white p-2 rounded overflow-auto\">\n            {JSON.stringify(profile, null, 2)}\n          </pre>\n        </div>\n\n        <div className=\"mt-4\">\n          <h3 className=\"font-medium\">Network Requests:</h3>\n          <div className=\"space-y-1 text-xs\">\n            {debugInfo.networkRequests.map((req, i) => (\n              <div key={i} className={`p-1 ${req.success ? 'bg-green-100' : 'bg-red-100'}`}>\n                {req.timestamp}: {req.type} - {req.success ? '✅ Success' : `❌ Failed: ${req.error}`}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {debugInfo.rlsError && (\n          <div className=\"mt-4 p-3 bg-red-100 border border-red-300 rounded\">\n            <p className=\"text-red-700 font-medium\">⚠️ RLS Policy Issue Detected:</p>\n            <p className=\"text-red-600 text-sm\">{debugInfo.rlsError}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Your dashboard content here */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {/* Add your dashboard widgets/components */}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["formatCurrency","amount","Dashboard","user","setUser","useState","profile","setProfile","loading","setLoading","error","setError","debugInfo","setDebugInfo","navigate","useNavigate","toast","useToast","useEffect","checkSupabaseConfig","url","prev","fetchDashboardData","session","sessionError","supabase","userError","profileData","profileError","_a","newProfile","createError","_b","tables","table","tableError","_c","err","subscription","event","jsxs","jsx","req","i"],"mappings":"oIAaO,SAASA,EAAeC,EAAwB,CAC9C,OAAA,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,KAAA,CACX,EAAE,OAAOA,CAAM,CAClB,CAeA,MAAMC,EAAY,IAAM,OACtB,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAc,IAAI,EACpC,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAc,IAAI,EAC1C,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAACK,EAAOC,CAAQ,EAAIN,EAAAA,SAAwB,IAAI,EAChD,CAACO,EAAWC,CAAY,EAAIR,WAAoB,CACpD,YAAa,GACb,WAAY,GACZ,WAAY,WACZ,gBAAiB,CAAC,EAClB,SAAU,IAAA,CACX,EACKS,EAAWC,EAAY,EACvB,CAAE,MAAAC,CAAM,EAAIC,EAAS,EAkN3B,OAhNAC,EAAAA,UAAU,IAAM,CAEd,MAAMC,EAAsB,IAAM,CAC1B,MAAAC,EAAM,2CAGZ,eAAQ,IAAI,kCAAkC,EACtC,QAAA,IAAI,OAAc,GAAGA,EAAI,UAAU,EAAG,EAAE,CAAC,KAAiB,EAClE,QAAQ,IAAI,YAAuB,KAAiB,EAEpDP,EAAsBQ,IAAA,CACpB,GAAGA,EACH,YAAaD,EACb,WAAY,EAAE,EACd,EAOK,EACT,EAGME,EAAqB,SAAY,WACjC,GAAA,CAIE,GAHJb,EAAW,EAAI,EAGX,CAACU,IACH,OAIF,QAAQ,IAAI,+BAA+B,EACrC,KAAA,CAAE,KAAM,CAAE,QAAAI,GAAW,MAAOC,CAAA,EAAiB,MAAMC,EAAS,KAAK,WAAW,EAElF,GAAID,EACM,cAAA,MAAM,mBAAoBA,CAAY,EACxCA,EAGR,QAAQ,IAAI,qBAAsBD,EAAU,SAAW,YAAY,EAGnE,KAAM,CAAE,KAAM,CAAE,KAAApB,CAAK,EAAG,MAAOuB,GAAc,MAAMD,EAAS,KAAK,QAAQ,EAYzE,GAVAZ,EAAsBQ,IAAA,CACpB,GAAGA,EACH,WAAYlB,EAAO,gBAAkB,oBACrC,gBAAiB,CAAC,GAAGkB,EAAK,gBAAiB,CACzC,KAAM,eACN,QAAS,CAACK,EACV,UAAW,IAAI,KAAK,EAAE,YAAY,CACnC,CAAA,CAAA,EACD,EAEEA,EACM,cAAA,MAAM,yBAA0BA,CAAS,EAC3CA,EAGR,GAAI,CAACvB,EAAM,CACT,QAAQ,IAAI,wCAAwC,EACpDW,EAAS,QAAQ,EACjB,MAAA,CAGM,QAAA,IAAI,wBAAyBX,EAAK,EAAE,EAC5CC,EAAQD,CAAI,EAGZ,QAAQ,IAAI,6BAA6B,EACzC,KAAM,CAAE,KAAMwB,EAAa,MAAOC,GAAiB,MAAMH,EACtD,KAAK,UAAU,EACf,OAAO,GAAG,EACV,GAAG,KAAMtB,EAAK,EAAE,EAChB,OAAO,EAYV,GAVAU,EAAsBQ,IAAA,CACpB,GAAGA,EACH,gBAAiB,CAAC,GAAGA,EAAK,gBAAiB,CACzC,KAAM,kBACN,QAAS,CAACO,EACV,MAAOA,GAAA,YAAAA,EAAc,QACrB,UAAW,IAAI,KAAK,EAAE,YAAY,CACnC,CAAA,CAAA,EACD,EAEEA,EAYE,GAXI,QAAA,MAAM,4BAA6BA,CAAY,GAGnDC,EAAAD,EAAa,UAAb,MAAAC,EAAsB,SAAS,WACjChB,EAAsBQ,IAAA,CACpB,GAAGA,EACH,SAAU,0EAAA,EACV,EAIAO,EAAa,OAAS,WAAY,CACpC,QAAQ,IAAI,+CAA+C,EACrD,KAAA,CAAE,KAAME,EAAY,MAAOC,CAAA,EAAgB,MAAMN,EACpD,KAAK,UAAU,EACf,OAAO,CACN,CACE,GAAItB,EAAK,GACT,MAAOA,EAAK,MACZ,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACrC,CACD,EACA,OAAO,EACP,OAAO,EAYV,GAVAU,EAAsBQ,IAAA,CACpB,GAAGA,EACH,gBAAiB,CAAC,GAAGA,EAAK,gBAAiB,CACzC,KAAM,kBACN,QAAS,CAACU,EACV,MAAOA,GAAA,YAAAA,EAAa,QACpB,UAAW,IAAI,KAAK,EAAE,YAAY,CACnC,CAAA,CAAA,EACD,EAEEA,EACM,cAAA,MAAM,4BAA6BA,CAAW,GAClDC,EAAAD,EAAY,UAAZ,MAAAC,EAAqB,SAAS,WAChCnB,EAAsBQ,IAAA,CACpB,GAAGA,EACH,SAAU,kFAAA,EACV,EAEEU,EAERxB,EAAWuB,CAAU,EACrB,QAAQ,IAAI,gCAAgC,CAAA,KAEtC,OAAAF,OAGRrB,EAAWoB,CAAW,EACtB,QAAQ,IAAI,gCAAgC,EAI9C,QAAQ,IAAI,sCAAsC,EAClD,MAAMM,EAAS,CAAC,QAAS,WAAY,QAAQ,EAC7C,UAAWC,KAASD,EACd,GAAA,CACF,KAAM,CAAE,MAAOE,CAAW,EAAI,MAAMV,EACjC,KAAKS,CAAK,EACV,OAAO,IAAI,EACX,MAAM,CAAC,EAEVrB,EAAsBQ,IAAA,CACpB,GAAGA,EACH,gBAAiB,CAAC,GAAGA,EAAK,gBAAiB,CACzC,KAAM,GAAGa,CAAK,UACd,QAAS,CAACC,EACV,MAAOA,GAAA,YAAAA,EAAY,QACnB,UAAW,IAAI,KAAK,EAAE,YAAY,CACnC,CAAA,CAAA,EACD,GAEEC,EAAAD,GAAA,YAAAA,EAAY,UAAZ,MAAAC,EAAqB,SAAS,WAChC,QAAQ,KAAK,qBAAqBF,CAAK,UAAWC,EAAW,OAAO,QAE/DE,EAAK,CACZ,QAAQ,MAAM,mBAAmBH,CAAK,UAAWG,CAAG,CAAA,QAIjDA,EAAK,CACJ,QAAA,MAAM,gCAAiCA,CAAG,EAClD1B,EAAS0B,aAAe,MAAQA,EAAI,QAAU,mBAAmB,EAC3DrB,EAAA,CACJ,MAAO,QACP,YAAa,4DACb,QAAS,aAAA,CACV,CAAA,QACD,CACAP,EAAW,EAAK,CAAA,CAEpB,EAGM,CAAE,KAAM,CAAE,aAAA6B,CAAe,CAAA,EAAIb,EAAS,KAAK,kBAC/C,MAAOc,EAAOhB,IAAY,OACxB,QAAQ,IAAI,yBAA0BgB,GAAOV,EAAAN,GAAA,YAAAA,EAAS,OAAT,YAAAM,EAAe,EAAE,EAC1DU,IAAU,aAAeA,IAAU,kBACrC,MAAMjB,EAAmB,EAChBiB,IAAU,cACnBzB,EAAS,QAAQ,CACnB,CAEJ,EAGmB,OAAAQ,EAAA,EAGZ,IAAM,CACXgB,EAAa,YAAY,CAC3B,CAAA,EACC,CAACxB,EAAUE,CAAK,CAAC,EAEhBR,QAEC,MAAI,CAAA,UAAU,gDACb,SAACgC,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,yEAAyE,QACvF,IAAA,CAAE,UAAU,OAAO,SAAoB,sBAAA,CAAA,CAAA,CAAA,CAC1C,CAAA,CACF,EAIA/B,QAEC,MAAI,CAAA,UAAU,gDACb,SAAC8B,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,KAAA,CAAG,UAAU,uCAAuC,SAAe,kBAAA,EACnEA,EAAAA,KAAA,IAAE,CAAA,UAAU,oBAAoB,SAAA,CAAA,UAAQ9B,CAAA,EAAM,EAG9C8B,EAAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,qBAAqB,SAAkB,qBAAA,EACpDA,EAAAA,KAAA,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAACC,EAAAA,IAAA,UAAO,SAAa,gBAAA,EAAS,IAAE7B,EAAU,WAAA,EAAY,SACxD,IAAE,CAAA,SAAA,CAAC6B,EAAAA,IAAA,UAAO,SAAS,YAAA,EAAS,IAAE7B,EAAU,WAAa,UAAY,SAAA,EAAU,SAC3E,IAAE,CAAA,SAAA,CAAC6B,EAAAA,IAAA,UAAO,SAAY,eAAA,EAAS,IAAE7B,EAAU,UAAA,EAAW,EACtDA,EAAU,UACR4B,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAACC,EAAAA,IAAA,UAAO,SAAU,aAAA,EAAS,IAAE7B,EAAU,QAAA,CAAS,CAAA,CAAA,CAEhF,CAAA,CAAA,EACF,EAEA6B,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,OAAO,SAAS,OAAO,EACtC,UAAU,6DACX,SAAA,cAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,EAKDD,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,OAAC,KAAA,CAAG,UAAU,0BAA0B,SAAS,YAAA,EAGhDA,EAAAA,KAAA,MAAI,CAAA,UAAU,+BACb,SAAA,OAAC,KAAA,CAAG,UAAU,qBAAqB,SAAW,cAAA,EAC7CA,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,cAAc,SAAU,aAAA,EACrCA,EAAAA,KAAA,IAAE,CAAA,UAAU,UAAU,SAAA,CAAA,YAAUrC,GAAA,YAAAA,EAAM,EAAA,EAAG,EACzCqC,EAAAA,KAAA,IAAE,CAAA,UAAU,UAAU,SAAA,CAAA,UAAQrC,GAAA,YAAAA,EAAM,KAAA,EAAM,EAC1CqC,EAAAA,KAAA,IAAE,CAAA,UAAU,UAAU,SAAA,CAAA,gBAAc5B,EAAU,UAAA,CAAW,CAAA,CAAA,EAC5D,SACC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,cAAc,SAAgB,mBAAA,EAC3C4B,EAAAA,KAAA,IAAE,CAAA,UAAU,UAAU,SAAA,CAAA,SAAMX,EAAAjB,EAAU,cAAV,YAAAiB,EAAuB,UAAU,EAAG,IAAI,KAAA,EAAG,EACvEW,EAAAA,KAAA,IAAE,CAAA,UAAU,UAAU,SAAA,CAAA,aAAW5B,EAAU,WAAa,QAAU,WAAA,CAAY,CAAA,CAAA,CACjF,CAAA,CAAA,EACF,EAEC4B,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,cAAc,SAAa,gBAAA,EACxCC,EAAAA,IAAA,OAAI,UAAU,6CACZ,cAAK,UAAUnC,EAAS,KAAM,CAAC,CAClC,CAAA,CAAA,EACF,EAECkC,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,cAAc,SAAiB,oBAAA,QAC5C,MAAI,CAAA,UAAU,oBACZ,SAAU5B,EAAA,gBAAgB,IAAI,CAAC8B,EAAKC,IAClCH,EAAA,KAAA,OAAY,UAAW,OAAOE,EAAI,QAAU,eAAiB,YAAY,GACvE,SAAA,CAAIA,EAAA,UAAU,KAAGA,EAAI,KAAK,MAAIA,EAAI,QAAU,YAAc,aAAaA,EAAI,KAAK,EAAA,CADzE,EAAAC,CAEV,CACD,CACH,CAAA,CAAA,EACF,EAEC/B,EAAU,UACR4B,OAAA,MAAA,CAAI,UAAU,oDACb,SAAA,OAAC,IAAA,CAAE,UAAU,2BAA2B,SAA6B,gCAAA,EACpEC,EAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,WAAU,QAAS,CAAA,CAAA,CAC1D,CAAA,CAAA,EAEJ,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAEf,CAAA,CAAA,EACF,CAEJ"}