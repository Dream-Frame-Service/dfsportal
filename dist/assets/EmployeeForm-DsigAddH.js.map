{"version":3,"file":"EmployeeForm-DsigAddH.js","sources":["../../src/pages/Employees/EmployeeForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { NumberInput } from '@/components/ui/number-input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { toast } from '@/hooks/use-toast';\nimport { Users, Save, ArrowLeft, Upload } from 'lucide-react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport EnhancedFileUpload from '@/components/EnhancedFileUpload';\nimport { supabase } from '@/lib/supabase';\n\ninterface EmployeeFormData {\n  employee_id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  position: string;\n  station: string;\n  hire_date: string;\n  salary: number;\n  is_active: boolean;\n  date_of_birth: string;\n  current_address: string;\n  mailing_address: string;\n  reference_name: string;\n  id_document_type: string;\n  id_document_file_id: number | null;\n}\n\nconst EmployeeForm: React.FC = () => {\n  const [formData, setFormData] = useState<EmployeeFormData>({\n    employee_id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    position: '',\n    station: '',\n    hire_date: '',\n    salary: 0,\n    is_active: true,\n    date_of_birth: '',\n    current_address: '',\n    mailing_address: '',\n    reference_name: '',\n    id_document_type: '',\n    id_document_file_id: null\n  });\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const stations = ['MOBIL', 'AMOCO ROSEDALE', 'AMOCO BROOKLYN'];\n  const positions = ['Manager', 'Supervisor', 'Cashier', 'Attendant', 'Mechanic', 'Cleaner'];\n  const idDocumentTypes = ['Driving License', 'Passport', 'Green Card', 'SSN', 'Work Permit'];\n\n  useEffect(() => {\n    if (id) {\n      setIsEditing(true);\n      loadEmployee(parseInt(id));\n    } else {\n      // Auto-generate employee ID for new employees\n      generateEmployeeId();\n    }\n  }, [id]);\n\n  const generateEmployeeId = async () => {\n    try {\n      // Get all existing employee IDs that start with 'DFS' to find the next number\n      const { data, error } = await supabase\n        .from('employees')\n        .select('employee_id')\n        .ilike('employee_id', 'DFS%')\n        .order('employee_id', { ascending: false })\n        .limit(1000);\n\n      if (error) {\n        console.error('Error fetching existing employee IDs:', error);\n        throw error;\n      }\n\n      let nextNumber = 1001; // Start from DFS1001\n\n      // If there are existing DFS IDs, find the highest number and increment\n      if (data && data.length > 0) {\n        const existingNumbers = data.\n        map((emp) => {\n          const match = emp.employee_id.match(/^DFS(\\d+)$/);\n          return match ? parseInt(match[1]) : 0;\n        }).\n        filter((num) => num > 0);\n\n        if (existingNumbers.length > 0) {\n          nextNumber = Math.max(...existingNumbers) + 1;\n        }\n      }\n\n      const uniqueId = `DFS${nextNumber}`;\n\n      // Double-check that this ID doesn't exist\n      const { data: checkData, error: checkError } = await supabase\n        .from('employees')\n        .select('employee_id')\n        .eq('employee_id', uniqueId)\n        .limit(1);\n\n      if (checkError) {\n        console.error('Error checking employee ID uniqueness:', checkError);\n        throw checkError;\n      }\n\n      if (checkData && checkData.length > 0) {\n        // If somehow the ID exists, try the next number\n        const fallbackId = `DFS${nextNumber + 1}`;\n        setFormData((prev) => ({ ...prev, employee_id: fallbackId }));\n        console.log('Generated unique employee ID (fallback):', fallbackId);\n      } else {\n        setFormData((prev) => ({ ...prev, employee_id: uniqueId }));\n        console.log('Generated unique employee ID:', uniqueId);\n      }\n    } catch (error) {\n      console.error('Error generating employee ID:', error);\n      toast({\n        title: \"Warning\",\n        description: \"Could not auto-generate employee ID. Please enter manually.\",\n        variant: \"default\"\n      });\n    }\n  };\n\n  const loadEmployee = async (employeeId: number) => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('ID', employeeId)\n        .limit(1)\n        .single();\n\n      if (error) throw error;\n\n      if (data) {\n        const employee = data;\n        setFormData({\n          employee_id: employee.employee_id || '',\n          first_name: employee.first_name || '',\n          last_name: employee.last_name || '',\n          email: employee.email || '',\n          phone: employee.phone || '',\n          position: employee.position || '',\n          station: employee.station || '',\n          hire_date: employee.hire_date ? employee.hire_date.split('T')[0] : '',\n          salary: employee.salary || 0,\n          is_active: employee.is_active !== false,\n          date_of_birth: employee.date_of_birth ? employee.date_of_birth.split('T')[0] : '',\n          current_address: employee.current_address || '',\n          mailing_address: employee.mailing_address || '',\n          reference_name: employee.reference_name || '',\n          id_document_type: employee.id_document_type || '',\n          id_document_file_id: employee.id_document_file_id || null\n        });\n      }\n    } catch (error) {\n      console.error('Error loading employee:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load employee details\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) return null;\n\n    setIsUploading(true);\n    try {\n      // Generate unique filename\n      const fileExt = selectedFile.name.split('.').pop();\n      const fileName = `${Date.now()}_${Math.random().toString(36).substring(2)}.${fileExt}`;\n      \n      // Upload file to Supabase storage\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('documents')\n        .upload(fileName, selectedFile);\n\n      if (uploadError) throw uploadError;\n\n      // Store file reference in database\n      const { data: fileRecord, error: fileError } = await supabase\n        .from('files')\n        .insert({\n          filename: selectedFile.name,\n          storage_path: uploadData.path,\n          file_size: selectedFile.size,\n          mime_type: selectedFile.type,\n          uploaded_at: new Date().toISOString()\n        })\n        .select('id')\n        .single();\n\n      if (fileError) throw fileError;\n\n      return fileRecord.id;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to upload file. Please try again.',\n        variant: 'destructive'\n      });\n      return null;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      let fileId = formData.id_document_file_id;\n\n      if (selectedFile) {\n        fileId = await handleFileUpload();\n        if (fileId === null) {\n          setLoading(false);\n          return;\n        }\n      }\n\n      const dataToSubmit = {\n        ...formData,\n        hire_date: formData.hire_date ? new Date(formData.hire_date).toISOString() : '',\n        date_of_birth: formData.date_of_birth ? new Date(formData.date_of_birth).toISOString() : '',\n        id_document_file_id: fileId,\n        created_by: 1\n      };\n\n      if (isEditing && id) {\n        const { error } = await supabase\n          .from('employees')\n          .update(dataToSubmit)\n          .eq('ID', parseInt(id));\n          \n        if (error) throw error;\n\n        toast({\n          title: \"Success\",\n          description: \"Employee updated successfully\"\n        });\n      } else {\n        const { error } = await supabase\n          .from('employees')\n          .insert(dataToSubmit);\n          \n        if (error) throw error;\n\n        toast({\n          title: \"Success\",\n          description: \"Employee created successfully\"\n        });\n      }\n\n      navigate('/employees');\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      toast({\n        title: \"Error\",\n        description: `Failed to ${isEditing ? 'update' : 'create'} employee`,\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof EmployeeFormData, value: string | number | boolean) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"space-y-6\" data-id=\"r8kna9wld\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n      <Card data-id=\"zz646kdsk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n        <CardHeader data-id=\"ahnf43nwc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n          <div className=\"flex items-center justify-between\" data-id=\"w23g8q7er\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n            <div data-id=\"b6pn8ij6a\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <CardTitle className=\"flex items-center space-x-2\" data-id=\"8vhgprhn4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <Users className=\"w-6 h-6\" data-id=\"elt3t2e5m\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                <span data-id=\"ai0xl2y8b\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">{isEditing ? 'Edit Employee' : 'Add New Employee'}</span>\n              </CardTitle>\n              <CardDescription data-id=\"a38tuknlu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                {isEditing ? 'Update employee information' : 'Add a new employee to your team'}\n              </CardDescription>\n            </div>\n            <Button variant=\"outline\" onClick={() => navigate('/employees')} data-id=\"rre573m7n\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" data-id=\"f6ephe5ks\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n              Back to Employees\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent data-id=\"ynrudii9q\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n          <form onSubmit={handleSubmit} className=\"space-y-8\" data-id=\"c5e7pmh5v\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n            {/* Basic Information Section */}\n            <div data-id=\"bbbgdjsut\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"36fgvly4c\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Basic Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"69il4k7cd\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"qmd2de80x\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"employee_id\" data-id=\"v58x0pcjm\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Employee ID *</Label>\n                  <div className=\"flex items-center space-x-2\" data-id=\"1jybh030t\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <Input\n                      id=\"employee_id\"\n                      value={formData.employee_id}\n                      onChange={(e) => handleInputChange('employee_id', e.target.value)}\n                      placeholder={isEditing ? \"Enter employee ID\" : \"Auto-generated\"}\n                      readOnly={!isEditing}\n                      className={!isEditing ? \"bg-gray-50 cursor-not-allowed\" : \"\"}\n                      required data-id=\"skixncigk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    {!isEditing &&\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={generateEmployeeId}\n                      className=\"shrink-0\" data-id=\"du62433nf\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n\n                        Regenerate\n                      </Button>\n                    }\n                  </div>\n                  {!isEditing &&\n                  <p className=\"text-xs text-gray-500\" data-id=\"45wi9b9zq\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      Auto-generated format: DFS#### (sequential numbering starting from DFS1001)\n                    </p>\n                  }\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"j8ompj6d0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"station\" data-id=\"rj8nlb22f\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Station *</Label>\n                  <Select value={formData.station} onValueChange={(value) => handleInputChange('station', value)} data-id=\"tuc4pob3v\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"ky5zadqo6\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select station\" data-id=\"x675q7mtg\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"8ovqeebx4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {stations.map((station) =>\n                      <SelectItem key={station} value={station} data-id=\"pfem5hb86\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {station}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"kwghb8kne\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"first_name\" data-id=\"68j9thoxe\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">First Name *</Label>\n                  <Input\n                    id=\"first_name\"\n                    value={formData.first_name}\n                    onChange={(e) => handleInputChange('first_name', e.target.value)}\n                    placeholder=\"Enter first name\"\n                    required data-id=\"j1qyfeuh4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"2gwzptzzk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"last_name\" data-id=\"guwnb4807\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Last Name *</Label>\n                  <Input\n                    id=\"last_name\"\n                    value={formData.last_name}\n                    onChange={(e) => handleInputChange('last_name', e.target.value)}\n                    placeholder=\"Enter last name\"\n                    required data-id=\"adfaol8jo\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"q7ip2lzzi\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"date_of_birth\" data-id=\"upd5dju7a\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Date of Birth</Label>\n                  <Input\n                    id=\"date_of_birth\"\n                    type=\"date\"\n                    value={formData.date_of_birth}\n                    onChange={(e) => handleInputChange('date_of_birth', e.target.value)} data-id=\"nmlrb4an5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"ijmqhgd5u\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"email\" data-id=\"nd2q4uzsr\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => handleInputChange('email', e.target.value)}\n                    placeholder=\"Enter email address\" data-id=\"2djuhslx6\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"9pgqm2v48\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"phone\" data-id=\"vwehzuxl7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Phone</Label>\n                  <Input\n                    id=\"phone\"\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    placeholder=\"Enter phone number\" data-id=\"7dmj6s1c9\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"pocqtvaty\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"reference_name\" data-id=\"z6d2kmye9\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Reference Name</Label>\n                  <Input\n                    id=\"reference_name\"\n                    value={formData.reference_name}\n                    onChange={(e) => handleInputChange('reference_name', e.target.value)}\n                    placeholder=\"Enter reference name\" data-id=\"cbhxp0xii\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Address Information Section */}\n            <div data-id=\"edc3yprkp\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"4cz0355pp\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Address Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"0ljustgac\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"1v25ua5rh\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"current_address\" data-id=\"cphf6k4xo\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Current Address</Label>\n                  <Textarea\n                    id=\"current_address\"\n                    value={formData.current_address}\n                    onChange={(e) => handleInputChange('current_address', e.target.value)}\n                    placeholder=\"Enter current address\"\n                    rows={3} data-id=\"ojzsr6ir7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"bjgr0zyzu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"mailing_address\" data-id=\"1tn9qtn6l\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Mailing Address</Label>\n                  <Textarea\n                    id=\"mailing_address\"\n                    value={formData.mailing_address}\n                    onChange={(e) => handleInputChange('mailing_address', e.target.value)}\n                    placeholder=\"Enter mailing address\"\n                    rows={3} data-id=\"55dqh16s5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Employment Information Section */}\n            <div data-id=\"7xmfwzkc7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"baj9axi2j\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Employment Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"ixblw7qg7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"zc5xsmngj\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"position\" data-id=\"r53ce40b3\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Position *</Label>\n                  <Select value={formData.position} onValueChange={(value) => handleInputChange('position', value)} data-id=\"doinlk8rq\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"qgfk0oys8\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select position\" data-id=\"f8m31eo8x\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"1xl4sh693\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {positions.map((position) =>\n                      <SelectItem key={position} value={position} data-id=\"g4f38adc1\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {position}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"h84qguna7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"hire_date\" data-id=\"v89bq90up\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Hire Date</Label>\n                  <Input\n                    id=\"hire_date\"\n                    type=\"date\"\n                    value={formData.hire_date}\n                    onChange={(e) => handleInputChange('hire_date', e.target.value)} data-id=\"fsjhthg1d\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"593pq50x5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"salary\" data-id=\"3wqis3h19\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Salary ($)</Label>\n                  <NumberInput\n                    id=\"salary\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    value={formData.salary}\n                    onChange={(value) => handleInputChange('salary', value)} data-id=\"ywji2syt1\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"z2aljvy13\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"is_active\" data-id=\"yky5kg359\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Active Status</Label>\n                  <div className=\"flex items-center space-x-2\" data-id=\"5uq5njmfl\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <Switch\n                      id=\"is_active\"\n                      checked={formData.is_active}\n                      onCheckedChange={(checked) => handleInputChange('is_active', checked)} data-id=\"0cpnctnxz\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    <span className=\"text-sm text-gray-600\" data-id=\"as0l1zloa\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {formData.is_active ? 'Active' : 'Inactive'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* ID Documentation Section */}\n            <div data-id=\"v27q1gmmc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"dhbbrdfj0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Documentation</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"m0tyj2ys5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"4o92prohv\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"id_document_type\" data-id=\"4z4n5twgi\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Document Type</Label>\n                  <Select value={formData.id_document_type} onValueChange={(value) => handleInputChange('id_document_type', value)} data-id=\"2tlsxqr8c\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"wxmjmwt9z\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select ID document type\" data-id=\"ev6jlx2i7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"kt7ajkfzc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {idDocumentTypes.map((type) =>\n                      <SelectItem key={type} value={type} data-id=\"wxxoxflu4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {type}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"px72txmsf\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label data-id=\"sx4hrlcfu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Document Upload</Label>\n                  <EnhancedFileUpload\n                    onFileSelect={setSelectedFile}\n                    accept=\".pdf,.jpg,.jpeg,.png,image/*\"\n                    label=\"Upload ID Document or Take Photo\"\n                    currentFile={selectedFile?.name}\n                    maxSize={10}\n                    allowCamera={true} data-id=\"08ljgj7qm\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n\n                  {selectedFile &&\n                  <div className=\"p-3 bg-gray-50 rounded-lg\" data-id=\"tqpnbcn7q\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <p className=\"text-sm font-medium\" data-id=\"spuz1p8o8\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Selected file:</p>\n                      <p className=\"text-sm text-gray-600\" data-id=\"wd584ca1t\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">{selectedFile.name}</p>\n                      <p className=\"text-xs text-gray-500 mt-1\" data-id=\"m6fifkmo0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                        {selectedFile.type.includes('image') ? 'Image file selected' : 'Document file selected'}\n                      </p>\n                    </div>\n                  }\n                  <p className=\"text-xs text-gray-500\" data-id=\"y8huoitus\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Supported formats: PDF, JPG, PNG (Max 10MB)</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t\" data-id=\"uuox2lll2\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => navigate('/employees')} data-id=\"holplvnex\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={loading || isUploading} data-id=\"0fn5zuy9h\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                {loading || isUploading ?\n                'Saving...' :\n                <>\n                    <Save className=\"w-4 h-4 mr-2\" data-id=\"tmw7n7q21\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    {isEditing ? 'Update Employee' : 'Create Employee'}\n                  </>\n                }\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>);\n\n};\n\nexport default EmployeeForm;"],"names":["useState","useEffect","jsx","jsxs","Fragment"],"mappings":";;;;;;;;;;;;;;;;AAkCA,MAAM,eAAyB,MAAM;AACnC,QAAM,CAAC,UAAU,WAAW,IAAIA,sBAA2B;AAAA,IACzD,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,OAAO;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,EAAA,CACtB;AACD,QAAM,CAAC,cAAc,eAAe,IAAIA,aAAAA,SAAsB,IAAI;AAClE,QAAM,CAAC,aAAa,cAAc,IAAIA,aAAAA,SAAS,KAAK;AACpD,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,KAAK;AAC5C,QAAM,CAAC,WAAW,YAAY,IAAIA,aAAAA,SAAS,KAAK;AAEhD,QAAM,WAAW,YAAY;AACvB,QAAA,EAAE,GAAG,IAAI,UAAU;AAEzB,QAAM,WAAW,CAAC,SAAS,kBAAkB,gBAAgB;AAC7D,QAAM,YAAY,CAAC,WAAW,cAAc,WAAW,aAAa,YAAY,SAAS;AACzF,QAAM,kBAAkB,CAAC,mBAAmB,YAAY,cAAc,OAAO,aAAa;AAE1FC,eAAAA,UAAU,MAAM;AACd,QAAI,IAAI;AACN,mBAAa,IAAI;AACJ,mBAAA,SAAS,EAAE,CAAC;AAAA,IAAA,OACpB;AAEc,yBAAA;AAAA,IAAA;AAAA,EACrB,GACC,CAAC,EAAE,CAAC;AAEP,QAAM,qBAAqB,YAAY;AACjC,QAAA;AAEI,YAAA,EAAE,MAAM,MAAA,IAAU,MAAM,SAC3B,KAAK,WAAW,EAChB,OAAO,aAAa,EACpB,MAAM,eAAe,MAAM,EAC3B,MAAM,eAAe,EAAE,WAAW,MAAO,CAAA,EACzC,MAAM,GAAI;AAEb,UAAI,OAAO;AACD,gBAAA,MAAM,yCAAyC,KAAK;AACtD,cAAA;AAAA,MAAA;AAGR,UAAI,aAAa;AAGb,UAAA,QAAQ,KAAK,SAAS,GAAG;AAC3B,cAAM,kBAAkB,KACxB,IAAI,CAAC,QAAQ;AACX,gBAAM,QAAQ,IAAI,YAAY,MAAM,YAAY;AAChD,iBAAO,QAAQ,SAAS,MAAM,CAAC,CAAC,IAAI;AAAA,QACrC,CAAA,EACD,OAAO,CAAC,QAAQ,MAAM,CAAC;AAEnB,YAAA,gBAAgB,SAAS,GAAG;AAC9B,uBAAa,KAAK,IAAI,GAAG,eAAe,IAAI;AAAA,QAAA;AAAA,MAC9C;AAGI,YAAA,WAAW,MAAM,UAAU;AAGjC,YAAM,EAAE,MAAM,WAAW,OAAO,eAAe,MAAM,SAClD,KAAK,WAAW,EAChB,OAAO,aAAa,EACpB,GAAG,eAAe,QAAQ,EAC1B,MAAM,CAAC;AAEV,UAAI,YAAY;AACN,gBAAA,MAAM,0CAA0C,UAAU;AAC5D,cAAA;AAAA,MAAA;AAGJ,UAAA,aAAa,UAAU,SAAS,GAAG;AAE/B,cAAA,aAAa,MAAM,aAAa,CAAC;AACvC,oBAAY,CAAC,UAAU,EAAE,GAAG,MAAM,aAAa,aAAa;AACpD,gBAAA,IAAI,4CAA4C,UAAU;AAAA,MAAA,OAC7D;AACL,oBAAY,CAAC,UAAU,EAAE,GAAG,MAAM,aAAa,WAAW;AAClD,gBAAA,IAAI,iCAAiC,QAAQ;AAAA,MAAA;AAAA,aAEhD,OAAO;AACN,cAAA,MAAM,iCAAiC,KAAK;AAC9C,YAAA;AAAA,QACJ,OAAO;AAAA,QACP,aAAa;AAAA,QACb,SAAS;AAAA,MAAA,CACV;AAAA,IAAA;AAAA,EAEL;AAEM,QAAA,eAAe,OAAO,eAAuB;AAC7C,QAAA;AACF,iBAAW,IAAI;AACf,YAAM,EAAE,MAAM,UAAU,MAAM,SAC3B,KAAK,WAAW,EAChB,OAAO,GAAG,EACV,GAAG,MAAM,UAAU,EACnB,MAAM,CAAC,EACP,OAAO;AAEV,UAAI,MAAa,OAAA;AAEjB,UAAI,MAAM;AACR,cAAM,WAAW;AACL,oBAAA;AAAA,UACV,aAAa,SAAS,eAAe;AAAA,UACrC,YAAY,SAAS,cAAc;AAAA,UACnC,WAAW,SAAS,aAAa;AAAA,UACjC,OAAO,SAAS,SAAS;AAAA,UACzB,OAAO,SAAS,SAAS;AAAA,UACzB,UAAU,SAAS,YAAY;AAAA,UAC/B,SAAS,SAAS,WAAW;AAAA,UAC7B,WAAW,SAAS,YAAY,SAAS,UAAU,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,UACnE,QAAQ,SAAS,UAAU;AAAA,UAC3B,WAAW,SAAS,cAAc;AAAA,UAClC,eAAe,SAAS,gBAAgB,SAAS,cAAc,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,UAC/E,iBAAiB,SAAS,mBAAmB;AAAA,UAC7C,iBAAiB,SAAS,mBAAmB;AAAA,UAC7C,gBAAgB,SAAS,kBAAkB;AAAA,UAC3C,kBAAkB,SAAS,oBAAoB;AAAA,UAC/C,qBAAqB,SAAS,uBAAuB;AAAA,QAAA,CACtD;AAAA,MAAA;AAAA,aAEI,OAAO;AACN,cAAA,MAAM,2BAA2B,KAAK;AACxC,YAAA;AAAA,QACJ,OAAO;AAAA,QACP,aAAa;AAAA,QACb,SAAS;AAAA,MAAA,CACV;AAAA,IAAA,UACD;AACA,iBAAW,KAAK;AAAA,IAAA;AAAA,EAEpB;AAEA,QAAM,mBAAmB,YAAY;AAC/B,QAAA,CAAC,aAAqB,QAAA;AAE1B,mBAAe,IAAI;AACf,QAAA;AAEF,YAAM,UAAU,aAAa,KAAK,MAAM,GAAG,EAAE,IAAI;AACjD,YAAM,WAAW,GAAG,KAAK,IAAK,CAAA,IAAI,KAAK,OAAS,EAAA,SAAS,EAAE,EAAE,UAAU,CAAC,CAAC,IAAI,OAAO;AAGpF,YAAM,EAAE,MAAM,YAAY,OAAO,YAAgB,IAAA,MAAM,SAAS,QAC7D,KAAK,WAAW,EAChB,OAAO,UAAU,YAAY;AAEhC,UAAI,YAAmB,OAAA;AAGjB,YAAA,EAAE,MAAM,YAAY,OAAO,UAAA,IAAc,MAAM,SAClD,KAAK,OAAO,EACZ,OAAO;AAAA,QACN,UAAU,aAAa;AAAA,QACvB,cAAc,WAAW;AAAA,QACzB,WAAW,aAAa;AAAA,QACxB,WAAW,aAAa;AAAA,QACxB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACrC,CAAA,EACA,OAAO,IAAI,EACX,OAAO;AAEV,UAAI,UAAiB,OAAA;AAErB,aAAO,WAAW;AAAA,aACX,OAAO;AACN,cAAA,MAAM,yBAAyB,KAAK;AACtC,YAAA;AAAA,QACJ,OAAO;AAAA,QACP,aAAa;AAAA,QACb,SAAS;AAAA,MAAA,CACV;AACM,aAAA;AAAA,IAAA,UACP;AACA,qBAAe,KAAK;AAAA,IAAA;AAAA,EAExB;AAEM,QAAA,eAAe,OAAO,MAAuB;AACjD,MAAE,eAAe;AAEb,QAAA;AACF,iBAAW,IAAI;AAEf,UAAI,SAAS,SAAS;AAEtB,UAAI,cAAc;AAChB,iBAAS,MAAM,iBAAiB;AAChC,YAAI,WAAW,MAAM;AACnB,qBAAW,KAAK;AAChB;AAAA,QAAA;AAAA,MACF;AAGF,YAAM,eAAe;AAAA,QACnB,GAAG;AAAA,QACH,WAAW,SAAS,YAAY,IAAI,KAAK,SAAS,SAAS,EAAE,YAAA,IAAgB;AAAA,QAC7E,eAAe,SAAS,gBAAgB,IAAI,KAAK,SAAS,aAAa,EAAE,YAAA,IAAgB;AAAA,QACzF,qBAAqB;AAAA,QACrB,YAAY;AAAA,MACd;AAEA,UAAI,aAAa,IAAI;AACnB,cAAM,EAAE,MAAU,IAAA,MAAM,SACrB,KAAK,WAAW,EAChB,OAAO,YAAY,EACnB,GAAG,MAAM,SAAS,EAAE,CAAC;AAExB,YAAI,MAAa,OAAA;AAEX,cAAA;AAAA,UACJ,OAAO;AAAA,UACP,aAAa;AAAA,QAAA,CACd;AAAA,MAAA,OACI;AACC,cAAA,EAAE,MAAU,IAAA,MAAM,SACrB,KAAK,WAAW,EAChB,OAAO,YAAY;AAEtB,YAAI,MAAa,OAAA;AAEX,cAAA;AAAA,UACJ,OAAO;AAAA,UACP,aAAa;AAAA,QAAA,CACd;AAAA,MAAA;AAGH,eAAS,YAAY;AAAA,aACd,OAAO;AACN,cAAA,MAAM,0BAA0B,KAAK;AACvC,YAAA;AAAA,QACJ,OAAO;AAAA,QACP,aAAa,aAAa,YAAY,WAAW,QAAQ;AAAA,QACzD,SAAS;AAAA,MAAA,CACV;AAAA,IAAA,UACD;AACA,iBAAW,KAAK;AAAA,IAAA;AAAA,EAEpB;AAEM,QAAA,oBAAoB,CAAC,OAA+B,UAAqC;AACjF,gBAAA,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAA,EAAQ;AAAA,EACrD;AAEA,SACGC,kCAAAA,IAAA,OAAA,EAAI,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAACC,kCAAAA,KAAA,MAAA,EAAK,WAAQ,aAAY,aAAU,wCAClC,UAAA;AAAA,IAAAD,kCAAA,IAAC,YAAW,EAAA,WAAQ,aAAY,aAAU,wCACxC,UAAAC,kCAAAA,KAAC,OAAI,EAAA,WAAU,qCAAoC,WAAQ,aAAY,aAAU,wCAC/E,UAAA;AAAA,MAAAA,kCAAA,KAAC,OAAI,EAAA,WAAQ,aAAY,aAAU,wCACjC,UAAA;AAAA,QAAAA,uCAAC,aAAU,WAAU,+BAA8B,WAAQ,aAAY,aAAU,wCAC/E,UAAA;AAAA,UAAAD,sCAAC,SAAM,WAAU,WAAU,WAAQ,aAAY,aAAU,wCAAuC;AAAA,UAChGA,kCAAAA,IAAC,UAAK,WAAQ,aAAY,aAAU,wCAAwC,UAAA,YAAY,kBAAkB,mBAAmB,CAAA;AAAA,QAAA,GAC/H;AAAA,QACAA,kCAAAA,IAAC,mBAAgB,WAAQ,aAAY,aAAU,wCAC5C,UAAA,YAAY,gCAAgC,kCAC/C,CAAA;AAAA,MAAA,GACF;AAAA,MACCC,kCAAAA,KAAA,QAAA,EAAO,SAAQ,WAAU,SAAS,MAAM,SAAS,YAAY,GAAG,WAAQ,aAAY,aAAU,wCAC7F,UAAA;AAAA,QAAAD,sCAAC,aAAU,WAAU,gBAAe,WAAQ,aAAY,aAAU,wCAAuC;AAAA,QAAE;AAAA,MAAA,EAE7G,CAAA;AAAA,IAAA,EAAA,CACF,EACF,CAAA;AAAA,IACCA,sCAAA,aAAA,EAAY,WAAQ,aAAY,aAAU,wCACzC,UAAAC,uCAAC,QAAK,EAAA,UAAU,cAAc,WAAU,aAAY,WAAQ,aAAY,aAAU,wCAEhF,UAAA;AAAA,MAAAA,kCAAA,KAAC,OAAI,EAAA,WAAQ,aAAY,aAAU,wCACjC,UAAA;AAAA,QAAAD,kCAAAA,IAAC,QAAG,WAAU,4CAA2C,WAAQ,aAAY,aAAU,wCAAuC,UAAiB,oBAAA,CAAA;AAAA,+CAC9I,OAAI,EAAA,WAAU,yCAAwC,WAAQ,aAAY,aAAU,wCACnF,UAAA;AAAA,UAAAC,uCAAC,SAAI,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAD,kCAAAA,IAAC,SAAM,SAAQ,eAAc,WAAQ,aAAY,aAAU,wCAAuC,UAAa,gBAAA,CAAA;AAAA,mDAC9G,OAAI,EAAA,WAAU,+BAA8B,WAAQ,aAAY,aAAU,wCACzE,UAAA;AAAA,cAAAA,kCAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,OAAO,SAAS;AAAA,kBAChB,UAAU,CAAC,MAAM,kBAAkB,eAAe,EAAE,OAAO,KAAK;AAAA,kBAChE,aAAa,YAAY,sBAAsB;AAAA,kBAC/C,UAAU,CAAC;AAAA,kBACX,WAAW,CAAC,YAAY,kCAAkC;AAAA,kBAC1D,UAAQ;AAAA,kBAAC,WAAQ;AAAA,kBAAY,aAAU;AAAA,gBAAA;AAAA,cAAuC;AAAA,cAC/E,CAAC,aACFA,kCAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,WAAU;AAAA,kBAAW,WAAQ;AAAA,kBAAY,aAAU;AAAA,kBAAuC,UAAA;AAAA,gBAAA;AAAA,cAAA;AAAA,YAG1F,GAEJ;AAAA,YACC,CAAC,aACFA,kCAAAA,IAAC,KAAE,EAAA,WAAU,yBAAwB,WAAQ,aAAY,aAAU,wCAAuC,UAExG,8EAAA,CAAA;AAAA,UAAA,GAEJ;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,WAAU,WAAQ,aAAY,aAAU,wCAAuC,UAAS,YAAA,CAAA;AAAA,YACtGC,kCAAA,KAAA,QAAA,EAAO,OAAO,SAAS,SAAS,eAAe,CAAC,UAAU,kBAAkB,WAAW,KAAK,GAAG,WAAQ,aAAY,aAAU,wCAC5H,UAAA;AAAA,cAAAD,kCAAA,IAAC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC3C,UAAAA,kCAAA,IAAC,aAAY,EAAA,aAAY,kBAAiB,WAAQ,aAAY,aAAU,uCAAuC,CAAA,GACjH;AAAA,oDACC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC1C,UAAS,SAAA;AAAA,gBAAI,CAAC,YACfA,kCAAA,IAAC,YAAyB,EAAA,OAAO,SAAS,WAAQ,aAAY,aAAU,wCACnE,UAAA,QAAA,GADY,OAEf;AAAA,cAAA,EAEJ,CAAA;AAAA,YAAA,EACF,CAAA;AAAA,UAAA,GACF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,cAAa,WAAQ,aAAY,aAAU,wCAAuC,UAAY,eAAA,CAAA;AAAA,YAC7GA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,cAAc,EAAE,OAAO,KAAK;AAAA,gBAC/D,aAAY;AAAA,gBACZ,UAAQ;AAAA,gBAAC,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAClF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,aAAY,WAAQ,aAAY,aAAU,wCAAuC,UAAW,cAAA,CAAA;AAAA,YAC3GA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,aAAa,EAAE,OAAO,KAAK;AAAA,gBAC9D,aAAY;AAAA,gBACZ,UAAQ;AAAA,gBAAC,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAClF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,iBAAgB,WAAQ,aAAY,aAAU,wCAAuC,UAAa,gBAAA,CAAA;AAAA,YACjHA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,iBAAiB,EAAE,OAAO,KAAK;AAAA,gBAAG,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAC9I;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,SAAQ,WAAQ,aAAY,aAAU,wCAAuC,UAAK,QAAA,CAAA;AAAA,YACjGA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,SAAS,EAAE,OAAO,KAAK;AAAA,gBAC1D,aAAY;AAAA,gBAAsB,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAC3G;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,SAAQ,WAAQ,aAAY,aAAU,wCAAuC,UAAK,QAAA,CAAA;AAAA,YACjGA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,SAAS,EAAE,OAAO,KAAK;AAAA,gBAC1D,aAAY;AAAA,gBAAqB,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAC1G;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,kBAAiB,WAAQ,aAAY,aAAU,wCAAuC,UAAc,iBAAA,CAAA;AAAA,YACnHA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,kBAAkB,EAAE,OAAO,KAAK;AAAA,gBACnE,aAAY;AAAA,gBAAuB,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,EAC5G,CAAA;AAAA,QAAA,EACF,CAAA;AAAA,MAAA,GACF;AAAA,MAGCC,kCAAA,KAAA,OAAA,EAAI,WAAQ,aAAY,aAAU,wCACjC,UAAA;AAAA,QAAAD,kCAAAA,IAAC,QAAG,WAAU,4CAA2C,WAAQ,aAAY,aAAU,wCAAuC,UAAmB,sBAAA,CAAA;AAAA,+CAChJ,OAAI,EAAA,WAAU,yCAAwC,WAAQ,aAAY,aAAU,wCACnF,UAAA;AAAA,UAAAC,uCAAC,SAAI,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAD,kCAAAA,IAAC,SAAM,SAAQ,mBAAkB,WAAQ,aAAY,aAAU,wCAAuC,UAAe,kBAAA,CAAA;AAAA,YACrHA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,mBAAmB,EAAE,OAAO,KAAK;AAAA,gBACpE,aAAY;AAAA,gBACZ,MAAM;AAAA,gBAAG,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAClF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,mBAAkB,WAAQ,aAAY,aAAU,wCAAuC,UAAe,kBAAA,CAAA;AAAA,YACrHA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,mBAAmB,EAAE,OAAO,KAAK;AAAA,gBACpE,aAAY;AAAA,gBACZ,MAAM;AAAA,gBAAG,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,EAClF,CAAA;AAAA,QAAA,EACF,CAAA;AAAA,MAAA,GACF;AAAA,MAGCC,kCAAA,KAAA,OAAA,EAAI,WAAQ,aAAY,aAAU,wCACjC,UAAA;AAAA,QAAAD,kCAAAA,IAAC,QAAG,WAAU,4CAA2C,WAAQ,aAAY,aAAU,wCAAuC,UAAsB,yBAAA,CAAA;AAAA,+CACnJ,OAAI,EAAA,WAAU,yCAAwC,WAAQ,aAAY,aAAU,wCACnF,UAAA;AAAA,UAAAC,uCAAC,SAAI,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAD,kCAAAA,IAAC,SAAM,SAAQ,YAAW,WAAQ,aAAY,aAAU,wCAAuC,UAAU,aAAA,CAAA;AAAA,YACxGC,kCAAA,KAAA,QAAA,EAAO,OAAO,SAAS,UAAU,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK,GAAG,WAAQ,aAAY,aAAU,wCAC9H,UAAA;AAAA,cAAAD,kCAAA,IAAC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC3C,UAAAA,kCAAA,IAAC,aAAY,EAAA,aAAY,mBAAkB,WAAQ,aAAY,aAAU,uCAAuC,CAAA,GAClH;AAAA,oDACC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC1C,UAAU,UAAA;AAAA,gBAAI,CAAC,aAChBA,kCAAA,IAAC,YAA0B,EAAA,OAAO,UAAU,WAAQ,aAAY,aAAU,wCACrE,UAAA,SAAA,GADY,QAEf;AAAA,cAAA,EAEJ,CAAA;AAAA,YAAA,EACF,CAAA;AAAA,UAAA,GACF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,aAAY,WAAQ,aAAY,aAAU,wCAAuC,UAAS,YAAA,CAAA;AAAA,YACzGA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,kBAAkB,aAAa,EAAE,OAAO,KAAK;AAAA,gBAAG,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAC1I;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,UAAS,WAAQ,aAAY,aAAU,wCAAuC,UAAU,aAAA,CAAA;AAAA,YACvGA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,KAAI;AAAA,gBACJ,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,gBAAG,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UAAuC,GAClI;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAM,SAAQ,aAAY,WAAQ,aAAY,aAAU,wCAAuC,UAAa,gBAAA,CAAA;AAAA,mDAC5G,OAAI,EAAA,WAAU,+BAA8B,WAAQ,aAAY,aAAU,wCACzE,UAAA;AAAA,cAAAA,kCAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,SAAS,SAAS;AAAA,kBAClB,iBAAiB,CAAC,YAAY,kBAAkB,aAAa,OAAO;AAAA,kBAAG,WAAQ;AAAA,kBAAY,aAAU;AAAA,gBAAA;AAAA,cAAuC;AAAA,cAC9IA,kCAAAA,IAAC,QAAK,EAAA,WAAU,yBAAwB,WAAQ,aAAY,aAAU,wCACnE,UAAA,SAAS,YAAY,WAAW,WACnC,CAAA;AAAA,YAAA,EACF,CAAA;AAAA,UAAA,EACF,CAAA;AAAA,QAAA,EACF,CAAA;AAAA,MAAA,GACF;AAAA,MAGCC,kCAAA,KAAA,OAAA,EAAI,WAAQ,aAAY,aAAU,wCACjC,UAAA;AAAA,QAAAD,kCAAAA,IAAC,QAAG,WAAU,4CAA2C,WAAQ,aAAY,aAAU,wCAAuC,UAAgB,mBAAA,CAAA;AAAA,+CAC7I,OAAI,EAAA,WAAU,yCAAwC,WAAQ,aAAY,aAAU,wCACnF,UAAA;AAAA,UAAAC,uCAAC,SAAI,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAD,kCAAAA,IAAC,SAAM,SAAQ,oBAAmB,WAAQ,aAAY,aAAU,wCAAuC,UAAgB,mBAAA,CAAA;AAAA,YACtHC,kCAAA,KAAA,QAAA,EAAO,OAAO,SAAS,kBAAkB,eAAe,CAAC,UAAU,kBAAkB,oBAAoB,KAAK,GAAG,WAAQ,aAAY,aAAU,wCAC9I,UAAA;AAAA,cAAAD,kCAAA,IAAC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC3C,UAAAA,kCAAA,IAAC,aAAY,EAAA,aAAY,2BAA0B,WAAQ,aAAY,aAAU,uCAAuC,CAAA,GAC1H;AAAA,oDACC,eAAc,EAAA,WAAQ,aAAY,aAAU,wCAC1C,UAAgB,gBAAA;AAAA,gBAAI,CAAC,SACtBA,kCAAA,IAAC,YAAsB,EAAA,OAAO,MAAM,WAAQ,aAAY,aAAU,wCAC7D,UAAA,KAAA,GADY,IAEf;AAAA,cAAA,EAEJ,CAAA;AAAA,YAAA,EACF,CAAA;AAAA,UAAA,GACF;AAAA,iDAEC,OAAI,EAAA,WAAU,aAAY,WAAQ,aAAY,aAAU,wCACvD,UAAA;AAAA,YAAAA,sCAAC,OAAM,EAAA,WAAQ,aAAY,aAAU,wCAAuC,UAAkB,sBAAA;AAAA,YAC9FA,kCAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,cAAc;AAAA,gBACd,QAAO;AAAA,gBACP,OAAM;AAAA,gBACN,aAAa,6CAAc;AAAA,gBAC3B,SAAS;AAAA,gBACT,aAAa;AAAA,gBAAM,WAAQ;AAAA,gBAAY,aAAU;AAAA,cAAA;AAAA,YAAuC;AAAA,YAEzF,uDACA,OAAI,EAAA,WAAU,6BAA4B,WAAQ,aAAY,aAAU,wCACrE,UAAA;AAAA,cAAAA,kCAAAA,IAAC,OAAE,WAAU,uBAAsB,WAAQ,aAAY,aAAU,wCAAuC,UAAc,iBAAA,CAAA;AAAA,cACtHA,kCAAAA,IAAC,OAAE,WAAU,yBAAwB,WAAQ,aAAY,aAAU,wCAAwC,UAAA,aAAa,KAAK,CAAA;AAAA,cAC5HA,kCAAA,IAAA,KAAA,EAAE,WAAU,8BAA6B,WAAQ,aAAY,aAAU,wCACrE,UAAA,aAAa,KAAK,SAAS,OAAO,IAAI,wBAAwB,yBACjE,CAAA;AAAA,YAAA,GACF;AAAA,YAEFA,kCAAAA,IAAC,OAAE,WAAU,yBAAwB,WAAQ,aAAY,aAAU,wCAAuC,UAA2C,8CAAA,CAAA;AAAA,UAAA,EACvJ,CAAA;AAAA,QAAA,EACF,CAAA;AAAA,MAAA,GACF;AAAA,6CAEC,OAAI,EAAA,WAAU,yDAAwD,WAAQ,aAAY,aAAU,wCACnG,UAAA;AAAA,QAAAA,kCAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS,MAAM,SAAS,YAAY;AAAA,YAAG,WAAQ;AAAA,YAAY,aAAU;AAAA,YAAuC,UAAA;AAAA,UAAA;AAAA,QAE9G;AAAA,QACCA,sCAAA,QAAA,EAAO,MAAK,UAAS,UAAU,WAAW,aAAa,WAAQ,aAAY,aAAU,wCACnF,UAAW,WAAA,cACZ,cAEIC,kCAAA,KAAAC,4BAAA,EAAA,UAAA;AAAA,UAAAF,sCAAC,QAAK,WAAU,gBAAe,WAAQ,aAAY,aAAU,wCAAuC;AAAA,UACnG,YAAY,oBAAoB;AAAA,QAAA,EAAA,CACnC,EAEJ,CAAA;AAAA,MAAA,EACF,CAAA;AAAA,IAAA,EAAA,CACF,EACF,CAAA;AAAA,EAAA,EAAA,CACF,EACF,CAAA;AAEJ;"}