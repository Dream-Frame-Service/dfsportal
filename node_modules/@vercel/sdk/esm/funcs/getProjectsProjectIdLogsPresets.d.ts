import { VercelCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { GetProjectsProjectIdLogsPresetsRequest } from "../models/getprojectsprojectidlogspresetsop.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/httpclienterrors.js";
import { ResponseValidationError } from "../models/responsevalidationerror.js";
import { SDKValidationError } from "../models/sdkvalidationerror.js";
import { Team } from "../models/team.js";
import { VercelBadRequestError } from "../models/vercelbadrequesterror.js";
import { VercelError } from "../models/vercelerror.js";
import { VercelForbiddenError } from "../models/vercelforbiddenerror.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
export declare function getProjectsProjectIdLogsPresets(client: VercelCore, request: GetProjectsProjectIdLogsPresetsRequest, options?: RequestOptions): APIPromise<Result<Array<Team>, VercelBadRequestError | VercelForbiddenError | VercelError | ResponseValidationError | ConnectionError | RequestAbortedError | RequestTimeoutError | InvalidRequestError | UnexpectedClientError | SDKValidationError>>;
//# sourceMappingURL=getProjectsProjectIdLogsPresets.d.ts.map