{"version":3,"file":"textarea-BEpdesu_.js","sources":["../../node_modules/lucide-react/dist/esm/icons/camera.js","../../node_modules/lucide-react/dist/esm/icons/upload.js","../../src/hooks/use-smart-zero.ts","../../src/components/ui/number-input.tsx","../../src/components/ui/textarea.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Camera = createLucideIcon(\"Camera\", [\n  [\n    \"path\",\n    {\n      d: \"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\",\n      key: \"1tc9qg\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"13\", r: \"3\", key: \"1vg3eu\" }]\n]);\n\nexport { Camera as default };\n//# sourceMappingURL=camera.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Upload = createLucideIcon(\"Upload\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"17 8 12 3 7 8\", key: \"t8dd8p\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"3\", y2: \"15\", key: \"widbto\" }]\n]);\n\nexport { Upload as default };\n//# sourceMappingURL=upload.js.map\n","import { useState, useCallback } from 'react';\n\nexport const useSmartZero = (initialValue: number | string = 0) => {\n  const [value, setValue] = useState<string>(String(initialValue || 0));\n  const [isFocused, setIsFocused] = useState(false);\n  const [hasUserInput, setHasUserInput] = useState(false);\n\n  const handleFocus = useCallback(() => {\n    setIsFocused(true);\n    // If the value is \"0\" and user hasn't manually entered it, clear it\n    if (value === \"0\" && !hasUserInput) {\n      setValue(\"\");\n    }\n  }, [value, hasUserInput]);\n\n  const handleBlur = useCallback(() => {\n    setIsFocused(false);\n    // If empty or just whitespace, default to \"0\"\n    if (!value.trim()) {\n      setValue(\"0\");\n      setHasUserInput(false);\n    }\n  }, [value]);\n\n  const handleChange = useCallback((newValue: string) => {\n    setValue(newValue);\n    setHasUserInput(true);\n  }, []);\n\n  const getNumericValue = useCallback(() => {\n    const numValue = parseFloat(value) || 0;\n    return numValue;\n  }, [value]);\n\n  const resetValue = useCallback((newValue: number | string = 0) => {\n    setValue(String(newValue || 0));\n    setHasUserInput(newValue !== 0);\n  }, []);\n\n  return {\n    value,\n    isFocused,\n    handleFocus,\n    handleBlur,\n    handleChange,\n    getNumericValue,\n    resetValue,\n    displayValue: isFocused && value === \"\" ? \"\" : value\n  };\n};\n","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { useSmartZero } from \"@/hooks/use-smart-zero\"\n\nexport interface NumberInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value' | 'onChange'> {\n  value?: number | string\n  onChange?: (value: number) => void\n  onValueChange?: (value: string) => void\n}\n\nconst NumberInput = React.forwardRef<HTMLInputElement, NumberInputProps>(\n  ({ className, type = \"number\", value: propValue, onChange, onValueChange, ...props }, ref) => {\n    const smartZero = useSmartZero(propValue);\n\n    // Update internal value when prop changes\n    React.useEffect(() => {\n      if (propValue !== undefined && propValue !== smartZero.getNumericValue()) {\n        smartZero.resetValue(propValue);\n      }\n    }, [propValue]);\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = e.target.value;\n      smartZero.handleChange(newValue);\n      \n      // Call onChange with numeric value\n      if (onChange) {\n        const numericValue = parseFloat(newValue) || 0;\n        onChange(numericValue);\n      }\n      \n      // Call onValueChange with string value for more control\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        value={smartZero.displayValue}\n        onChange={handleInputChange}\n        onFocus={smartZero.handleFocus}\n        onBlur={smartZero.handleBlur}\n        {...props}\n      />\n    )\n  }\n)\nNumberInput.displayName = \"NumberInput\"\n\nexport { NumberInput }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":["useState","useCallback","React.forwardRef","React.useEffect","jsx"],"mappings":"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","x_google_ignoreList":[0,1]}