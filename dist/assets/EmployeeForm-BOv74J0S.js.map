{"version":3,"file":"EmployeeForm-BOv74J0S.js","sources":["../../src/pages/Employees/EmployeeForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { NumberInput } from '@/components/ui/number-input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { toast } from '@/hooks/use-toast';\nimport { Users, Save, ArrowLeft, Upload } from 'lucide-react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport EnhancedFileUpload from '@/components/EnhancedFileUpload';\nimport { supabase } from '@/lib/supabase';\n\ninterface EmployeeFormData {\n  employee_id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  position: string;\n  station: string;\n  hire_date: string;\n  salary: number;\n  is_active: boolean;\n  date_of_birth: string;\n  current_address: string;\n  mailing_address: string;\n  reference_name: string;\n  id_document_type: string;\n  id_document_file_id: number | null;\n}\n\nconst EmployeeForm: React.FC = () => {\n  const [formData, setFormData] = useState<EmployeeFormData>({\n    employee_id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    position: '',\n    station: '',\n    hire_date: '',\n    salary: 0,\n    is_active: true,\n    date_of_birth: '',\n    current_address: '',\n    mailing_address: '',\n    reference_name: '',\n    id_document_type: '',\n    id_document_file_id: null\n  });\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const stations = ['MOBIL', 'AMOCO ROSEDALE', 'AMOCO BROOKLYN'];\n  const positions = ['Manager', 'Supervisor', 'Cashier', 'Attendant', 'Mechanic', 'Cleaner'];\n  const idDocumentTypes = ['Driving License', 'Passport', 'Green Card', 'SSN', 'Work Permit'];\n\n  useEffect(() => {\n    if (id) {\n      setIsEditing(true);\n      loadEmployee(parseInt(id));\n    } else {\n      // Auto-generate employee ID for new employees\n      generateEmployeeId();\n    }\n  }, [id]);\n\n  const generateEmployeeId = async () => {\n    try {\n      // Get all existing employee IDs that start with 'DFS' to find the next number\n      const { data, error } = await supabase\n        .from('employees')\n        .select('employee_id')\n        .ilike('employee_id', 'DFS%')\n        .order('employee_id', { ascending: false })\n        .limit(1000);\n\n      if (error) {\n        console.error('Error fetching existing employee IDs:', error);\n        throw error;\n      }\n\n      let nextNumber = 1001; // Start from DFS1001\n\n      // If there are existing DFS IDs, find the highest number and increment\n      if (data && data.length > 0) {\n        const existingNumbers = data.\n        map((emp) => {\n          const match = emp.employee_id.match(/^DFS(\\d+)$/);\n          return match ? parseInt(match[1]) : 0;\n        }).\n        filter((num) => num > 0);\n\n        if (existingNumbers.length > 0) {\n          nextNumber = Math.max(...existingNumbers) + 1;\n        }\n      }\n\n      const uniqueId = `DFS${nextNumber}`;\n\n      // Double-check that this ID doesn't exist\n      const { data: checkData, error: checkError } = await supabase\n        .from('employees')\n        .select('employee_id')\n        .eq('employee_id', uniqueId)\n        .limit(1);\n\n      if (checkError) {\n        console.error('Error checking employee ID uniqueness:', checkError);\n        throw checkError;\n      }\n\n      if (checkData && checkData.length > 0) {\n        // If somehow the ID exists, try the next number\n        const fallbackId = `DFS${nextNumber + 1}`;\n        setFormData((prev) => ({ ...prev, employee_id: fallbackId }));\n        console.log('Generated unique employee ID (fallback):', fallbackId);\n      } else {\n        setFormData((prev) => ({ ...prev, employee_id: uniqueId }));\n        console.log('Generated unique employee ID:', uniqueId);\n      }\n    } catch (error) {\n      console.error('Error generating employee ID:', error);\n      toast({\n        title: \"Warning\",\n        description: \"Could not auto-generate employee ID. Please enter manually.\",\n        variant: \"default\"\n      });\n    }\n  };\n\n  const loadEmployee = async (employeeId: number) => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('ID', employeeId)\n        .limit(1)\n        .single();\n\n      if (error) throw error;\n\n      if (data) {\n        const employee = data;\n        setFormData({\n          employee_id: employee.employee_id || '',\n          first_name: employee.first_name || '',\n          last_name: employee.last_name || '',\n          email: employee.email || '',\n          phone: employee.phone || '',\n          position: employee.position || '',\n          station: employee.station || '',\n          hire_date: employee.hire_date ? employee.hire_date.split('T')[0] : '',\n          salary: employee.salary || 0,\n          is_active: employee.is_active !== false,\n          date_of_birth: employee.date_of_birth ? employee.date_of_birth.split('T')[0] : '',\n          current_address: employee.current_address || '',\n          mailing_address: employee.mailing_address || '',\n          reference_name: employee.reference_name || '',\n          id_document_type: employee.id_document_type || '',\n          id_document_file_id: employee.id_document_file_id || null\n        });\n      }\n    } catch (error) {\n      console.error('Error loading employee:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load employee details\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) return null;\n\n    setIsUploading(true);\n    try {\n      // Generate unique filename\n      const fileExt = selectedFile.name.split('.').pop();\n      const fileName = `${Date.now()}_${Math.random().toString(36).substring(2)}.${fileExt}`;\n      \n      // Upload file to Supabase storage\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('documents')\n        .upload(fileName, selectedFile);\n\n      if (uploadError) throw uploadError;\n\n      // Store file reference in database\n      const { data: fileRecord, error: fileError } = await supabase\n        .from('files')\n        .insert({\n          filename: selectedFile.name,\n          storage_path: uploadData.path,\n          file_size: selectedFile.size,\n          mime_type: selectedFile.type,\n          uploaded_at: new Date().toISOString()\n        })\n        .select('id')\n        .single();\n\n      if (fileError) throw fileError;\n\n      return fileRecord.id;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to upload file. Please try again.',\n        variant: 'destructive'\n      });\n      return null;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      let fileId = formData.id_document_file_id;\n\n      if (selectedFile) {\n        fileId = await handleFileUpload();\n        if (fileId === null) {\n          setLoading(false);\n          return;\n        }\n      }\n\n      const dataToSubmit = {\n        ...formData,\n        hire_date: formData.hire_date ? new Date(formData.hire_date).toISOString() : '',\n        date_of_birth: formData.date_of_birth ? new Date(formData.date_of_birth).toISOString() : '',\n        id_document_file_id: fileId,\n        created_by: 1\n      };\n\n      if (isEditing && id) {\n        const { error } = await supabase\n          .from('employees')\n          .update(dataToSubmit)\n          .eq('ID', parseInt(id));\n          \n        if (error) throw error;\n\n        toast({\n          title: \"Success\",\n          description: \"Employee updated successfully\"\n        });\n      } else {\n        const { error } = await supabase\n          .from('employees')\n          .insert(dataToSubmit);\n          \n        if (error) throw error;\n\n        toast({\n          title: \"Success\",\n          description: \"Employee created successfully\"\n        });\n      }\n\n      navigate('/employees');\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      toast({\n        title: \"Error\",\n        description: `Failed to ${isEditing ? 'update' : 'create'} employee`,\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof EmployeeFormData, value: string | number | boolean) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"space-y-6\" data-id=\"r8kna9wld\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n      <Card data-id=\"zz646kdsk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n        <CardHeader data-id=\"ahnf43nwc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n          <div className=\"flex items-center justify-between\" data-id=\"w23g8q7er\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n            <div data-id=\"b6pn8ij6a\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <CardTitle className=\"flex items-center space-x-2\" data-id=\"8vhgprhn4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <Users className=\"w-6 h-6\" data-id=\"elt3t2e5m\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                <span data-id=\"ai0xl2y8b\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">{isEditing ? 'Edit Employee' : 'Add New Employee'}</span>\n              </CardTitle>\n              <CardDescription data-id=\"a38tuknlu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                {isEditing ? 'Update employee information' : 'Add a new employee to your team'}\n              </CardDescription>\n            </div>\n            <Button variant=\"outline\" onClick={() => navigate('/employees')} data-id=\"rre573m7n\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" data-id=\"f6ephe5ks\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n              Back to Employees\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent data-id=\"ynrudii9q\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n          <form onSubmit={handleSubmit} className=\"space-y-8\" data-id=\"c5e7pmh5v\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n            {/* Basic Information Section */}\n            <div data-id=\"bbbgdjsut\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"36fgvly4c\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Basic Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"69il4k7cd\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"qmd2de80x\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"employee_id\" data-id=\"v58x0pcjm\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Employee ID *</Label>\n                  <div className=\"flex items-center space-x-2\" data-id=\"1jybh030t\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <Input\n                      id=\"employee_id\"\n                      value={formData.employee_id}\n                      onChange={(e) => handleInputChange('employee_id', e.target.value)}\n                      placeholder={isEditing ? \"Enter employee ID\" : \"Auto-generated\"}\n                      readOnly={!isEditing}\n                      className={!isEditing ? \"bg-gray-50 cursor-not-allowed\" : \"\"}\n                      required data-id=\"skixncigk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    {!isEditing &&\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={generateEmployeeId}\n                      className=\"shrink-0\" data-id=\"du62433nf\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n\n                        Regenerate\n                      </Button>\n                    }\n                  </div>\n                  {!isEditing &&\n                  <p className=\"text-xs text-gray-500\" data-id=\"45wi9b9zq\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      Auto-generated format: DFS#### (sequential numbering starting from DFS1001)\n                    </p>\n                  }\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"j8ompj6d0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"station\" data-id=\"rj8nlb22f\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Station *</Label>\n                  <Select value={formData.station} onValueChange={(value) => handleInputChange('station', value)} data-id=\"tuc4pob3v\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"ky5zadqo6\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select station\" data-id=\"x675q7mtg\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"8ovqeebx4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {stations.map((station) =>\n                      <SelectItem key={station} value={station} data-id=\"pfem5hb86\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {station}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"kwghb8kne\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"first_name\" data-id=\"68j9thoxe\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">First Name *</Label>\n                  <Input\n                    id=\"first_name\"\n                    value={formData.first_name}\n                    onChange={(e) => handleInputChange('first_name', e.target.value)}\n                    placeholder=\"Enter first name\"\n                    required data-id=\"j1qyfeuh4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"2gwzptzzk\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"last_name\" data-id=\"guwnb4807\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Last Name *</Label>\n                  <Input\n                    id=\"last_name\"\n                    value={formData.last_name}\n                    onChange={(e) => handleInputChange('last_name', e.target.value)}\n                    placeholder=\"Enter last name\"\n                    required data-id=\"adfaol8jo\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"q7ip2lzzi\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"date_of_birth\" data-id=\"upd5dju7a\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Date of Birth</Label>\n                  <Input\n                    id=\"date_of_birth\"\n                    type=\"date\"\n                    value={formData.date_of_birth}\n                    onChange={(e) => handleInputChange('date_of_birth', e.target.value)} data-id=\"nmlrb4an5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"ijmqhgd5u\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"email\" data-id=\"nd2q4uzsr\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => handleInputChange('email', e.target.value)}\n                    placeholder=\"Enter email address\" data-id=\"2djuhslx6\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"9pgqm2v48\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"phone\" data-id=\"vwehzuxl7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Phone</Label>\n                  <Input\n                    id=\"phone\"\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    placeholder=\"Enter phone number\" data-id=\"7dmj6s1c9\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"pocqtvaty\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"reference_name\" data-id=\"z6d2kmye9\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Reference Name</Label>\n                  <Input\n                    id=\"reference_name\"\n                    value={formData.reference_name}\n                    onChange={(e) => handleInputChange('reference_name', e.target.value)}\n                    placeholder=\"Enter reference name\" data-id=\"cbhxp0xii\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Address Information Section */}\n            <div data-id=\"edc3yprkp\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"4cz0355pp\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Address Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"0ljustgac\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"1v25ua5rh\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"current_address\" data-id=\"cphf6k4xo\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Current Address</Label>\n                  <Textarea\n                    id=\"current_address\"\n                    value={formData.current_address}\n                    onChange={(e) => handleInputChange('current_address', e.target.value)}\n                    placeholder=\"Enter current address\"\n                    rows={3} data-id=\"ojzsr6ir7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"bjgr0zyzu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"mailing_address\" data-id=\"1tn9qtn6l\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Mailing Address</Label>\n                  <Textarea\n                    id=\"mailing_address\"\n                    value={formData.mailing_address}\n                    onChange={(e) => handleInputChange('mailing_address', e.target.value)}\n                    placeholder=\"Enter mailing address\"\n                    rows={3} data-id=\"55dqh16s5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Employment Information Section */}\n            <div data-id=\"7xmfwzkc7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"baj9axi2j\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Employment Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"ixblw7qg7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"zc5xsmngj\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"position\" data-id=\"r53ce40b3\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Position *</Label>\n                  <Select value={formData.position} onValueChange={(value) => handleInputChange('position', value)} data-id=\"doinlk8rq\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"qgfk0oys8\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select position\" data-id=\"f8m31eo8x\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"1xl4sh693\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {positions.map((position) =>\n                      <SelectItem key={position} value={position} data-id=\"g4f38adc1\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {position}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"h84qguna7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"hire_date\" data-id=\"v89bq90up\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Hire Date</Label>\n                  <Input\n                    id=\"hire_date\"\n                    type=\"date\"\n                    value={formData.hire_date}\n                    onChange={(e) => handleInputChange('hire_date', e.target.value)} data-id=\"fsjhthg1d\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"593pq50x5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"salary\" data-id=\"3wqis3h19\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Salary ($)</Label>\n                  <NumberInput\n                    id=\"salary\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    value={formData.salary}\n                    onChange={(value) => handleInputChange('salary', value)} data-id=\"ywji2syt1\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"z2aljvy13\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"is_active\" data-id=\"yky5kg359\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Active Status</Label>\n                  <div className=\"flex items-center space-x-2\" data-id=\"5uq5njmfl\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <Switch\n                      id=\"is_active\"\n                      checked={formData.is_active}\n                      onCheckedChange={(checked) => handleInputChange('is_active', checked)} data-id=\"0cpnctnxz\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    <span className=\"text-sm text-gray-600\" data-id=\"as0l1zloa\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {formData.is_active ? 'Active' : 'Inactive'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* ID Documentation Section */}\n            <div data-id=\"v27q1gmmc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\" data-id=\"dhbbrdfj0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Documentation</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" data-id=\"m0tyj2ys5\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                <div className=\"space-y-2\" data-id=\"4o92prohv\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label htmlFor=\"id_document_type\" data-id=\"4z4n5twgi\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Document Type</Label>\n                  <Select value={formData.id_document_type} onValueChange={(value) => handleInputChange('id_document_type', value)} data-id=\"2tlsxqr8c\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                    <SelectTrigger data-id=\"wxmjmwt9z\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <SelectValue placeholder=\"Select ID document type\" data-id=\"ev6jlx2i7\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    </SelectTrigger>\n                    <SelectContent data-id=\"kt7ajkfzc\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      {idDocumentTypes.map((type) =>\n                      <SelectItem key={type} value={type} data-id=\"wxxoxflu4\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                          {type}\n                        </SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\" data-id=\"px72txmsf\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                  <Label data-id=\"sx4hrlcfu\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">ID Document Upload</Label>\n                  <EnhancedFileUpload\n                    onFileSelect={setSelectedFile}\n                    accept=\".pdf,.jpg,.jpeg,.png,image/*\"\n                    label=\"Upload ID Document or Take Photo\"\n                    currentFile={selectedFile?.name}\n                    maxSize={10}\n                    allowCamera={true} data-id=\"08ljgj7qm\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n\n                  {selectedFile &&\n                  <div className=\"p-3 bg-gray-50 rounded-lg\" data-id=\"tqpnbcn7q\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                      <p className=\"text-sm font-medium\" data-id=\"spuz1p8o8\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Selected file:</p>\n                      <p className=\"text-sm text-gray-600\" data-id=\"wd584ca1t\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">{selectedFile.name}</p>\n                      <p className=\"text-xs text-gray-500 mt-1\" data-id=\"m6fifkmo0\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                        {selectedFile.type.includes('image') ? 'Image file selected' : 'Document file selected'}\n                      </p>\n                    </div>\n                  }\n                  <p className=\"text-xs text-gray-500\" data-id=\"y8huoitus\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">Supported formats: PDF, JPG, PNG (Max 10MB)</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t\" data-id=\"uuox2lll2\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => navigate('/employees')} data-id=\"holplvnex\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={loading || isUploading} data-id=\"0fn5zuy9h\" data-path=\"src/pages/Employees/EmployeeForm.tsx\">\n                {loading || isUploading ?\n                'Saving...' :\n                <>\n                    <Save className=\"w-4 h-4 mr-2\" data-id=\"tmw7n7q21\" data-path=\"src/pages/Employees/EmployeeForm.tsx\" />\n                    {isEditing ? 'Update Employee' : 'Create Employee'}\n                  </>\n                }\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>);\n\n};\n\nexport default EmployeeForm;\n"],"names":["EmployeeForm","formData","setFormData","useState","selectedFile","setSelectedFile","isUploading","setIsUploading","loading","setLoading","isEditing","setIsEditing","navigate","useNavigate","id","useParams","stations","positions","idDocumentTypes","useEffect","loadEmployee","generateEmployeeId","data","error","supabase","nextNumber","existingNumbers","emp","match","num","uniqueId","checkData","checkError","fallbackId","prev","toast","employeeId","employee","handleFileUpload","fileExt","fileName","uploadData","uploadError","fileRecord","fileError","handleSubmit","e","fileId","dataToSubmit","handleInputChange","field","value","jsx","jsxs","Card","CardHeader","CardTitle","Users","CardDescription","Button","ArrowLeft","CardContent","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","station","SelectItem","Textarea","position","NumberInput","Switch","checked","type","EnhancedFileUpload","Fragment","Save"],"mappings":"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"}