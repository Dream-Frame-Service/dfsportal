{"version":3,"file":"EnhancedFileUpload-xuzDVd9Q.js","sources":["../../node_modules/lucide-react/dist/esm/icons/image.js","../../src/utils/imageCompression.ts","../../src/components/EnhancedFileUpload.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Image = createLucideIcon(\"Image\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n]);\n\nexport { Image as default };\n//# sourceMappingURL=image.js.map\n","/**\n * Image compression utility for handling large image files\n * Automatically compresses images over 1MB while maintaining quality\n */\n\nexport interface CompressionOptions {\n  maxSizeMB: number;\n  maxWidthOrHeight?: number;\n  useWebWorker?: boolean;\n  quality?: number;\n  initialQuality?: number;\n  alwaysKeepResolution?: boolean;\n}\n\nexport interface CompressionResult {\n  file: File;\n  originalSize: number;\n  compressedSize: number;\n  compressionRatio: number;\n  wasCompressed: boolean;\n}\n\n/**\n * Check if a file is an image\n */\nexport const isImageFile = (file: File): boolean => {\n  return file.type.startsWith('image/');\n};\n\n/**\n * Convert file size to human readable format\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))  } ${  sizes[i]}`;\n};\n\n/**\n * Create a canvas element for image manipulation\n */\nconst createCanvas = (width: number, height: number): HTMLCanvasElement => {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\n/**\n * Calculate new dimensions while maintaining aspect ratio\n */\nconst calculateDimensions = (\noriginalWidth: number,\noriginalHeight: number,\nmaxWidthOrHeight?: number)\n: {width: number;height: number;} => {\n  if (!maxWidthOrHeight || originalWidth <= maxWidthOrHeight && originalHeight <= maxWidthOrHeight) {\n    return { width: originalWidth, height: originalHeight };\n  }\n\n  const aspectRatio = originalWidth / originalHeight;\n\n  if (originalWidth > originalHeight) {\n    return {\n      width: maxWidthOrHeight,\n      height: Math.round(maxWidthOrHeight / aspectRatio)\n    };\n  } else {\n    return {\n      width: Math.round(maxWidthOrHeight * aspectRatio),\n      height: maxWidthOrHeight\n    };\n  }\n};\n\n/**\n * Load image from file\n */\nconst loadImage = (file: File): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = () => reject(new Error('Failed to load image'));\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Compress image using canvas\n */\nconst compressImageWithCanvas = (\nimg: HTMLImageElement,\noptions: CompressionOptions)\n: Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    const { width, height } = calculateDimensions(\n      img.naturalWidth,\n      img.naturalHeight,\n      options.maxWidthOrHeight\n    );\n\n    const canvas = createCanvas(width, height);\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx) {\n      reject(new Error('Could not get canvas context'));\n      return;\n    }\n\n    // Set canvas drawing properties for better quality\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    // Draw the image\n    ctx.drawImage(img, 0, 0, width, height);\n\n    // Convert to blob with quality\n    canvas.toBlob(\n      (blob) => {\n        if (blob) {\n          resolve(blob);\n        } else {\n          reject(new Error('Failed to compress image'));\n        }\n      },\n      'image/jpeg',\n      options.quality || 0.8\n    );\n  });\n};\n\n/**\n * Iteratively compress image until target size is reached\n */\nconst compressToTargetSize = async (\nimg: HTMLImageElement,\ntargetSizeMB: number,\noptions: CompressionOptions)\n: Promise<Blob> => {\n  let quality = options.initialQuality || 0.8;\n  let blob: Blob;\n  let attempts = 0;\n  const maxAttempts = 10;\n  const targetSizeBytes = targetSizeMB * 1024 * 1024;\n\n  do {\n    blob = await compressImageWithCanvas(img, { ...options, quality });\n\n    if (blob.size <= targetSizeBytes || attempts >= maxAttempts) {\n      break;\n    }\n\n    // Reduce quality for next attempt\n    quality = Math.max(0.1, quality - 0.1);\n    attempts++;\n  } while (attempts < maxAttempts);\n\n  return blob;\n};\n\n/**\n * Get compression settings from localStorage\n */\nconst getCompressionSettings = (): CompressionOptions => {\n  try {\n    const saved = localStorage.getItem('imageCompressionSettings');\n    if (saved) {\n      const settings = JSON.parse(saved);\n      return {\n        maxSizeMB: settings.maxSizeMB || 1,\n        maxWidthOrHeight: settings.maxResolution || 1920,\n        quality: settings.quality || 0.8,\n        initialQuality: settings.quality || 0.8,\n        useWebWorker: false,\n        alwaysKeepResolution: false\n      };\n    }\n  } catch (error) {\n    console.error('Failed to load compression settings:', error);\n  }\n\n  // Return defaults if no settings found\n  return {\n    maxSizeMB: 1,\n    maxWidthOrHeight: 1920,\n    quality: 0.8,\n    initialQuality: 0.8,\n    useWebWorker: false,\n    alwaysKeepResolution: false\n  };\n};\n\n/**\n * Check if compression is enabled\n */\nconst isCompressionEnabled = (): boolean => {\n  try {\n    const saved = localStorage.getItem('imageCompressionSettings');\n    if (saved) {\n      const settings = JSON.parse(saved);\n      return settings.enabled !== false; // Default to true\n    }\n  } catch (error) {\n    console.error('Failed to load compression settings:', error);\n  }\n  return true; // Default to enabled\n};\n\n/**\n * Main compression function\n */\nexport const compressImage = async (\nfile: File,\noptions?: Partial<CompressionOptions>)\n: Promise<CompressionResult> => {\n  // Get settings from localStorage or use provided options\n  const savedSettings = getCompressionSettings();\n  const finalOptions = { ...savedSettings, ...options };\n\n  const originalSize = file.size;\n  const targetSizeMB = finalOptions.maxSizeMB;\n  const targetSizeBytes = targetSizeMB * 1024 * 1024;\n\n  // Check if compression is enabled\n  if (!isCompressionEnabled()) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  // Check if file is an image\n  if (!isImageFile(file)) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  // Check if compression is needed\n  const autoCompress = (() => {\n    try {\n      const saved = localStorage.getItem('imageCompressionSettings');\n      return saved ? JSON.parse(saved).autoCompress : false;\n    } catch {\n      return false;\n    }\n  })();\n\n  if (!autoCompress && originalSize <= targetSizeBytes) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  try {\n    // Load the image\n    const img = await loadImage(file);\n\n    // Compress the image\n    const compressedBlob = await compressToTargetSize(img, targetSizeMB, finalOptions);\n\n    // Create new file from compressed blob\n    const compressedFile = new File(\n      [compressedBlob],\n      file.name.replace(/\\.[^/.]+$/, '.jpg'), // Change extension to jpg\n      {\n        type: 'image/jpeg',\n        lastModified: Date.now()\n      }\n    );\n\n    const compressedSize = compressedFile.size;\n    const compressionRatio = originalSize / compressedSize;\n\n    // Clean up object URL\n    URL.revokeObjectURL(img.src);\n\n    return {\n      file: compressedFile,\n      originalSize,\n      compressedSize,\n      compressionRatio,\n      wasCompressed: true\n    };\n  } catch (error) {\n    console.error('Image compression failed:', error);\n\n    // Return original file if compression fails\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n};\n\n/**\n * Batch compress multiple images\n */\nexport const compressImages = async (\nfiles: File[],\noptions: CompressionOptions = { maxSizeMB: 1 })\n: Promise<CompressionResult[]> => {\n  const results: CompressionResult[] = [];\n\n  for (const file of files) {\n    const result = await compressImage(file, options);\n    results.push(result);\n  }\n\n  return results;\n};\n\n/**\n * Get compression statistics\n */\nexport const getCompressionStats = (results: CompressionResult[]) => {\n  const totalOriginalSize = results.reduce((sum, result) => sum + result.originalSize, 0);\n  const totalCompressedSize = results.reduce((sum, result) => sum + result.compressedSize, 0);\n  const compressedCount = results.filter((result) => result.wasCompressed).length;\n\n  return {\n    totalOriginalSize,\n    totalCompressedSize,\n    totalSavings: totalOriginalSize - totalCompressedSize,\n    averageCompressionRatio: totalOriginalSize / totalCompressedSize,\n    compressedCount,\n    totalCount: results.length\n  };\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Upload, Camera, FileText, Image, X, RotateCcw, Check, Loader2, Zap } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { compressImage, formatFileSize, isImageFile, type CompressionResult } from '@/utils/imageCompression';\n\ninterface EnhancedFileUploadProps {\n  onFileSelect: (file: File) => void;\n  accept?: string;\n  label?: string;\n  currentFile?: string;\n  maxSize?: number; // in MB\n  className?: string;\n  disabled?: boolean;\n  allowCamera?: boolean; // Option to disable camera for non-image uploads\n}\n\nconst EnhancedFileUpload: React.FC<EnhancedFileUploadProps> = ({\n  onFileSelect,\n  accept = \"image/*\",\n  label = \"Upload File\",\n  currentFile,\n  maxSize = 10,\n  className = \"\",\n  disabled = false,\n  allowCamera = true\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [showCamera, setShowCamera] = useState(false);\n  const [cameraStream, setCameraStream] = useState<MediaStream | null>(null);\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n  const [isCameraLoading, setIsCameraLoading] = useState(false);\n  const [isCompressing, setIsCompressing] = useState(false);\n  const [compressionResult, setCompressionResult] = useState<CompressionResult | null>(null);\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { toast } = useToast();\n\n  // Check if the accept type includes images\n  const isImageUpload = accept.includes('image');\n  const shouldShowCamera = allowCamera && isImageUpload;\n\n  const validateFile = (file: File): boolean => {\n    // Check file size\n    if (file.size > maxSize * 1024 * 1024) {\n      toast({\n        title: \"File too large\",\n        description: `File size must be less than ${maxSize}MB`,\n        variant: \"destructive\"\n      });\n      return false;\n    }\n\n    // Check file type if accept is specified\n    if (accept && accept !== \"*/*\") {\n      const acceptedTypes = accept.split(',').map((type) => type.trim());\n      const isAccepted = acceptedTypes.some((type) => {\n        if (type.startsWith('.')) {\n          return file.name.toLowerCase().endsWith(type.toLowerCase());\n        } else if (type.includes('*')) {\n          const baseType = type.split('/')[0];\n          return file.type.startsWith(baseType);\n        } else {\n          return file.type === type;\n        }\n      });\n\n      if (!isAccepted) {\n        toast({\n          title: \"Invalid file type\",\n          description: `Please select a file of type: ${accept}`,\n          variant: \"destructive\"\n        });\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const processFile = async (file: File) => {\n    // Check if it's an image and larger than 1MB\n    const needsCompression = isImageFile(file) && file.size > 1024 * 1024;\n\n    if (needsCompression) {\n      setIsCompressing(true);\n      try {\n        const result = await compressImage(file, {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1920,\n          quality: 0.8,\n          initialQuality: 0.8\n        });\n\n        setCompressionResult(result);\n\n        if (result.wasCompressed) {\n          toast({\n            title: \"Image compressed\",\n            description: `File size reduced from ${formatFileSize(result.originalSize)} to ${formatFileSize(result.compressedSize)} (${result.compressionRatio.toFixed(1)}x smaller)`,\n            duration: 5000\n          });\n        }\n\n        onFileSelect(result.file);\n        setIsOpen(false);\n      } catch (error) {\n        console.error('Compression failed:', error);\n        toast({\n          title: \"Compression failed\",\n          description: \"Using original file instead\",\n          variant: \"destructive\"\n        });\n        onFileSelect(file);\n        setIsOpen(false);\n      } finally {\n        setIsCompressing(false);\n      }\n    } else {\n      onFileSelect(file);\n      setIsOpen(false);\n      toast({\n        title: \"File selected\",\n        description: `${file.name} has been selected successfully`\n      });\n    }\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && validateFile(file)) {\n      await processFile(file);\n    }\n    // Reset input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const startCamera = async () => {\n    setIsCameraLoading(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n          facingMode: 'environment' // Use back camera on mobile if available\n        }\n      });\n\n      setCameraStream(stream);\n      setShowCamera(true);\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      toast({\n        title: \"Camera access denied\",\n        description: \"Please allow camera access to take photos\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsCameraLoading(false);\n    }\n  };\n\n  const stopCamera = () => {\n    if (cameraStream) {\n      cameraStream.getTracks().forEach((track) => track.stop());\n      setCameraStream(null);\n    }\n    setShowCamera(false);\n    setCapturedImage(null);\n  };\n\n  const capturePhoto = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      if (context) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        context.drawImage(video, 0, 0);\n\n        const imageDataUrl = canvas.toDataURL('image/jpeg', 0.8);\n        setCapturedImage(imageDataUrl);\n      }\n    }\n  };\n\n  const confirmCapture = async () => {\n    if (capturedImage && canvasRef.current) {\n      canvasRef.current.toBlob(async (blob) => {\n        if (blob) {\n          const file = new File([blob], `captured-${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n\n          if (validateFile(file)) {\n            stopCamera();\n            await processFile(file);\n            toast({\n              title: \"Photo captured\",\n              description: \"Photo has been captured successfully\"\n            });\n          }\n        }\n      }, 'image/jpeg', 0.8);\n    }\n  };\n\n  const retakePhoto = () => {\n    setCapturedImage(null);\n  };\n\n  const closeDialog = () => {\n    stopCamera();\n    setIsOpen(false);\n  };\n\n  const getFileIcon = () => {\n    if (isImageUpload) {\n      return <Image className=\"h-4 w-4\" data-id=\"s00ni63sv\" data-path=\"src/components/EnhancedFileUpload.tsx\" />;\n    }\n    return <FileText className=\"h-4 w-4\" data-id=\"qshbpzxgb\" data-path=\"src/components/EnhancedFileUpload.tsx\" />;\n  };\n\n  return (\n    <div className={className} data-id=\"28a897lqr\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n      <Dialog open={isOpen} onOpenChange={setIsOpen} data-id=\"bepxqjckf\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n        <DialogTrigger asChild data-id=\"z3faij0d2\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n          <Button\n            variant=\"outline\"\n            disabled={disabled}\n            className=\"w-full flex items-center gap-2\" data-id=\"t1rspq6qi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n            {getFileIcon()}\n            {label}\n          </Button>\n        </DialogTrigger>\n        \n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\" data-id=\"9mn6e0kph\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n          <DialogHeader data-id=\"bt6bnsl33\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n            <DialogTitle className=\"flex items-center gap-2\" data-id=\"t8cim5qfq\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              {getFileIcon()}\n              {label}\n            </DialogTitle>\n          </DialogHeader>\n\n          {!showCamera ?\n          <div className=\"space-y-4\" data-id=\"ajndwulj2\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              {/* Current file display */}\n              {currentFile &&\n            <Card data-id=\"6a3smxs3r\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-4\" data-id=\"pd6aksu51\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center justify-between\" data-id=\"i6hki4rpq\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <span className=\"text-sm text-gray-600\" data-id=\"szbtuxohh\" data-path=\"src/components/EnhancedFileUpload.tsx\">Current file:</span>\n                      <Badge variant=\"secondary\" data-id=\"iae45fgy2\" data-path=\"src/components/EnhancedFileUpload.tsx\">{currentFile}</Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n            }\n\n              {/* Upload options */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\" data-id=\"r9vlqzkb6\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {/* File upload option */}\n                <Card className=\"cursor-pointer hover:bg-gray-50 transition-colors\" data-id=\"h91w96m2g\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-6\" data-id=\"otelxb92x\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <Button\n                    variant=\"ghost\"\n                    className=\"w-full h-auto p-0 flex flex-col items-center gap-3\"\n                    onClick={() => fileInputRef.current?.click()} data-id=\"ge5fl7cm8\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n                      <div className=\"p-4 bg-blue-100 rounded-full\" data-id=\"beki9ayfi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <Upload className=\"h-8 w-8 text-blue-600\" data-id=\"uovt8mj4f\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      </div>\n                      <div className=\"text-center\" data-id=\"vjfu6smw8\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <h3 className=\"font-semibold\" data-id=\"25bza49x8\" data-path=\"src/components/EnhancedFileUpload.tsx\">Upload From File</h3>\n                        <p className=\"text-sm text-gray-500 mt-1\" data-id=\"escx2h8bs\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          Choose a file from your device\n                        </p>\n                      </div>\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                {/* Camera option */}\n                {shouldShowCamera &&\n              <Card className=\"cursor-pointer hover:bg-gray-50 transition-colors\" data-id=\"afan0j4jm\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <CardContent className=\"p-6\" data-id=\"imwm0gy0s\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Button\n                    variant=\"ghost\"\n                    className=\"w-full h-auto p-0 flex flex-col items-center gap-3\"\n                    onClick={startCamera}\n                    disabled={isCameraLoading} data-id=\"b85cnn2vi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n                        <div className=\"p-4 bg-green-100 rounded-full\" data-id=\"lnix4ai1o\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          <Camera className=\"h-8 w-8 text-green-600\" data-id=\"tncve2dth\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                        </div>\n                        <div className=\"text-center\" data-id=\"ebsr6zrgi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          <h3 className=\"font-semibold\" data-id=\"kzmlckl5i\" data-path=\"src/components/EnhancedFileUpload.tsx\">Take A Picture</h3>\n                          <p className=\"text-sm text-gray-500 mt-1\" data-id=\"54zw6iu52\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                            {isCameraLoading ? 'Loading camera...' : 'Use your camera to capture'}\n                          </p>\n                        </div>\n                      </Button>\n                    </CardContent>\n                </Card>\n              }\n              </div>\n\n              {/* Compression status */}\n              {isCompressing &&\n            <Card className=\"border-blue-200 bg-blue-50\" data-id=\"orgi2knzb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-4\" data-id=\"u3nhnobw1\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center gap-3\" data-id=\"w58roef90\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Loader2 className=\"h-5 w-5 animate-spin text-blue-600\" data-id=\"3bbqg8m6o\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      <div data-id=\"lzgckt22h\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <p className=\"font-medium text-blue-800\" data-id=\"jbnh98nc2\" data-path=\"src/components/EnhancedFileUpload.tsx\">Compressing image...</p>\n                        <p className=\"text-sm text-blue-600\" data-id=\"jjwtng8jt\" data-path=\"src/components/EnhancedFileUpload.tsx\">Optimizing file size for better performance</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n            }\n\n              {/* File type info */}\n              <div className=\"text-center text-sm text-gray-500\" data-id=\"72b9ko7qb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                <p data-id=\"j5om62lms\" data-path=\"src/components/EnhancedFileUpload.tsx\">Accepted file types: {accept}</p>\n                <p data-id=\"frapsjolz\" data-path=\"src/components/EnhancedFileUpload.tsx\">Maximum file size: {maxSize}MB</p>\n                {isImageFile({ type: accept } as File) &&\n              <div className=\"mt-2 p-2 bg-green-50 rounded-lg border border-green-200\" data-id=\"d6e1rbnh5\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center justify-center gap-2 text-green-700\" data-id=\"58uwv7s4q\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Zap className=\"h-4 w-4\" data-id=\"eowz576wz\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      <span className=\"text-xs font-medium\" data-id=\"b7ml71nrw\" data-path=\"src/components/EnhancedFileUpload.tsx\">Auto-compression enabled for images &gt;1MB</span>\n                    </div>\n                  </div>\n              }\n              </div>\n            </div> : (\n\n          /* Camera interface */\n          <div className=\"space-y-4\" data-id=\"e9h50j0qb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              <div className=\"flex items-center justify-between\" data-id=\"yjfg4olcu\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                <h3 className=\"text-lg font-semibold\" data-id=\"wavuww0ah\" data-path=\"src/components/EnhancedFileUpload.tsx\">Camera</h3>\n                <Button variant=\"ghost\" size=\"sm\" onClick={closeDialog} data-id=\"2pefry38n\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <X className=\"h-4 w-4\" data-id=\"4lgdm8ags\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                </Button>\n              </div>\n\n              <div className=\"relative bg-black rounded-lg overflow-hidden\" data-id=\"l1bwqp81w\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {!capturedImage ?\n              <video\n                ref={videoRef}\n                autoPlay\n                playsInline\n                className=\"w-full h-64 md:h-96 object-cover\" data-id=\"v9u3clu7c\" data-path=\"src/components/EnhancedFileUpload.tsx\" /> :\n\n\n              <img\n                src={capturedImage}\n                alt=\"Captured\"\n                className=\"w-full h-64 md:h-96 object-cover\" data-id=\"5if3pxpxy\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n\n              }\n                \n                {/* Hidden canvas for capture */}\n                <canvas ref={canvasRef} className=\"hidden\" data-id=\"tlhxi398w\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n              </div>\n\n              <div className=\"flex justify-center gap-4\" data-id=\"6yfmmbhry\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {!capturedImage ?\n              <>\n                    <Button onClick={capturePhoto} className=\"flex items-center gap-2\" data-id=\"2ei8u6uhx\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Camera className=\"h-4 w-4\" data-id=\"gy6hdxk3j\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Capture\n                    </Button>\n                    <Button variant=\"outline\" onClick={stopCamera} data-id=\"18j6yyzci\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      Cancel\n                    </Button>\n                  </> :\n\n              <>\n                    <Button onClick={confirmCapture} className=\"flex items-center gap-2\" data-id=\"ayvxnzku1\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Check className=\"h-4 w-4\" data-id=\"tfsxgolu8\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Use This Photo\n                    </Button>\n                    <Button variant=\"outline\" onClick={retakePhoto} className=\"flex items-center gap-2\" data-id=\"dbatyj76m\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <RotateCcw className=\"h-4 w-4\" data-id=\"3u9t16jif\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Retake\n                    </Button>\n                  </>\n              }\n              </div>\n            </div>)\n          }\n        </DialogContent>\n      </Dialog>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept={accept}\n        onChange={handleFileSelect}\n        className=\"hidden\" data-id=\"y897ysif0\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n\n    </div>);\n\n};\n\nexport default EnhancedFileUpload;\n"],"names":["Image","createLucideIcon","isImageFile","file","formatFileSize","bytes","k","sizes","i","createCanvas","width","height","canvas","calculateDimensions","originalWidth","originalHeight","maxWidthOrHeight","aspectRatio","loadImage","resolve","reject","img","compressImageWithCanvas","options","ctx","blob","compressToTargetSize","targetSizeMB","quality","attempts","maxAttempts","targetSizeBytes","getCompressionSettings","saved","settings","error","isCompressionEnabled","compressImage","finalOptions","originalSize","compressedBlob","compressedFile","compressedSize","compressionRatio","EnhancedFileUpload","onFileSelect","accept","label","currentFile","maxSize","className","disabled","allowCamera","isOpen","setIsOpen","useState","showCamera","setShowCamera","cameraStream","setCameraStream","capturedImage","setCapturedImage","isCameraLoading","setIsCameraLoading","isCompressing","setIsCompressing","compressionResult","setCompressionResult","fileInputRef","useRef","videoRef","canvasRef","toast","useToast","isImageUpload","shouldShowCamera","validateFile","type","baseType","processFile","result","handleFileSelect","event","_a","startCamera","stream","stopCamera","track","capturePhoto","video","context","imageDataUrl","confirmCapture","retakePhoto","closeDialog","getFileIcon","FileText","jsxs","Dialog","jsx","DialogTrigger","Button","DialogContent","DialogHeader","DialogTitle","X","Fragment","Check","RotateCcw","Camera","Card","CardContent","Badge","Upload","Loader2","Zap"],"mappings":"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","x_google_ignoreList":[0]}