version: '3.8'

services:
  dfs-manager-portal:
    build: 
      context: .
      target: production
    container_name: dfs-manager-portal
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - VITE_APP_ENVIRONMENT=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - dfs-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # SSL-enabled reverse proxy for production
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      dfs-manager-portal:
        condition: service_healthy
    networks:
      - dfs-network
    profiles:
      - ssl
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring and logging (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: dfs-manager-portal nginx-proxy --schedule "0 2 * * *"
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  dfs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  ssl-certs:
    driver: local