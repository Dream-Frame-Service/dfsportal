{"version":3,"file":"EnhancedFileUpload-5F724uXn.js","sources":["../../node_modules/lucide-react/dist/esm/icons/image.js","../../src/utils/imageCompression.ts","../../src/components/EnhancedFileUpload.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Image = createLucideIcon(\"Image\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n]);\n\nexport { Image as default };\n//# sourceMappingURL=image.js.map\n","/**\n * Image compression utility for handling large image files\n * Automatically compresses images over 1MB while maintaining quality\n */\n\nexport interface CompressionOptions {\n  maxSizeMB: number;\n  maxWidthOrHeight?: number;\n  useWebWorker?: boolean;\n  quality?: number;\n  initialQuality?: number;\n  alwaysKeepResolution?: boolean;\n}\n\nexport interface CompressionResult {\n  file: File;\n  originalSize: number;\n  compressedSize: number;\n  compressionRatio: number;\n  wasCompressed: boolean;\n}\n\n/**\n * Check if a file is an image\n */\nexport const isImageFile = (file: File): boolean => {\n  return file.type.startsWith('image/');\n};\n\n/**\n * Convert file size to human readable format\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))  } ${  sizes[i]}`;\n};\n\n/**\n * Create a canvas element for image manipulation\n */\nconst createCanvas = (width: number, height: number): HTMLCanvasElement => {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\n/**\n * Calculate new dimensions while maintaining aspect ratio\n */\nconst calculateDimensions = (\noriginalWidth: number,\noriginalHeight: number,\nmaxWidthOrHeight?: number)\n: {width: number;height: number;} => {\n  if (!maxWidthOrHeight || originalWidth <= maxWidthOrHeight && originalHeight <= maxWidthOrHeight) {\n    return { width: originalWidth, height: originalHeight };\n  }\n\n  const aspectRatio = originalWidth / originalHeight;\n\n  if (originalWidth > originalHeight) {\n    return {\n      width: maxWidthOrHeight,\n      height: Math.round(maxWidthOrHeight / aspectRatio)\n    };\n  } else {\n    return {\n      width: Math.round(maxWidthOrHeight * aspectRatio),\n      height: maxWidthOrHeight\n    };\n  }\n};\n\n/**\n * Load image from file\n */\nconst loadImage = (file: File): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = () => reject(new Error('Failed to load image'));\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Compress image using canvas\n */\nconst compressImageWithCanvas = (\nimg: HTMLImageElement,\noptions: CompressionOptions)\n: Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    const { width, height } = calculateDimensions(\n      img.naturalWidth,\n      img.naturalHeight,\n      options.maxWidthOrHeight\n    );\n\n    const canvas = createCanvas(width, height);\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx) {\n      reject(new Error('Could not get canvas context'));\n      return;\n    }\n\n    // Set canvas drawing properties for better quality\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    // Draw the image\n    ctx.drawImage(img, 0, 0, width, height);\n\n    // Convert to blob with quality\n    canvas.toBlob(\n      (blob) => {\n        if (blob) {\n          resolve(blob);\n        } else {\n          reject(new Error('Failed to compress image'));\n        }\n      },\n      'image/jpeg',\n      options.quality || 0.8\n    );\n  });\n};\n\n/**\n * Iteratively compress image until target size is reached\n */\nconst compressToTargetSize = async (\nimg: HTMLImageElement,\ntargetSizeMB: number,\noptions: CompressionOptions)\n: Promise<Blob> => {\n  let quality = options.initialQuality || 0.8;\n  let blob: Blob;\n  let attempts = 0;\n  const maxAttempts = 10;\n  const targetSizeBytes = targetSizeMB * 1024 * 1024;\n\n  do {\n    blob = await compressImageWithCanvas(img, { ...options, quality });\n\n    if (blob.size <= targetSizeBytes || attempts >= maxAttempts) {\n      break;\n    }\n\n    // Reduce quality for next attempt\n    quality = Math.max(0.1, quality - 0.1);\n    attempts++;\n  } while (attempts < maxAttempts);\n\n  return blob;\n};\n\n/**\n * Get compression settings from localStorage\n */\nconst getCompressionSettings = (): CompressionOptions => {\n  try {\n    const saved = localStorage.getItem('imageCompressionSettings');\n    if (saved) {\n      const settings = JSON.parse(saved);\n      return {\n        maxSizeMB: settings.maxSizeMB || 1,\n        maxWidthOrHeight: settings.maxResolution || 1920,\n        quality: settings.quality || 0.8,\n        initialQuality: settings.quality || 0.8,\n        useWebWorker: false,\n        alwaysKeepResolution: false\n      };\n    }\n  } catch (error) {\n    console.error('Failed to load compression settings:', error);\n  }\n\n  // Return defaults if no settings found\n  return {\n    maxSizeMB: 1,\n    maxWidthOrHeight: 1920,\n    quality: 0.8,\n    initialQuality: 0.8,\n    useWebWorker: false,\n    alwaysKeepResolution: false\n  };\n};\n\n/**\n * Check if compression is enabled\n */\nconst isCompressionEnabled = (): boolean => {\n  try {\n    const saved = localStorage.getItem('imageCompressionSettings');\n    if (saved) {\n      const settings = JSON.parse(saved);\n      return settings.enabled !== false; // Default to true\n    }\n  } catch (error) {\n    console.error('Failed to load compression settings:', error);\n  }\n  return true; // Default to enabled\n};\n\n/**\n * Main compression function\n */\nexport const compressImage = async (\nfile: File,\noptions?: Partial<CompressionOptions>)\n: Promise<CompressionResult> => {\n  // Get settings from localStorage or use provided options\n  const savedSettings = getCompressionSettings();\n  const finalOptions = { ...savedSettings, ...options };\n\n  const originalSize = file.size;\n  const targetSizeMB = finalOptions.maxSizeMB;\n  const targetSizeBytes = targetSizeMB * 1024 * 1024;\n\n  // Check if compression is enabled\n  if (!isCompressionEnabled()) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  // Check if file is an image\n  if (!isImageFile(file)) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  // Check if compression is needed\n  const autoCompress = (() => {\n    try {\n      const saved = localStorage.getItem('imageCompressionSettings');\n      return saved ? JSON.parse(saved).autoCompress : false;\n    } catch {\n      return false;\n    }\n  })();\n\n  if (!autoCompress && originalSize <= targetSizeBytes) {\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n\n  try {\n    // Load the image\n    const img = await loadImage(file);\n\n    // Compress the image\n    const compressedBlob = await compressToTargetSize(img, targetSizeMB, finalOptions);\n\n    // Create new file from compressed blob\n    const compressedFile = new File(\n      [compressedBlob],\n      file.name.replace(/\\.[^/.]+$/, '.jpg'), // Change extension to jpg\n      {\n        type: 'image/jpeg',\n        lastModified: Date.now()\n      }\n    );\n\n    const compressedSize = compressedFile.size;\n    const compressionRatio = originalSize / compressedSize;\n\n    // Clean up object URL\n    URL.revokeObjectURL(img.src);\n\n    return {\n      file: compressedFile,\n      originalSize,\n      compressedSize,\n      compressionRatio,\n      wasCompressed: true\n    };\n  } catch (error) {\n    console.error('Image compression failed:', error);\n\n    // Return original file if compression fails\n    return {\n      file,\n      originalSize,\n      compressedSize: originalSize,\n      compressionRatio: 1,\n      wasCompressed: false\n    };\n  }\n};\n\n/**\n * Batch compress multiple images\n */\nexport const compressImages = async (\nfiles: File[],\noptions: CompressionOptions = { maxSizeMB: 1 })\n: Promise<CompressionResult[]> => {\n  const results: CompressionResult[] = [];\n\n  for (const file of files) {\n    const result = await compressImage(file, options);\n    results.push(result);\n  }\n\n  return results;\n};\n\n/**\n * Get compression statistics\n */\nexport const getCompressionStats = (results: CompressionResult[]) => {\n  const totalOriginalSize = results.reduce((sum, result) => sum + result.originalSize, 0);\n  const totalCompressedSize = results.reduce((sum, result) => sum + result.compressedSize, 0);\n  const compressedCount = results.filter((result) => result.wasCompressed).length;\n\n  return {\n    totalOriginalSize,\n    totalCompressedSize,\n    totalSavings: totalOriginalSize - totalCompressedSize,\n    averageCompressionRatio: totalOriginalSize / totalCompressedSize,\n    compressedCount,\n    totalCount: results.length\n  };\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Upload, Camera, FileText, Image, X, RotateCcw, Check, Loader2, Zap } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { compressImage, formatFileSize, isImageFile, type CompressionResult } from '@/utils/imageCompression';\n\ninterface EnhancedFileUploadProps {\n  onFileSelect: (file: File) => void;\n  accept?: string;\n  label?: string;\n  currentFile?: string;\n  maxSize?: number; // in MB\n  className?: string;\n  disabled?: boolean;\n  allowCamera?: boolean; // Option to disable camera for non-image uploads\n}\n\nconst EnhancedFileUpload: React.FC<EnhancedFileUploadProps> = ({\n  onFileSelect,\n  accept = \"image/*\",\n  label = \"Upload File\",\n  currentFile,\n  maxSize = 10,\n  className = \"\",\n  disabled = false,\n  allowCamera = true\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [showCamera, setShowCamera] = useState(false);\n  const [cameraStream, setCameraStream] = useState<MediaStream | null>(null);\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n  const [isCameraLoading, setIsCameraLoading] = useState(false);\n  const [isCompressing, setIsCompressing] = useState(false);\n  const [compressionResult, setCompressionResult] = useState<CompressionResult | null>(null);\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { toast } = useToast();\n\n  // Check if the accept type includes images\n  const isImageUpload = accept.includes('image');\n  const shouldShowCamera = allowCamera && isImageUpload;\n\n  const validateFile = (file: File): boolean => {\n    // Check file size\n    if (file.size > maxSize * 1024 * 1024) {\n      toast({\n        title: \"File too large\",\n        description: `File size must be less than ${maxSize}MB`,\n        variant: \"destructive\"\n      });\n      return false;\n    }\n\n    // Check file type if accept is specified\n    if (accept && accept !== \"*/*\") {\n      const acceptedTypes = accept.split(',').map((type) => type.trim());\n      const isAccepted = acceptedTypes.some((type) => {\n        if (type.startsWith('.')) {\n          return file.name.toLowerCase().endsWith(type.toLowerCase());\n        } else if (type.includes('*')) {\n          const baseType = type.split('/')[0];\n          return file.type.startsWith(baseType);\n        } else {\n          return file.type === type;\n        }\n      });\n\n      if (!isAccepted) {\n        toast({\n          title: \"Invalid file type\",\n          description: `Please select a file of type: ${accept}`,\n          variant: \"destructive\"\n        });\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const processFile = async (file: File) => {\n    // Check if it's an image and larger than 1MB\n    const needsCompression = isImageFile(file) && file.size > 1024 * 1024;\n\n    if (needsCompression) {\n      setIsCompressing(true);\n      try {\n        const result = await compressImage(file, {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1920,\n          quality: 0.8,\n          initialQuality: 0.8\n        });\n\n        setCompressionResult(result);\n\n        if (result.wasCompressed) {\n          toast({\n            title: \"Image compressed\",\n            description: `File size reduced from ${formatFileSize(result.originalSize)} to ${formatFileSize(result.compressedSize)} (${result.compressionRatio.toFixed(1)}x smaller)`,\n            duration: 5000\n          });\n        }\n\n        onFileSelect(result.file);\n        setIsOpen(false);\n      } catch (error) {\n        console.error('Compression failed:', error);\n        toast({\n          title: \"Compression failed\",\n          description: \"Using original file instead\",\n          variant: \"destructive\"\n        });\n        onFileSelect(file);\n        setIsOpen(false);\n      } finally {\n        setIsCompressing(false);\n      }\n    } else {\n      onFileSelect(file);\n      setIsOpen(false);\n      toast({\n        title: \"File selected\",\n        description: `${file.name} has been selected successfully`\n      });\n    }\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && validateFile(file)) {\n      await processFile(file);\n    }\n    // Reset input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const startCamera = async () => {\n    setIsCameraLoading(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n          facingMode: 'environment' // Use back camera on mobile if available\n        }\n      });\n\n      setCameraStream(stream);\n      setShowCamera(true);\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      toast({\n        title: \"Camera access denied\",\n        description: \"Please allow camera access to take photos\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsCameraLoading(false);\n    }\n  };\n\n  const stopCamera = () => {\n    if (cameraStream) {\n      cameraStream.getTracks().forEach((track) => track.stop());\n      setCameraStream(null);\n    }\n    setShowCamera(false);\n    setCapturedImage(null);\n  };\n\n  const capturePhoto = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      if (context) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        context.drawImage(video, 0, 0);\n\n        const imageDataUrl = canvas.toDataURL('image/jpeg', 0.8);\n        setCapturedImage(imageDataUrl);\n      }\n    }\n  };\n\n  const confirmCapture = async () => {\n    if (capturedImage && canvasRef.current) {\n      canvasRef.current.toBlob(async (blob) => {\n        if (blob) {\n          const file = new File([blob], `captured-${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n\n          if (validateFile(file)) {\n            stopCamera();\n            await processFile(file);\n            toast({\n              title: \"Photo captured\",\n              description: \"Photo has been captured successfully\"\n            });\n          }\n        }\n      }, 'image/jpeg', 0.8);\n    }\n  };\n\n  const retakePhoto = () => {\n    setCapturedImage(null);\n  };\n\n  const closeDialog = () => {\n    stopCamera();\n    setIsOpen(false);\n  };\n\n  const getFileIcon = () => {\n    if (isImageUpload) {\n      return <Image className=\"h-4 w-4\" data-id=\"s00ni63sv\" data-path=\"src/components/EnhancedFileUpload.tsx\" />;\n    }\n    return <FileText className=\"h-4 w-4\" data-id=\"qshbpzxgb\" data-path=\"src/components/EnhancedFileUpload.tsx\" />;\n  };\n\n  return (\n    <div className={className} data-id=\"28a897lqr\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n      <Dialog open={isOpen} onOpenChange={setIsOpen} data-id=\"bepxqjckf\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n        <DialogTrigger asChild data-id=\"z3faij0d2\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n          <Button\n            variant=\"outline\"\n            disabled={disabled}\n            className=\"w-full flex items-center gap-2\" data-id=\"t1rspq6qi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n            {getFileIcon()}\n            {label}\n          </Button>\n        </DialogTrigger>\n        \n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\" data-id=\"9mn6e0kph\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n          <DialogHeader data-id=\"bt6bnsl33\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n            <DialogTitle className=\"flex items-center gap-2\" data-id=\"t8cim5qfq\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              {getFileIcon()}\n              {label}\n            </DialogTitle>\n          </DialogHeader>\n\n          {!showCamera ?\n          <div className=\"space-y-4\" data-id=\"ajndwulj2\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              {/* Current file display */}\n              {currentFile &&\n            <Card data-id=\"6a3smxs3r\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-4\" data-id=\"pd6aksu51\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center justify-between\" data-id=\"i6hki4rpq\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <span className=\"text-sm text-gray-600\" data-id=\"szbtuxohh\" data-path=\"src/components/EnhancedFileUpload.tsx\">Current file:</span>\n                      <Badge variant=\"secondary\" data-id=\"iae45fgy2\" data-path=\"src/components/EnhancedFileUpload.tsx\">{currentFile}</Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n            }\n\n              {/* Upload options */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\" data-id=\"r9vlqzkb6\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {/* File upload option */}\n                <Card className=\"cursor-pointer hover:bg-gray-50 transition-colors\" data-id=\"h91w96m2g\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-6\" data-id=\"otelxb92x\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <Button\n                    variant=\"ghost\"\n                    className=\"w-full h-auto p-0 flex flex-col items-center gap-3\"\n                    onClick={() => fileInputRef.current?.click()} data-id=\"ge5fl7cm8\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n                      <div className=\"p-4 bg-blue-100 rounded-full\" data-id=\"beki9ayfi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <Upload className=\"h-8 w-8 text-blue-600\" data-id=\"uovt8mj4f\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      </div>\n                      <div className=\"text-center\" data-id=\"vjfu6smw8\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <h3 className=\"font-semibold\" data-id=\"25bza49x8\" data-path=\"src/components/EnhancedFileUpload.tsx\">Upload From File</h3>\n                        <p className=\"text-sm text-gray-500 mt-1\" data-id=\"escx2h8bs\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          Choose a file from your device\n                        </p>\n                      </div>\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                {/* Camera option */}\n                {shouldShowCamera &&\n              <Card className=\"cursor-pointer hover:bg-gray-50 transition-colors\" data-id=\"afan0j4jm\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <CardContent className=\"p-6\" data-id=\"imwm0gy0s\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Button\n                    variant=\"ghost\"\n                    className=\"w-full h-auto p-0 flex flex-col items-center gap-3\"\n                    onClick={startCamera}\n                    disabled={isCameraLoading} data-id=\"b85cnn2vi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n\n                        <div className=\"p-4 bg-green-100 rounded-full\" data-id=\"lnix4ai1o\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          <Camera className=\"h-8 w-8 text-green-600\" data-id=\"tncve2dth\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                        </div>\n                        <div className=\"text-center\" data-id=\"ebsr6zrgi\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                          <h3 className=\"font-semibold\" data-id=\"kzmlckl5i\" data-path=\"src/components/EnhancedFileUpload.tsx\">Take A Picture</h3>\n                          <p className=\"text-sm text-gray-500 mt-1\" data-id=\"54zw6iu52\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                            {isCameraLoading ? 'Loading camera...' : 'Use your camera to capture'}\n                          </p>\n                        </div>\n                      </Button>\n                    </CardContent>\n                </Card>\n              }\n              </div>\n\n              {/* Compression status */}\n              {isCompressing &&\n            <Card className=\"border-blue-200 bg-blue-50\" data-id=\"orgi2knzb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <CardContent className=\"p-4\" data-id=\"u3nhnobw1\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center gap-3\" data-id=\"w58roef90\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Loader2 className=\"h-5 w-5 animate-spin text-blue-600\" data-id=\"3bbqg8m6o\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      <div data-id=\"lzgckt22h\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                        <p className=\"font-medium text-blue-800\" data-id=\"jbnh98nc2\" data-path=\"src/components/EnhancedFileUpload.tsx\">Compressing image...</p>\n                        <p className=\"text-sm text-blue-600\" data-id=\"jjwtng8jt\" data-path=\"src/components/EnhancedFileUpload.tsx\">Optimizing file size for better performance</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n            }\n\n              {/* File type info */}\n              <div className=\"text-center text-sm text-gray-500\" data-id=\"72b9ko7qb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                <p data-id=\"j5om62lms\" data-path=\"src/components/EnhancedFileUpload.tsx\">Accepted file types: {accept}</p>\n                <p data-id=\"frapsjolz\" data-path=\"src/components/EnhancedFileUpload.tsx\">Maximum file size: {maxSize}MB</p>\n                {isImageFile({ type: accept } as File) &&\n              <div className=\"mt-2 p-2 bg-green-50 rounded-lg border border-green-200\" data-id=\"d6e1rbnh5\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                    <div className=\"flex items-center justify-center gap-2 text-green-700\" data-id=\"58uwv7s4q\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Zap className=\"h-4 w-4\" data-id=\"eowz576wz\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      <span className=\"text-xs font-medium\" data-id=\"b7ml71nrw\" data-path=\"src/components/EnhancedFileUpload.tsx\">Auto-compression enabled for images &gt;1MB</span>\n                    </div>\n                  </div>\n              }\n              </div>\n            </div> : (\n\n          /* Camera interface */\n          <div className=\"space-y-4\" data-id=\"e9h50j0qb\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n              <div className=\"flex items-center justify-between\" data-id=\"yjfg4olcu\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                <h3 className=\"text-lg font-semibold\" data-id=\"wavuww0ah\" data-path=\"src/components/EnhancedFileUpload.tsx\">Camera</h3>\n                <Button variant=\"ghost\" size=\"sm\" onClick={closeDialog} data-id=\"2pefry38n\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                  <X className=\"h-4 w-4\" data-id=\"4lgdm8ags\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                </Button>\n              </div>\n\n              <div className=\"relative bg-black rounded-lg overflow-hidden\" data-id=\"l1bwqp81w\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {!capturedImage ?\n              <video\n                ref={videoRef}\n                autoPlay\n                playsInline\n                className=\"w-full h-64 md:h-96 object-cover\" data-id=\"v9u3clu7c\" data-path=\"src/components/EnhancedFileUpload.tsx\" /> :\n\n\n              <img\n                src={capturedImage}\n                alt=\"Captured\"\n                className=\"w-full h-64 md:h-96 object-cover\" data-id=\"5if3pxpxy\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n\n              }\n                \n                {/* Hidden canvas for capture */}\n                <canvas ref={canvasRef} className=\"hidden\" data-id=\"tlhxi398w\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n              </div>\n\n              <div className=\"flex justify-center gap-4\" data-id=\"6yfmmbhry\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                {!capturedImage ?\n              <>\n                    <Button onClick={capturePhoto} className=\"flex items-center gap-2\" data-id=\"2ei8u6uhx\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Camera className=\"h-4 w-4\" data-id=\"gy6hdxk3j\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Capture\n                    </Button>\n                    <Button variant=\"outline\" onClick={stopCamera} data-id=\"18j6yyzci\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      Cancel\n                    </Button>\n                  </> :\n\n              <>\n                    <Button onClick={confirmCapture} className=\"flex items-center gap-2\" data-id=\"ayvxnzku1\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <Check className=\"h-4 w-4\" data-id=\"tfsxgolu8\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Use This Photo\n                    </Button>\n                    <Button variant=\"outline\" onClick={retakePhoto} className=\"flex items-center gap-2\" data-id=\"dbatyj76m\" data-path=\"src/components/EnhancedFileUpload.tsx\">\n                      <RotateCcw className=\"h-4 w-4\" data-id=\"3u9t16jif\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n                      Retake\n                    </Button>\n                  </>\n              }\n              </div>\n            </div>)\n          }\n        </DialogContent>\n      </Dialog>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept={accept}\n        onChange={handleFileSelect}\n        className=\"hidden\" data-id=\"y897ysif0\" data-path=\"src/components/EnhancedFileUpload.tsx\" />\n\n    </div>);\n\n};\n\nexport default EnhancedFileUpload;\n"],"names":["Image","useState","useRef","jsxs","jsx","Fragment"],"mappings":"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","x_google_ignoreList":[0]}